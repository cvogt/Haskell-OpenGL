[ 1 of 17] Compiling Engine.Terrain.Noise ( Engine/Terrain/Noise.hs, Engine/Terrain/Noise.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 2,10, types: 1,758, coercions: 502}

Engine.Terrain.Noise.simplexNoise3 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Noise.simplexNoise3 = GHC.Types.I# 100

Engine.Terrain.Noise.grad29 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Noise.grad29 = GHC.Types.I# 0

Engine.Terrain.Noise.simplexNoise2
  :: (GHC.Types.Int, GHC.Types.Int)
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.simplexNoise2 =
  (Engine.Terrain.Noise.grad29, Engine.Terrain.Noise.simplexNoise3)

Rec {
Engine.Terrain.Noise.perm4 [Occ=LoopBreaker]
  :: forall s_a3LQ.
     Data.Vector.Fusion.Stream.Monadic.SPEC
     -> (Data.Vector.Generic.Base.Mutable
           Data.Vector.Unboxed.Base.Vector
           (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
           GHC.Types.Int,
         GHC.Types.Int)
     -> [GHC.Types.Int]
     -> GHC.Prim.State# s_a3LQ
     -> (# GHC.Prim.State# s_a3LQ,
           (Data.Vector.Generic.Base.Mutable
              Data.Vector.Unboxed.Base.Vector
              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
              GHC.Types.Int,
            GHC.Types.Int) #)
[GblId, Arity=4, Caf=NoCafRefs, Str=DmdType SLSL]
Engine.Terrain.Noise.perm4 =
  \ (@ s_a3LQ)
    (sPEC_a3NL :: Data.Vector.Fusion.Stream.Monadic.SPEC)
    (z1_a3NM
       :: (Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
             GHC.Types.Int,
           GHC.Types.Int))
    (s3_a3NN :: [GHC.Types.Int])
    (eta_B1 :: GHC.Prim.State# s_a3LQ) ->
    case sPEC_a3NL of _ { __DEFAULT ->
    case s3_a3NN of _ {
      [] -> (# eta_B1, z1_a3NM #);
      : x_a3Os xs1_a3Ot ->
        case z1_a3NM of _ { (v_a43E, i_a43F) ->
        case i_a43F of _ { GHC.Types.I# x1_a43K ->
        case v_a43E
             `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MutableVector> <Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           s_a3LQ)> <GHC.Types.Int> ; (<Data.Vector.Unboxed.Base.TFCo:R:MVectorsInt
                                                                                                          <Control.Monad.Primitive.PrimState
                                                                                                             (GHC.ST.ST
                                                                                                                s_a3LQ)>> ; <Data.Vector.Unboxed.Base.NTCo:R:MVectorsInt
                                                                                                                               <Control.Monad.Primitive.PrimState
                                                                                                                                  (GHC.ST.ST
                                                                                                                                     s_a3LQ)>>)
                     :: Data.Vector.Generic.Base.Mutable
                          Data.Vector.Unboxed.Base.Vector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Int
                          ~#
                        Data.Vector.Primitive.Mutable.MVector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Int)
        of wild1_a4Rl
        { Data.Vector.Primitive.Mutable.MVector rb_a4Rn
                                                rb1_a4Ro
                                                rb2_a4Rp ->
        case GHC.Prim.<# x1_a43K rb1_a4Ro of _ {
          GHC.Types.False ->
            let {
              $j_s55j
                :: GHC.Prim.Int#
                   -> (# GHC.Prim.State# s_a3LQ,
                         (Data.Vector.Generic.Base.Mutable
                            Data.Vector.Unboxed.Base.Vector
                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            GHC.Types.Int,
                          GHC.Types.Int) #)
              [LclId, Arity=1, Str=DmdType L]
              $j_s55j =
                \ (x2_a4ci :: GHC.Prim.Int#) ->
                  case GHC.Prim.newByteArray#
                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                         (GHC.Prim.*# x2_a4ci 8)
                         (eta_B1
                          `cast` (GHC.Prim.State#
                                    (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                                  :: GHC.Prim.State# s_a3LQ
                                       ~#
                                     GHC.Prim.State#
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))))
                  of _ { (# ipv_a4RL, ipv1_a4RM #) ->
                  case (GHC.Prim.copyMutableByteArray#
                          @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          rb2_a4Rp
                          (GHC.Prim.*# rb_a4Rn 8)
                          ipv1_a4RM
                          0
                          (GHC.Prim.*# rb1_a4Ro 8)
                          ipv_a4RL)
                       `cast` (GHC.Prim.State#
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                               :: GHC.Prim.State#
                                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                    ~#
                                  GHC.Prim.State# s_a3LQ)
                  of ipv2_a4tS { __DEFAULT ->
                  case x_a3Os of _ { GHC.Types.I# x#_a4e4 ->
                  case (GHC.Prim.writeIntArray#
                          @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          ipv1_a4RM
                          x1_a43K
                          x#_a4e4
                          (ipv2_a4tS
                           `cast` (GHC.Prim.State#
                                     (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                                   :: GHC.Prim.State# s_a3LQ
                                        ~#
                                      GHC.Prim.State#
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)))))
                       `cast` (GHC.Prim.State#
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                               :: GHC.Prim.State#
                                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                    ~#
                                  GHC.Prim.State# s_a3LQ)
                  of ipv3_X4wR { __DEFAULT ->
                  Engine.Terrain.Noise.perm4
                    @ s_a3LQ
                    Data.Vector.Fusion.Stream.Monadic.SPEC
                    ((Data.Vector.Primitive.Mutable.MVector
                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                        @ GHC.Types.Int
                        0
                        x2_a4ci
                        ipv1_a4RM)
                     `cast` (Sym
                               <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsInt
                                   <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>)> ; (Sym
                                                                                                 <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsInt
                                                                                                     <Control.Monad.Primitive.PrimState
                                                                                                        (GHC.ST.ST
                                                                                                           s_a3LQ)>)> ; Sym
                                                                                                                          <(Data.Vector.Unboxed.Base.TFCo:R:MutableVector)> <Control.Monad.Primitive.PrimState
                                                                                                                                                                               (GHC.ST.ST
                                                                                                                                                                                  s_a3LQ)> <GHC.Types.Int>)
                             :: Data.Vector.Primitive.Mutable.MVector
                                  (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                  GHC.Types.Int
                                  ~#
                                Data.Vector.Generic.Base.Mutable
                                  Data.Vector.Unboxed.Base.Vector
                                  (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                  GHC.Types.Int),
                     GHC.Types.I# (GHC.Prim.+# x1_a43K 1))
                    xs1_a3Ot
                    ipv3_X4wR
                  }
                  }
                  }
                  } } in
            case GHC.Prim.<=# rb1_a4Ro 1 of _ {
              GHC.Types.False -> $j_s55j (GHC.Prim.+# rb1_a4Ro rb1_a4Ro);
              GHC.Types.True -> $j_s55j (GHC.Prim.+# rb1_a4Ro 1)
            };
          GHC.Types.True ->
            case x_a3Os of _ { GHC.Types.I# x#_a4e4 ->
            case (GHC.Prim.writeIntArray#
                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                    rb2_a4Rp
                    (GHC.Prim.+# rb_a4Rn x1_a43K)
                    x#_a4e4
                    (eta_B1
                     `cast` (GHC.Prim.State#
                               (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                             :: GHC.Prim.State# s_a3LQ
                                  ~#
                                GHC.Prim.State#
                                  (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)))))
                 `cast` (GHC.Prim.State#
                           <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                         :: GHC.Prim.State#
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                              ~#
                            GHC.Prim.State# s_a3LQ)
            of ipv_a4tS { __DEFAULT ->
            Engine.Terrain.Noise.perm4
              @ s_a3LQ
              Data.Vector.Fusion.Stream.Monadic.SPEC
              (wild1_a4Rl
               `cast` (Sym
                         <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsInt
                             <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>)> ; (Sym
                                                                                           <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsInt
                                                                                               <Control.Monad.Primitive.PrimState
                                                                                                  (GHC.ST.ST
                                                                                                     s_a3LQ)>)> ; Sym
                                                                                                                    <(Data.Vector.Unboxed.Base.TFCo:R:MutableVector)> <Control.Monad.Primitive.PrimState
                                                                                                                                                                         (GHC.ST.ST
                                                                                                                                                                            s_a3LQ)> <GHC.Types.Int>)
                       :: Data.Vector.Primitive.Mutable.MVector
                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            GHC.Types.Int
                            ~#
                          Data.Vector.Generic.Base.Mutable
                            Data.Vector.Unboxed.Base.Vector
                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            GHC.Types.Int),
               GHC.Types.I# (GHC.Prim.+# x1_a43K 1))
              xs1_a3Ot
              ipv_a4tS
            }
            }
        }
        }
        }
        }
    }
    }
end Rec }

Engine.Terrain.Noise.perm3
  :: [GHC.Types.Int] -> Data.Vector.Unboxed.Base.Vector GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 164 0}]
Engine.Terrain.Noise.perm3 =
  \ (x_a3o0 :: [GHC.Types.Int]) ->
    GHC.ST.runSTRep
      @ (Data.Vector.Unboxed.Base.Vector GHC.Types.Int)
      (\ (@ s_a3LQ) (s_a3LR :: GHC.Prim.State# s_a3LQ) ->
         case GHC.Prim.newByteArray#
                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                0
                (s_a3LR
                 `cast` (GHC.Prim.State#
                           (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                         :: GHC.Prim.State# s_a3LQ
                              ~#
                            GHC.Prim.State#
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))))
         of _ { (# ipv_a4bS, ipv1_a4bT #) ->
         case Engine.Terrain.Noise.perm4
                @ s_a3LQ
                Data.Vector.Fusion.Stream.Monadic.SPEC
                ((Data.Vector.Primitive.Mutable.MVector
                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                    @ GHC.Types.Int
                    0
                    0
                    ipv1_a4bT)
                 `cast` (Sym
                           <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsInt
                               <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>)> ; (Sym
                                                                                             <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsInt
                                                                                                 <Control.Monad.Primitive.PrimState
                                                                                                    (GHC.ST.ST
                                                                                                       s_a3LQ)>)> ; Sym
                                                                                                                      <(Data.Vector.Unboxed.Base.TFCo:R:MutableVector)> <Control.Monad.Primitive.PrimState
                                                                                                                                                                           (GHC.ST.ST
                                                                                                                                                                              s_a3LQ)> <GHC.Types.Int>)
                         :: Data.Vector.Primitive.Mutable.MVector
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                              GHC.Types.Int
                              ~#
                            Data.Vector.Generic.Base.Mutable
                              Data.Vector.Unboxed.Base.Vector
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                              GHC.Types.Int),
                 Engine.Terrain.Noise.grad29)
                x_a3o0
                (ipv_a4bS
                 `cast` (GHC.Prim.State#
                           <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                         :: GHC.Prim.State#
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                              ~#
                            GHC.Prim.State# s_a3LQ))
         of _ { (# ipv5_a3Oa, ipv6_a3Ob #) ->
         case ipv6_a3Ob of _ { (v'_a3Of, n_a3Og) ->
         case v'_a3Of
              `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MutableVector> <Control.Monad.Primitive.PrimState
                                                                         (GHC.ST.ST
                                                                            s_a3LQ)> <GHC.Types.Int> ; (<Data.Vector.Unboxed.Base.TFCo:R:MVectorsInt
                                                                                                           <Control.Monad.Primitive.PrimState
                                                                                                              (GHC.ST.ST
                                                                                                                 s_a3LQ)>> ; <Data.Vector.Unboxed.Base.NTCo:R:MVectorsInt
                                                                                                                                <Control.Monad.Primitive.PrimState
                                                                                                                                   (GHC.ST.ST
                                                                                                                                      s_a3LQ)>>)
                      :: Data.Vector.Generic.Base.Mutable
                           Data.Vector.Unboxed.Base.Vector
                           (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                           GHC.Types.Int
                           ~#
                         Data.Vector.Primitive.Mutable.MVector
                           (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                           GHC.Types.Int)
         of _ { Data.Vector.Primitive.Mutable.MVector rb_a4eu _ rb2_a4ew ->
         case n_a3Og of _ { GHC.Types.I# tpl1_a4eE ->
         case GHC.Prim.unsafeFreezeByteArray#
                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                rb2_a4ew
                (ipv5_a3Oa
                 `cast` (GHC.Prim.State#
                           (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                         :: GHC.Prim.State# s_a3LQ
                              ~#
                            GHC.Prim.State#
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))))
         of _ { (# ipv2_a4jL, ipv3_a4jM #) ->
         (# ipv2_a4jL
            `cast` (GHC.Prim.State#
                      <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                    :: GHC.Prim.State#
                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                         ~#
                       GHC.Prim.State# s_a3LQ),
            (Data.Vector.Primitive.Vector
               @ GHC.Types.Int rb_a4eu tpl1_a4eE ipv3_a4jM)
            `cast` (Sym <(Data.Vector.Unboxed.Base.NTCo:R:VectorInt)> ; Sym
                                                                          <(Data.Vector.Unboxed.Base.TFCo:R:VectorInt)>
                    :: Data.Vector.Primitive.Vector GHC.Types.Int
                         ~#
                       Data.Vector.Unboxed.Base.Vector GHC.Types.Int) #)
         }
         }
         }
         }
         }
         })

lvl_r5Ja :: [GHC.Types.Char]
[GblId]
lvl_r5Ja = GHC.CString.unpackCString# "Negative exponent"

Engine.Terrain.Noise.$s^1 :: GHC.Types.Double
[GblId, Str=DmdType b]
Engine.Terrain.Noise.$s^1 =
  GHC.Err.error @ GHC.Types.Double lvl_r5Ja

Engine.Terrain.Noise.$s^2 :: GHC.Types.Double
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Noise.$s^2 = GHC.Types.D# 1.0

Rec {
$wg1_r5Jb
  :: GHC.Prim.Double#
     -> GHC.Prim.Int# -> GHC.Prim.Double# -> GHC.Prim.Double#
[GblId, Arity=3, Caf=NoCafRefs, Str=DmdType LLL]
$wg1_r5Jb =
  \ (ww_s5ha :: GHC.Prim.Double#)
    (ww1_s5he :: GHC.Prim.Int#)
    (ww2_s5hi :: GHC.Prim.Double#) ->
    case GHC.Prim.remInt# ww1_s5he 2 of _ {
      __DEFAULT ->
        case ww1_s5he of wild_X4P {
          __DEFAULT ->
            $wg1_r5Jb
              (GHC.Prim.*## ww_s5ha ww_s5ha)
              (GHC.Prim.quotInt# (GHC.Prim.-# wild_X4P 1) 2)
              (GHC.Prim.*## ww_s5ha ww2_s5hi);
          1 -> GHC.Prim.*## ww_s5ha ww2_s5hi
        };
      0 ->
        $wg1_r5Jb
          (GHC.Prim.*## ww_s5ha ww_s5ha)
          (GHC.Prim.quotInt# ww1_s5he 2)
          ww2_s5hi
    }
end Rec }

Rec {
Engine.Terrain.Noise.$wf [Occ=LoopBreaker]
  :: GHC.Prim.Double# -> GHC.Prim.Int# -> GHC.Prim.Double#
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LL]
Engine.Terrain.Noise.$wf =
  \ (ww_s5hs :: GHC.Prim.Double#) (ww1_s5hw :: GHC.Prim.Int#) ->
    case GHC.Prim.remInt# ww1_s5hw 2 of _ {
      __DEFAULT ->
        case ww1_s5hw of wild_X4P {
          __DEFAULT ->
            $wg1_r5Jb
              (GHC.Prim.*## ww_s5hs ww_s5hs)
              (GHC.Prim.quotInt# (GHC.Prim.-# wild_X4P 1) 2)
              ww_s5hs;
          1 -> ww_s5hs
        };
      0 ->
        Engine.Terrain.Noise.$wf
          (GHC.Prim.*## ww_s5hs ww_s5hs) (GHC.Prim.quotInt# ww1_s5hw 2)
    }
end Rec }

Engine.Terrain.Noise.$s^_f [InlPrag=INLINE[0]]
  :: GHC.Types.Double -> GHC.Types.Int -> GHC.Types.Double
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(L)U(L)m,
 Unf=Unf{Src=Worker=Engine.Terrain.Noise.$wf, TopLvl=True, Arity=2,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s5hq [Occ=Once!] :: GHC.Types.Double)
                 (w1_s5hu [Occ=Once!] :: GHC.Types.Int) ->
                 case w_s5hq of _ { GHC.Types.D# ww_s5hs [Occ=Once] ->
                 case w1_s5hu of _ { GHC.Types.I# ww1_s5hw [Occ=Once] ->
                 case Engine.Terrain.Noise.$wf ww_s5hs ww1_s5hw
                 of ww2_s5hA { __DEFAULT ->
                 GHC.Types.D# ww2_s5hA
                 }
                 }
                 }}]
Engine.Terrain.Noise.$s^_f =
  \ (w_s5hq :: GHC.Types.Double) (w1_s5hu :: GHC.Types.Int) ->
    case w_s5hq of _ { GHC.Types.D# ww_s5hs ->
    case w1_s5hu of _ { GHC.Types.I# ww1_s5hw ->
    case Engine.Terrain.Noise.$wf ww_s5hs ww1_s5hw
    of ww2_s5hA { __DEFAULT ->
    GHC.Types.D# ww2_s5hA
    }
    }
    }

Engine.Terrain.Noise.$s^
  :: GHC.Types.Double -> GHC.Types.Int -> GHC.Types.Double
[GblId,
 Arity=2,
 Str=DmdType LU(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x0_a3tT [Occ=Once] :: GHC.Types.Double)
                 (y0_a3tU [Occ=Once!] :: GHC.Types.Int) ->
                 case y0_a3tU of wild_a3K8 { GHC.Types.I# x_a3Ka ->
                 case GHC.Prim.<# x_a3Ka 0 of _ {
                   GHC.Types.False ->
                     case x_a3Ka of _ {
                       __DEFAULT -> Engine.Terrain.Noise.$s^_f x0_a3tT wild_a3K8;
                       0 -> Engine.Terrain.Noise.$s^2
                     };
                   GHC.Types.True -> Engine.Terrain.Noise.$s^1
                 }
                 }}]
Engine.Terrain.Noise.$s^ =
  \ (x0_a3tT :: GHC.Types.Double) (y0_a3tU :: GHC.Types.Int) ->
    case y0_a3tU of _ { GHC.Types.I# x_a3Ka ->
    case GHC.Prim.<# x_a3Ka 0 of _ {
      GHC.Types.False ->
        case x_a3Ka of wild2_X4R {
          __DEFAULT ->
            case x0_a3tT of _ { GHC.Types.D# ww_s5hs ->
            case Engine.Terrain.Noise.$wf ww_s5hs wild2_X4R
            of ww1_s5hA { __DEFAULT ->
            GHC.Types.D# ww1_s5hA
            }
            };
          0 -> Engine.Terrain.Noise.$s^2
        };
      GHC.Types.True -> Engine.Terrain.Noise.$s^1
    }
    }

Engine.Terrain.Noise.$w$s^^
  :: GHC.Types.Double -> GHC.Prim.Int# -> GHC.Prim.Double#
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [40 30] 195 0}]
Engine.Terrain.Noise.$w$s^^ =
  \ (w_s5hE :: GHC.Types.Double) (ww_s5hH :: GHC.Prim.Int#) ->
    case GHC.Prim.>=# ww_s5hH 0 of _ {
      GHC.Types.False ->
        let {
          x_a3Ka [Dmd=Just L] :: GHC.Prim.Int#
          [LclId, Str=DmdType]
          x_a3Ka = GHC.Prim.negateInt# ww_s5hH } in
        case GHC.Prim.<# x_a3Ka 0 of _ {
          GHC.Types.False ->
            case x_a3Ka of wild2_X4R {
              __DEFAULT ->
                case w_s5hE of _ { GHC.Types.D# ww1_s5hs ->
                case Engine.Terrain.Noise.$wf ww1_s5hs wild2_X4R
                of ww2_s5hA { __DEFAULT ->
                GHC.Prim./## 1.0 ww2_s5hA
                }
                };
              0 -> 1.0
            };
          GHC.Types.True -> case Engine.Terrain.Noise.$s^1 of wild2_00 { }
        };
      GHC.Types.True ->
        case GHC.Prim.<# ww_s5hH 0 of _ {
          GHC.Types.False ->
            case ww_s5hH of wild2_X4R {
              __DEFAULT ->
                case w_s5hE of _ { GHC.Types.D# ww1_s5hs ->
                Engine.Terrain.Noise.$wf ww1_s5hs wild2_X4R
                };
              0 -> 1.0
            };
          GHC.Types.True -> case Engine.Terrain.Noise.$s^1 of wild2_00 { }
        }
    }

Engine.Terrain.Noise.$s^^ [InlPrag=INLINE[0]]
  :: GHC.Types.Double -> GHC.Types.Int -> GHC.Types.Double
[GblId,
 Arity=2,
 Str=DmdType LU(L)m,
 Unf=Unf{Src=Worker=Engine.Terrain.Noise.$w$s^^, TopLvl=True,
         Arity=2, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s5hE [Occ=Once] :: GHC.Types.Double)
                 (w1_s5hF [Occ=Once!] :: GHC.Types.Int) ->
                 case w1_s5hF of _ { GHC.Types.I# ww_s5hH [Occ=Once] ->
                 case Engine.Terrain.Noise.$w$s^^ w_s5hE ww_s5hH
                 of ww1_s5hL { __DEFAULT ->
                 GHC.Types.D# ww1_s5hL
                 }
                 }}]
Engine.Terrain.Noise.$s^^ =
  \ (w_s5hE :: GHC.Types.Double) (w1_s5hF :: GHC.Types.Int) ->
    case w1_s5hF of _ { GHC.Types.I# ww_s5hH ->
    case Engine.Terrain.Noise.$w$s^^ w_s5hE ww_s5hH
    of ww1_s5hL { __DEFAULT ->
    GHC.Types.D# ww1_s5hL
    }
    }

Engine.Terrain.Noise.dot3 [InlPrag=INLINE (sat-args=4)]
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=DmdType U(U(L)U(L)U(L))U(L)U(L)U(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_d3kr [Occ=Once!]
                    :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double))
                 (x_a23K [Occ=Once] :: GHC.Types.Double)
                 (y_a23L [Occ=Once] :: GHC.Types.Double)
                 (z_a23M [Occ=Once] :: GHC.Types.Double) ->
                 case ds_d3kr
                 of _ { (a_a23H [Occ=Once], b_a23I [Occ=Once], c_a23J [Occ=Once]) ->
                 GHC.Float.$fNumDouble_$c+
                   (GHC.Float.$fNumDouble_$c+
                      (GHC.Float.$fNumDouble_$c* a_a23H x_a23K)
                      (GHC.Float.$fNumDouble_$c* b_a23I y_a23L))
                   (GHC.Float.$fNumDouble_$c* c_a23J z_a23M)
                 }}]
Engine.Terrain.Noise.dot3 =
  \ (eta_B4
       :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double))
    (eta1_B3 :: GHC.Types.Double)
    (eta2_B2 :: GHC.Types.Double)
    (eta3_B1 :: GHC.Types.Double) ->
    case eta_B4 of _ { (a_a23H, b_a23I, c_a23J) ->
    case a_a23H of _ { GHC.Types.D# x_a3Jn ->
    case eta1_B3 of _ { GHC.Types.D# y_a3Jr ->
    case b_a23I of _ { GHC.Types.D# x1_X3Or ->
    case eta2_B2 of _ { GHC.Types.D# y1_X3Oz ->
    case c_a23J of _ { GHC.Types.D# x2_X3OB ->
    case eta3_B1 of _ { GHC.Types.D# y2_X3OJ ->
    GHC.Types.D#
      (GHC.Prim.+##
         (GHC.Prim.+##
            (GHC.Prim.*## x_a3Jn y_a3Jr) (GHC.Prim.*## x1_X3Or y1_X3Oz))
         (GHC.Prim.*## x2_X3OB y2_X3OJ))
    }
    }
    }
    }
    }
    }
    }

Engine.Terrain.Noise.fastFloor [InlPrag=INLINE (sat-args=1)]
  :: GHC.Types.Double -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (x_a244 :: GHC.Types.Double) ->
                 case GHC.Classes.$fOrdDouble_$c> x_a244 (GHC.Types.D# 0.0) of _ {
                   GHC.Types.False ->
                     GHC.Float.RealFracMethods.double2Int
                       (GHC.Float.$fNumDouble_$c- x_a244 (GHC.Types.D# 1.0));
                   GHC.Types.True -> GHC.Float.RealFracMethods.double2Int x_a244
                 }}]
Engine.Terrain.Noise.fastFloor =
  \ (eta_B1 :: GHC.Types.Double) ->
    case eta_B1 of _ { GHC.Types.D# x_a3rg ->
    case GHC.Prim.>## x_a3rg 0.0 of _ {
      GHC.Types.False ->
        GHC.Types.I# (GHC.Prim.double2Int# (GHC.Prim.-## x_a3rg 1.0));
      GHC.Types.True -> GHC.Types.I# (GHC.Prim.double2Int# x_a3rg)
    }
    }

Engine.Terrain.Noise.g3 :: GHC.Types.Double
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Noise.g3 = GHC.Types.D# 0.16666666666666666

Engine.Terrain.Noise.$wharmonic
  :: GHC.Prim.Int#
     -> (GHC.Types.Double -> GHC.Types.Double) -> GHC.Prim.Double#
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 60] 444 0}]
Engine.Terrain.Noise.$wharmonic =
  \ (ww_s5i0 :: GHC.Prim.Int#)
    (w_s5i2 :: GHC.Types.Double -> GHC.Types.Double) ->
    letrec {
      $wf1_s5jR [Occ=LoopBreaker] :: GHC.Prim.Int# -> GHC.Prim.Double#
      [LclId, Arity=1, Str=DmdType L]
      $wf1_s5jR =
        \ (ww1_s5hQ :: GHC.Prim.Int#) ->
          case ww1_s5hQ of wild_X6H {
            __DEFAULT ->
              let {
                x_a3IK [Dmd=Just L] :: GHC.Prim.Int#
                [LclId, Str=DmdType]
                x_a3IK = GHC.Prim.-# wild_X6H 1 } in
              let {
                r_s3yD [Dmd=Just S(L)] :: GHC.Types.Double
                [LclId, Str=DmdType m]
                r_s3yD =
                  case GHC.Prim.>=# x_a3IK 0 of _ {
                    GHC.Types.False ->
                      let {
                        x1_a3Ka [Dmd=Just L] :: GHC.Prim.Int#
                        [LclId, Str=DmdType]
                        x1_a3Ka = GHC.Prim.negateInt# x_a3IK } in
                      case GHC.Prim.<# x1_a3Ka 0 of _ {
                        GHC.Types.False ->
                          case x1_a3Ka of wild3_X4R {
                            __DEFAULT ->
                              case Engine.Terrain.Noise.$wf 2.0 wild3_X4R
                              of ww2_s5hA { __DEFAULT ->
                              case GHC.Prim./## 1.0 ww2_s5hA of wild4_a3J5 { __DEFAULT ->
                              GHC.Types.D# wild4_a3J5
                              }
                              };
                            0 -> Engine.Terrain.Noise.$s^2
                          };
                        GHC.Types.True -> Engine.Terrain.Noise.$s^1
                      };
                    GHC.Types.True ->
                      case GHC.Prim.<# x_a3IK 0 of _ {
                        GHC.Types.False ->
                          case x_a3IK of wild3_X4R {
                            __DEFAULT ->
                              case Engine.Terrain.Noise.$wf 2.0 wild3_X4R
                              of ww2_s5hA { __DEFAULT ->
                              GHC.Types.D# ww2_s5hA
                              };
                            0 -> Engine.Terrain.Noise.$s^2
                          };
                        GHC.Types.True -> Engine.Terrain.Noise.$s^1
                      }
                  } } in
              case w_s5i2 r_s3yD of _ { GHC.Types.D# x1_a3KE ->
              case r_s3yD of _ { GHC.Types.D# y_a3KI ->
              case $wf1_s5jR x_a3IK of ww2_s5hU { __DEFAULT ->
              case GHC.Prim./## x1_a3KE y_a3KI of wild3_a3KK { __DEFAULT ->
              GHC.Prim.+## wild3_a3KK ww2_s5hU
              }
              }
              }
              };
            0 -> 0.0
          }; } in
    case $wf1_s5jR ww_s5i0 of ww1_s5hU { __DEFAULT ->
    let {
      x_a4kV [Dmd=Just L] :: GHC.Prim.Int#
      [LclId, Str=DmdType]
      x_a4kV = GHC.Prim.-# ww_s5i0 1 } in
    case GHC.Prim.<# x_a4kV 0 of _ {
      GHC.Types.False ->
        case x_a4kV of wild2_a4l0 {
          __DEFAULT ->
            case GHC.Real.$wf 2 wild2_a4l0 of ww2_a4UF { __DEFAULT ->
            case GHC.Prim./## 1.0 (GHC.Prim.int2Double# ww2_a4UF)
            of wild3_a3KK { __DEFAULT ->
            GHC.Prim./## ww1_s5hU (GHC.Prim.-## 2.0 wild3_a3KK)
            }
            };
          0 -> ww1_s5hU
        };
      GHC.Types.True -> case GHC.Real.^1 of wild_00 { }
    }
    }

Engine.Terrain.Noise.harmonic [InlPrag=INLINE[0]]
  :: GHC.Types.Int
     -> (GHC.Types.Double -> GHC.Types.Double) -> GHC.Types.Double
[GblId,
 Arity=2,
 Str=DmdType U(L)Lm,
 Unf=Unf{Src=Worker=Engine.Terrain.Noise.$wharmonic, TopLvl=True,
         Arity=2, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s5hY [Occ=Once!] :: GHC.Types.Int)
                 (w1_s5i2 [Occ=Once] :: GHC.Types.Double -> GHC.Types.Double) ->
                 case w_s5hY of _ { GHC.Types.I# ww_s5i0 [Occ=Once] ->
                 case Engine.Terrain.Noise.$wharmonic ww_s5i0 w1_s5i2
                 of ww1_s5i5 { __DEFAULT ->
                 GHC.Types.D# ww1_s5i5
                 }
                 }}]
Engine.Terrain.Noise.harmonic =
  \ (w_s5hY :: GHC.Types.Int)
    (w1_s5i2 :: GHC.Types.Double -> GHC.Types.Double) ->
    case w_s5hY of _ { GHC.Types.I# ww_s5i0 ->
    case Engine.Terrain.Noise.$wharmonic ww_s5i0 w1_s5i2
    of ww1_s5i5 { __DEFAULT ->
    GHC.Types.D# ww1_s5i5
    }
    }

Engine.Terrain.Noise.int [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Int -> GHC.Types.Double
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=True)
         Tmpl= GHC.Float.RealFracMethods.int2Double}]
Engine.Terrain.Noise.int = GHC.Float.RealFracMethods.int2Double

Rec {
Engine.Terrain.Noise.splitInterval [Occ=LoopBreaker]
  :: forall a_a23G. [a_a23G] -> GHC.Types.Int -> [[a_a23G]]
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType SL]
Engine.Terrain.Noise.splitInterval =
  \ (@ a_e) (xs_a2aV :: [a_e]) (i_a2aW :: GHC.Types.Int) ->
    case xs_a2aV of wild_a3mj {
      [] -> GHC.Types.[] @ [a_e];
      : ds1_a3Km ds2_a3Kn ->
        let {
          ds_s3zn [Dmd=Just D(SS)] :: ([a_e], [a_e])
          [LclId, Str=DmdType]
          ds_s3zn =
            case i_a2aW of _ { GHC.Types.I# n#_a3mu ->
            case GHC.Prim.<# n#_a3mu 0 of _ {
              GHC.Types.False ->
                case GHC.List.$wsplitAt# @ a_e n#_a3mu wild_a3mj
                of _ { (# ww1_a4UT, ww2_a4UU #) ->
                (ww1_a4UT, ww2_a4UU)
                };
              GHC.Types.True -> (GHC.Types.[] @ a_e, wild_a3mj)
            }
            } } in
        GHC.Types.:
          @ [a_e]
          (case ds_s3zn of _ { (ret_X2SN, rest_X2Sy) -> ret_X2SN })
          (case ds_s3zn of _ { (ret_a2Sn, rest_X2SN) ->
           Engine.Terrain.Noise.splitInterval @ a_e rest_X2SN i_a2aW
           })
    }
end Rec }

Rec {
Engine.Terrain.Noise.perm_go [Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [System.Random.Shuffle.Tree GHC.Types.Int]
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType L]
Engine.Terrain.Noise.perm_go =
  \ (x_a3Sr :: GHC.Prim.Int#) ->
    GHC.Types.:
      @ (System.Random.Shuffle.Tree GHC.Types.Int)
      (System.Random.Shuffle.Leaf @ GHC.Types.Int (GHC.Types.I# x_a3Sr))
      (case x_a3Sr of wild_X2O {
         __DEFAULT -> Engine.Terrain.Noise.perm_go (GHC.Prim.+# wild_X2O 1);
         255 -> GHC.Types.[] @ (System.Random.Shuffle.Tree GHC.Types.Int)
       })
end Rec }

Engine.Terrain.Noise.perm2
  :: [System.Random.Shuffle.Tree GHC.Types.Int]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 20 0}]
Engine.Terrain.Noise.perm2 = Engine.Terrain.Noise.perm_go 0

Engine.Terrain.Noise.perm_a1
  :: System.Random.Shuffle.Tree GHC.Types.Int
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 20 0}]
Engine.Terrain.Noise.perm_a1 =
  System.Random.Shuffle.shuffle_x
    @ GHC.Types.Int Engine.Terrain.Noise.perm2

Engine.Terrain.Noise.perm1
  :: System.Random.StdGen -> [[GHC.Types.Int]]
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 222 0}]
Engine.Terrain.Noise.perm1 =
  \ (x_a3uM :: System.Random.StdGen) ->
    let {
      x1_a3SM [Dmd=Just L] :: [GHC.Types.Int]
      [LclId, Str=DmdType]
      x1_a3SM =
        case System.Random.Shuffle.shuffle'1
               @ System.Random.StdGen
               (System.Random.Shuffle.$wrseq'
                  @ System.Random.StdGen System.Random.$fRandomGenStdGen 255 x_a3uM)
        of _ { (# ww1_a3vE, _ #) ->
        System.Random.Shuffle.shuffle1
          @ GHC.Types.Int Engine.Terrain.Noise.perm_a1 ww1_a3vE
        } } in
    let {
      lvl1_s5Ac :: [[GHC.Types.Int]]
      [LclId]
      lvl1_s5Ac =
        GHC.Types.:
          @ [GHC.Types.Int] x1_a3SM (GHC.Types.[] @ [GHC.Types.Int]) } in
    letrec {
      xs_a3SH [Occ=LoopBreaker] :: GHC.Prim.Int# -> [[GHC.Types.Int]]
      [LclId, Arity=1, Str=DmdType L]
      xs_a3SH =
        \ (m_a3SO :: GHC.Prim.Int#) ->
          case GHC.Prim.<=# m_a3SO 1 of _ {
            GHC.Types.False ->
              GHC.Types.:
                @ [GHC.Types.Int] x1_a3SM (xs_a3SH (GHC.Prim.-# m_a3SO 1));
            GHC.Types.True -> lvl1_s5Ac
          }; } in
    xs_a3SH 2

Engine.Terrain.Noise.perm
  :: GHC.Types.Int -> Engine.Terrain.Noise.Permutation
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 0}]
Engine.Terrain.Noise.perm =
  \ (seed_a29r :: GHC.Types.Int) ->
    Engine.Terrain.Noise.perm3
      (GHC.List.concat_go
         @ GHC.Types.Int
         (Engine.Terrain.Noise.perm1 (System.Random.mkStdGen seed_a29r)))

Rec {
Engine.Terrain.Noise.grad30 [Occ=LoopBreaker]
  :: forall s_a3LQ.
     Data.Vector.Fusion.Stream.Monadic.SPEC
     -> (Data.Vector.Generic.Base.Mutable
           Data.Vector.Unboxed.Base.Vector
           (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
           (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double),
         GHC.Types.Int)
     -> [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
     -> GHC.Prim.State# s_a3LQ
     -> (# GHC.Prim.State# s_a3LQ,
           (Data.Vector.Generic.Base.Mutable
              Data.Vector.Unboxed.Base.Vector
              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
              (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double),
            GHC.Types.Int) #)
[GblId, Arity=4, Caf=NoCafRefs, Str=DmdType SLSL]
Engine.Terrain.Noise.grad30 =
  \ (@ s_a3LQ)
    (sPEC_a3NL :: Data.Vector.Fusion.Stream.Monadic.SPEC)
    (z1_a3NM
       :: (Data.Vector.Generic.Base.Mutable
             Data.Vector.Unboxed.Base.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
             (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double),
           GHC.Types.Int))
    (s3_a3NN
       :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)])
    (eta_B1 :: GHC.Prim.State# s_a3LQ) ->
    case sPEC_a3NL of _ { __DEFAULT ->
    case s3_a3NN of _ {
      [] -> (# eta_B1, z1_a3NM #);
      : x_a3Os xs1_a3Ot ->
        case z1_a3NM of _ { (v_a43E, i_a43F) ->
        case i_a43F of _ { GHC.Types.I# x1_a43K ->
        case v_a43E
             `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MutableVector> <Control.Monad.Primitive.PrimState
                                                                        (GHC.ST.ST
                                                                           s_a3LQ)> <(GHC.Types.Double,
                                                                                      GHC.Types.Double,
                                                                                      GHC.Types.Double)> ; <Data.Vector.Unboxed.Base.TFCo:R:MVectors(,,)
                                                                                                              <Control.Monad.Primitive.PrimState
                                                                                                                 (GHC.ST.ST
                                                                                                                    s_a3LQ)>
                                                                                                              <GHC.Types.Double>
                                                                                                              <GHC.Types.Double>
                                                                                                              <GHC.Types.Double>>
                     :: Data.Vector.Generic.Base.Mutable
                          Data.Vector.Unboxed.Base.Vector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
                          ~#
                        Data.Vector.Unboxed.Base.R:MVectors(,,)
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Double
                          GHC.Types.Double
                          GHC.Types.Double)
        of wild1_a4VF
        { Data.Vector.Unboxed.Base.MV_3 rb_a4VH as_a4VI bs_a4VJ cs_a4VK ->
        case as_a4VI
             `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                        <Control.Monad.Primitive.PrimState
                           (GHC.ST.ST
                              s_a3LQ)>> ; <Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                             <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>>
                     :: Data.Vector.Unboxed.Base.MVector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Double
                          ~#
                        Data.Vector.Primitive.Mutable.MVector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Double)
        of _
        { Data.Vector.Primitive.Mutable.MVector rb1_s5wM
                                                rb2_s5wL
                                                rb3_s5wK ->
        case bs_a4VJ
             `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                        <Control.Monad.Primitive.PrimState
                           (GHC.ST.ST
                              s_a3LQ)>> ; <Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                             <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>>
                     :: Data.Vector.Unboxed.Base.MVector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Double
                          ~#
                        Data.Vector.Primitive.Mutable.MVector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Double)
        of _
        { Data.Vector.Primitive.Mutable.MVector rb4_s5wU
                                                rb5_s5wT
                                                rb6_s5wS ->
        case cs_a4VK
             `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                        <Control.Monad.Primitive.PrimState
                           (GHC.ST.ST
                              s_a3LQ)>> ; <Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                             <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>>
                     :: Data.Vector.Unboxed.Base.MVector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Double
                          ~#
                        Data.Vector.Primitive.Mutable.MVector
                          (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          GHC.Types.Double)
        of _
        { Data.Vector.Primitive.Mutable.MVector rb7_s5x2
                                                rb8_s5x1
                                                rb9_s5x0 ->
        case GHC.Prim.<# x1_a43K rb_a4VH of _ {
          GHC.Types.False ->
            let {
              $j_s5aW
                :: GHC.Prim.Int#
                   -> (# GHC.Prim.State# s_a3LQ,
                         (Data.Vector.Generic.Base.Mutable
                            Data.Vector.Unboxed.Base.Vector
                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double),
                          GHC.Types.Int) #)
              [LclId, Arity=1, Str=DmdType L]
              $j_s5aW =
                \ (y_a3s9 :: GHC.Prim.Int#) ->
                  let {
                    x2_a4ci [Dmd=Just L] :: GHC.Prim.Int#
                    [LclId, Str=DmdType]
                    x2_a4ci = GHC.Prim.+# rb2_s5wL y_a3s9 } in
                  case GHC.Prim.newByteArray#
                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                         (GHC.Prim.*# x2_a4ci 8)
                         (eta_B1
                          `cast` (GHC.Prim.State#
                                    (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                                  :: GHC.Prim.State# s_a3LQ
                                       ~#
                                     GHC.Prim.State#
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))))
                  of _ { (# ipv_a4WF, ipv1_a4WG #) ->
                  case (GHC.Prim.copyMutableByteArray#
                          @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          rb3_s5wK
                          (GHC.Prim.*# rb1_s5wM 8)
                          ipv1_a4WG
                          0
                          (GHC.Prim.*# rb2_s5wL 8)
                          ipv_a4WF)
                       `cast` (GHC.Prim.State#
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                               :: GHC.Prim.State#
                                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                    ~#
                                  GHC.Prim.State# s_a3LQ)
                  of ipv2_a4tS { __DEFAULT ->
                  let {
                    x3_X4hh [Dmd=Just L] :: GHC.Prim.Int#
                    [LclId, Str=DmdType]
                    x3_X4hh = GHC.Prim.+# rb5_s5wT y_a3s9 } in
                  case GHC.Prim.newByteArray#
                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                         (GHC.Prim.*# x3_X4hh 8)
                         (ipv2_a4tS
                          `cast` (GHC.Prim.State#
                                    (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                                  :: GHC.Prim.State# s_a3LQ
                                       ~#
                                     GHC.Prim.State#
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))))
                  of _ { (# ipv3_X51I, ipv4_X51K #) ->
                  case (GHC.Prim.copyMutableByteArray#
                          @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          rb6_s5wS
                          (GHC.Prim.*# rb4_s5wU 8)
                          ipv4_X51K
                          0
                          (GHC.Prim.*# rb5_s5wT 8)
                          ipv3_X51I)
                       `cast` (GHC.Prim.State#
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                               :: GHC.Prim.State#
                                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                    ~#
                                  GHC.Prim.State# s_a3LQ)
                  of ipv5_X4zh { __DEFAULT ->
                  let {
                    x4_X4hi [Dmd=Just L] :: GHC.Prim.Int#
                    [LclId, Str=DmdType]
                    x4_X4hi = GHC.Prim.+# rb8_s5x1 y_a3s9 } in
                  case GHC.Prim.newByteArray#
                         @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                         (GHC.Prim.*# x4_X4hi 8)
                         (ipv5_X4zh
                          `cast` (GHC.Prim.State#
                                    (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                                  :: GHC.Prim.State# s_a3LQ
                                       ~#
                                     GHC.Prim.State#
                                       (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))))
                  of _ { (# ipv6_X51J, ipv7_X51L #) ->
                  case (GHC.Prim.copyMutableByteArray#
                          @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          rb9_s5x0
                          (GHC.Prim.*# rb7_s5x2 8)
                          ipv7_X51L
                          0
                          (GHC.Prim.*# rb8_s5x1 8)
                          ipv6_X51J)
                       `cast` (GHC.Prim.State#
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                               :: GHC.Prim.State#
                                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                    ~#
                                  GHC.Prim.State# s_a3LQ)
                  of ipv8_X4zi { __DEFAULT ->
                  case x_a3Os of _ { (a20_a4t6, b_a4t7, c_a4t8) ->
                  case a20_a4t6 of _ { GHC.Types.D# x#_a4tA ->
                  case (GHC.Prim.writeDoubleArray#
                          @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          ipv1_a4WG
                          x1_a43K
                          x#_a4tA
                          (ipv8_X4zi
                           `cast` (GHC.Prim.State#
                                     (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                                   :: GHC.Prim.State# s_a3LQ
                                        ~#
                                      GHC.Prim.State#
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)))))
                       `cast` (GHC.Prim.State#
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                               :: GHC.Prim.State#
                                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                    ~#
                                  GHC.Prim.State# s_a3LQ)
                  of ipv9_X4A8 { __DEFAULT ->
                  case b_a4t7 of _ { GHC.Types.D# x#1_X4yf ->
                  case (GHC.Prim.writeDoubleArray#
                          @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          ipv4_X51K
                          x1_a43K
                          x#1_X4yf
                          (ipv9_X4A8
                           `cast` (GHC.Prim.State#
                                     (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                                   :: GHC.Prim.State# s_a3LQ
                                        ~#
                                      GHC.Prim.State#
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)))))
                       `cast` (GHC.Prim.State#
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                               :: GHC.Prim.State#
                                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                    ~#
                                  GHC.Prim.State# s_a3LQ)
                  of ipv10_X4yn { __DEFAULT ->
                  case c_a4t8 of _ { GHC.Types.D# x#2_X4y5 ->
                  case (GHC.Prim.writeDoubleArray#
                          @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                          ipv7_X51L
                          x1_a43K
                          x#2_X4y5
                          (ipv10_X4yn
                           `cast` (GHC.Prim.State#
                                     (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                                   :: GHC.Prim.State# s_a3LQ
                                        ~#
                                      GHC.Prim.State#
                                        (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)))))
                       `cast` (GHC.Prim.State#
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                               :: GHC.Prim.State#
                                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                    ~#
                                  GHC.Prim.State# s_a3LQ)
                  of s_a4dc { __DEFAULT ->
                  Engine.Terrain.Noise.grad30
                    @ s_a3LQ
                    Data.Vector.Fusion.Stream.Monadic.SPEC
                    ((Data.Vector.Unboxed.Base.MV_3
                        @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                        @ GHC.Types.Double
                        @ GHC.Types.Double
                        @ GHC.Types.Double
                        (GHC.Prim.+# y_a3s9 rb_a4VH)
                        ((Data.Vector.Primitive.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            @ GHC.Types.Double
                            0
                            x2_a4ci
                            ipv1_a4WG)
                         `cast` (Sym
                                   <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                       (Sym
                                          <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                              <s_a3LQ>)>))> ; Sym
                                                                <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                                                                    <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                                                        <s_a3LQ>)>)>
                                 :: Data.Vector.Primitive.Mutable.MVector
                                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                      GHC.Types.Double
                                      ~#
                                    Data.Vector.Unboxed.Base.MVector
                                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                      GHC.Types.Double))
                        ((Data.Vector.Primitive.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            @ GHC.Types.Double
                            0
                            x3_X4hh
                            ipv4_X51K)
                         `cast` (Sym
                                   <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                       (Sym
                                          <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                              <s_a3LQ>)>))> ; Sym
                                                                <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                                                                    <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                                                        <s_a3LQ>)>)>
                                 :: Data.Vector.Primitive.Mutable.MVector
                                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                      GHC.Types.Double
                                      ~#
                                    Data.Vector.Unboxed.Base.MVector
                                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                      GHC.Types.Double))
                        ((Data.Vector.Primitive.Mutable.MVector
                            @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            @ GHC.Types.Double
                            0
                            x4_X4hi
                            ipv7_X51L)
                         `cast` (Sym
                                   <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                       (Sym
                                          <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                              <s_a3LQ>)>))> ; Sym
                                                                <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                                                                    <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                                                        <s_a3LQ>)>)>
                                 :: Data.Vector.Primitive.Mutable.MVector
                                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                      GHC.Types.Double
                                      ~#
                                    Data.Vector.Unboxed.Base.MVector
                                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                      GHC.Types.Double)))
                     `cast` (Sym
                               <(Data.Vector.Unboxed.Base.TFCo:R:MVectors(,,)
                                   <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>
                                   <GHC.Types.Double>
                                   <GHC.Types.Double>
                                   <GHC.Types.Double>)> ; Sym
                                                            <(Data.Vector.Unboxed.Base.TFCo:R:MutableVector)> <Control.Monad.Primitive.PrimState
                                                                                                                 (GHC.ST.ST
                                                                                                                    s_a3LQ)> <(GHC.Types.Double,
                                                                                                                               GHC.Types.Double,
                                                                                                                               GHC.Types.Double)>
                             :: Data.Vector.Unboxed.Base.R:MVectors(,,)
                                  (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                  GHC.Types.Double
                                  GHC.Types.Double
                                  GHC.Types.Double
                                  ~#
                                Data.Vector.Generic.Base.Mutable
                                  Data.Vector.Unboxed.Base.Vector
                                  (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                                  (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)),
                     GHC.Types.I# (GHC.Prim.+# x1_a43K 1))
                    xs1_a3Ot
                    s_a4dc
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  } } in
            case GHC.Prim.<=# rb_a4VH 1 of _ {
              GHC.Types.False -> $j_s5aW rb_a4VH;
              GHC.Types.True -> $j_s5aW 1
            };
          GHC.Types.True ->
            case x_a3Os of _ { (a20_a4t6, b_a4t7, c_a4t8) ->
            case a20_a4t6 of _ { GHC.Types.D# x#_a4tA ->
            case (GHC.Prim.writeDoubleArray#
                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                    rb3_s5wK
                    (GHC.Prim.+# rb1_s5wM x1_a43K)
                    x#_a4tA
                    (eta_B1
                     `cast` (GHC.Prim.State#
                               (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                             :: GHC.Prim.State# s_a3LQ
                                  ~#
                                GHC.Prim.State#
                                  (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)))))
                 `cast` (GHC.Prim.State#
                           <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                         :: GHC.Prim.State#
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                              ~#
                            GHC.Prim.State# s_a3LQ)
            of ipv_a4tS { __DEFAULT ->
            case b_a4t7 of _ { GHC.Types.D# x#1_X4xU ->
            case (GHC.Prim.writeDoubleArray#
                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                    rb6_s5wS
                    (GHC.Prim.+# rb4_s5wU x1_a43K)
                    x#1_X4xU
                    (ipv_a4tS
                     `cast` (GHC.Prim.State#
                               (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                             :: GHC.Prim.State# s_a3LQ
                                  ~#
                                GHC.Prim.State#
                                  (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)))))
                 `cast` (GHC.Prim.State#
                           <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                         :: GHC.Prim.State#
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                              ~#
                            GHC.Prim.State# s_a3LQ)
            of ipv1_X4ym { __DEFAULT ->
            case c_a4t8 of _ { GHC.Types.D# x#2_X4y4 ->
            case (GHC.Prim.writeDoubleArray#
                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                    rb9_s5x0
                    (GHC.Prim.+# rb7_s5x2 x1_a43K)
                    x#2_X4y4
                    (ipv1_X4ym
                     `cast` (GHC.Prim.State#
                               (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                             :: GHC.Prim.State# s_a3LQ
                                  ~#
                                GHC.Prim.State#
                                  (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)))))
                 `cast` (GHC.Prim.State#
                           <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                         :: GHC.Prim.State#
                              (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                              ~#
                            GHC.Prim.State# s_a3LQ)
            of s_a4dc { __DEFAULT ->
            Engine.Terrain.Noise.grad30
              @ s_a3LQ
              Data.Vector.Fusion.Stream.Monadic.SPEC
              (wild1_a4VF
               `cast` (Sym
                         <(Data.Vector.Unboxed.Base.TFCo:R:MVectors(,,)
                             <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>
                             <GHC.Types.Double>
                             <GHC.Types.Double>
                             <GHC.Types.Double>)> ; Sym
                                                      <(Data.Vector.Unboxed.Base.TFCo:R:MutableVector)> <Control.Monad.Primitive.PrimState
                                                                                                           (GHC.ST.ST
                                                                                                              s_a3LQ)> <(GHC.Types.Double,
                                                                                                                         GHC.Types.Double,
                                                                                                                         GHC.Types.Double)>
                       :: Data.Vector.Unboxed.Base.R:MVectors(,,)
                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            GHC.Types.Double
                            GHC.Types.Double
                            GHC.Types.Double
                            ~#
                          Data.Vector.Generic.Base.Mutable
                            Data.Vector.Unboxed.Base.Vector
                            (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                            (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)),
               GHC.Types.I# (GHC.Prim.+# x1_a43K 1))
              xs1_a3Ot
              s_a4dc
            }
            }
            }
            }
            }
            }
            }
        }
        }
        }
        }
        }
        }
        }
    }
    }
end Rec }

Engine.Terrain.Noise.grad17 :: GHC.Types.Double
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Noise.grad17 = GHC.Types.D# 0.0

Engine.Terrain.Noise.grad28
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad28 =
  (Engine.Terrain.Noise.$s^2,
   Engine.Terrain.Noise.$s^2,
   Engine.Terrain.Noise.grad17)

Engine.Terrain.Noise.grad16 :: GHC.Types.Double
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Noise.grad16 = GHC.Types.D# -1.0

Engine.Terrain.Noise.grad27
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad27 =
  (Engine.Terrain.Noise.grad16,
   Engine.Terrain.Noise.$s^2,
   Engine.Terrain.Noise.grad17)

Engine.Terrain.Noise.grad26
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad26 =
  (Engine.Terrain.Noise.$s^2,
   Engine.Terrain.Noise.grad16,
   Engine.Terrain.Noise.grad17)

Engine.Terrain.Noise.grad25
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad25 =
  (Engine.Terrain.Noise.grad16,
   Engine.Terrain.Noise.grad16,
   Engine.Terrain.Noise.grad17)

Engine.Terrain.Noise.grad24
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad24 =
  (Engine.Terrain.Noise.$s^2,
   Engine.Terrain.Noise.grad17,
   Engine.Terrain.Noise.$s^2)

Engine.Terrain.Noise.grad23
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad23 =
  (Engine.Terrain.Noise.grad16,
   Engine.Terrain.Noise.grad17,
   Engine.Terrain.Noise.$s^2)

Engine.Terrain.Noise.grad22
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad22 =
  (Engine.Terrain.Noise.$s^2,
   Engine.Terrain.Noise.grad17,
   Engine.Terrain.Noise.grad16)

Engine.Terrain.Noise.grad21
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad21 =
  (Engine.Terrain.Noise.grad16,
   Engine.Terrain.Noise.grad17,
   Engine.Terrain.Noise.grad16)

Engine.Terrain.Noise.grad20
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad20 =
  (Engine.Terrain.Noise.grad17,
   Engine.Terrain.Noise.$s^2,
   Engine.Terrain.Noise.$s^2)

Engine.Terrain.Noise.grad19
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad19 =
  (Engine.Terrain.Noise.grad17,
   Engine.Terrain.Noise.grad16,
   Engine.Terrain.Noise.$s^2)

Engine.Terrain.Noise.grad18
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad18 =
  (Engine.Terrain.Noise.grad17,
   Engine.Terrain.Noise.$s^2,
   Engine.Terrain.Noise.grad16)

Engine.Terrain.Noise.grad15
  :: (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Terrain.Noise.grad15 =
  (Engine.Terrain.Noise.grad17,
   Engine.Terrain.Noise.grad16,
   Engine.Terrain.Noise.grad16)

Engine.Terrain.Noise.grad14
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad14 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad15
    (GHC.Types.[]
       @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double))

Engine.Terrain.Noise.grad13
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad13 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad18
    Engine.Terrain.Noise.grad14

Engine.Terrain.Noise.grad12
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad12 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad19
    Engine.Terrain.Noise.grad13

Engine.Terrain.Noise.grad11
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad11 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad20
    Engine.Terrain.Noise.grad12

Engine.Terrain.Noise.grad10
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad10 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad21
    Engine.Terrain.Noise.grad11

Engine.Terrain.Noise.grad9
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad9 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad22
    Engine.Terrain.Noise.grad10

Engine.Terrain.Noise.grad8
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad8 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad23
    Engine.Terrain.Noise.grad9

Engine.Terrain.Noise.grad7
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad7 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad24
    Engine.Terrain.Noise.grad8

Engine.Terrain.Noise.grad6
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad6 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad25
    Engine.Terrain.Noise.grad7

Engine.Terrain.Noise.grad5
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad5 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad26
    Engine.Terrain.Noise.grad6

Engine.Terrain.Noise.grad4
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad4 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad27
    Engine.Terrain.Noise.grad5

Engine.Terrain.Noise.grad2
  :: [(GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Noise.grad2 =
  GHC.Types.:
    @ (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
    Engine.Terrain.Noise.grad28
    Engine.Terrain.Noise.grad4

Engine.Terrain.Noise.grad1
  :: forall s_a3LQ.
     GHC.Prim.State# s_a3LQ
     -> (# GHC.Prim.State# s_a3LQ,
           Data.Vector.Unboxed.Base.Vector
             (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double) #)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 252 30}]
Engine.Terrain.Noise.grad1 =
  \ (@ s_a3LQ) (s_a3LR :: GHC.Prim.State# s_a3LQ) ->
    case GHC.Prim.newByteArray#
           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
           0
           (s_a3LR
            `cast` (GHC.Prim.State#
                      (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                    :: GHC.Prim.State# s_a3LQ
                         ~#
                       GHC.Prim.State#
                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))))
    of _ { (# ipv_a4ob, ipv1_a4oc #) ->
    case GHC.Prim.newByteArray#
           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)) 0 ipv_a4ob
    of _ { (# ipv2_X4t1, ipv3_X4t3 #) ->
    case GHC.Prim.newByteArray#
           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
           0
           ipv2_X4t1
    of _ { (# ipv4_X4t2, ipv5_X4t4 #) ->
    case Engine.Terrain.Noise.grad30
           @ s_a3LQ
           Data.Vector.Fusion.Stream.Monadic.SPEC
           ((Data.Vector.Unboxed.Base.MV_3
               @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
               @ GHC.Types.Double
               @ GHC.Types.Double
               @ GHC.Types.Double
               0
               ((Data.Vector.Primitive.Mutable.MVector
                   @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                   @ GHC.Types.Double
                   0
                   0
                   ipv1_a4oc)
                `cast` (Sym
                          <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                              (Sym
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>))> ; Sym
                                                                                                <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                                                                                                    <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                                                                                        <s_a3LQ>)>)>
                        :: Data.Vector.Primitive.Mutable.MVector
                             (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                             GHC.Types.Double
                             ~#
                           Data.Vector.Unboxed.Base.MVector
                             (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                             GHC.Types.Double))
               ((Data.Vector.Primitive.Mutable.MVector
                   @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                   @ GHC.Types.Double
                   0
                   0
                   ipv3_X4t3)
                `cast` (Sym
                          <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                              (Sym
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>))> ; Sym
                                                                                                <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                                                                                                    <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                                                                                        <s_a3LQ>)>)>
                        :: Data.Vector.Primitive.Mutable.MVector
                             (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                             GHC.Types.Double
                             ~#
                           Data.Vector.Unboxed.Base.MVector
                             (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                             GHC.Types.Double))
               ((Data.Vector.Primitive.Mutable.MVector
                   @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                   @ GHC.Types.Double
                   0
                   0
                   ipv5_X4t4)
                `cast` (Sym
                          <(Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                              (Sym
                                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>))> ; Sym
                                                                                                <(Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                                                                                                    <(Control.Monad.Primitive.TFCo:R:PrimStateST
                                                                                                        <s_a3LQ>)>)>
                        :: Data.Vector.Primitive.Mutable.MVector
                             (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                             GHC.Types.Double
                             ~#
                           Data.Vector.Unboxed.Base.MVector
                             (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                             GHC.Types.Double)))
            `cast` (Sym
                      <(Data.Vector.Unboxed.Base.TFCo:R:MVectors(,,)
                          <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>
                          <GHC.Types.Double>
                          <GHC.Types.Double>
                          <GHC.Types.Double>)> ; Sym
                                                   <(Data.Vector.Unboxed.Base.TFCo:R:MutableVector)> <Control.Monad.Primitive.PrimState
                                                                                                        (GHC.ST.ST
                                                                                                           s_a3LQ)> <(GHC.Types.Double,
                                                                                                                      GHC.Types.Double,
                                                                                                                      GHC.Types.Double)>
                    :: Data.Vector.Unboxed.Base.R:MVectors(,,)
                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                         GHC.Types.Double
                         GHC.Types.Double
                         GHC.Types.Double
                         ~#
                       Data.Vector.Generic.Base.Mutable
                         Data.Vector.Unboxed.Base.Vector
                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                         (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)),
            Engine.Terrain.Noise.grad29)
           Engine.Terrain.Noise.grad2
           (ipv4_X4t2
            `cast` (GHC.Prim.State#
                      <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
                    :: GHC.Prim.State#
                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                         ~#
                       GHC.Prim.State# s_a3LQ))
    of _ { (# ipv6_a3Oa, ipv7_a3Ob #) ->
    case ipv7_a3Ob of _ { (v'_a3Of, n_a3Og) ->
    case v'_a3Of
         `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MutableVector> <Control.Monad.Primitive.PrimState
                                                                    (GHC.ST.ST
                                                                       s_a3LQ)> <(GHC.Types.Double,
                                                                                  GHC.Types.Double,
                                                                                  GHC.Types.Double)> ; <Data.Vector.Unboxed.Base.TFCo:R:MVectors(,,)
                                                                                                          <Control.Monad.Primitive.PrimState
                                                                                                             (GHC.ST.ST
                                                                                                                s_a3LQ)>
                                                                                                          <GHC.Types.Double>
                                                                                                          <GHC.Types.Double>
                                                                                                          <GHC.Types.Double>>
                 :: Data.Vector.Generic.Base.Mutable
                      Data.Vector.Unboxed.Base.Vector
                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                      (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
                      ~#
                    Data.Vector.Unboxed.Base.R:MVectors(,,)
                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                      GHC.Types.Double
                      GHC.Types.Double
                      GHC.Types.Double)
    of _ { Data.Vector.Unboxed.Base.MV_3 _ as_a4uv bs_a4uw cs_a4ux ->
    case as_a4uv
         `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                    <Control.Monad.Primitive.PrimState
                       (GHC.ST.ST
                          s_a3LQ)>> ; <Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                         <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>>
                 :: Data.Vector.Unboxed.Base.MVector
                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                      GHC.Types.Double
                      ~#
                    Data.Vector.Primitive.Mutable.MVector
                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                      GHC.Types.Double)
    of _ { Data.Vector.Primitive.Mutable.MVector rb1_s5yx _ rb3_s5yv ->
    case bs_a4uw
         `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                    <Control.Monad.Primitive.PrimState
                       (GHC.ST.ST
                          s_a3LQ)>> ; <Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                         <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>>
                 :: Data.Vector.Unboxed.Base.MVector
                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                      GHC.Types.Double
                      ~#
                    Data.Vector.Primitive.Mutable.MVector
                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                      GHC.Types.Double)
    of _ { Data.Vector.Primitive.Mutable.MVector rb4_s5yF _ rb6_s5yD ->
    case cs_a4ux
         `cast` (<Data.Vector.Unboxed.Base.TFCo:R:MVectorsDouble
                    <Control.Monad.Primitive.PrimState
                       (GHC.ST.ST
                          s_a3LQ)>> ; <Data.Vector.Unboxed.Base.NTCo:R:MVectorsDouble
                                         <Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ)>>
                 :: Data.Vector.Unboxed.Base.MVector
                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                      GHC.Types.Double
                      ~#
                    Data.Vector.Primitive.Mutable.MVector
                      (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                      GHC.Types.Double)
    of _ { Data.Vector.Primitive.Mutable.MVector rb7_s5yN _ rb9_s5yL ->
    case n_a3Og of _ { GHC.Types.I# tpl1_a4uB ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
           rb3_s5yv
           (ipv6_a3Oa
            `cast` (GHC.Prim.State#
                      (Sym <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>)
                    :: GHC.Prim.State# s_a3LQ
                         ~#
                       GHC.Prim.State#
                         (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))))
    of _ { (# ipv8_a4xv, ipv9_a4xw #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
           rb6_s5yD
           ipv8_a4xv
    of _ { (# ipv10_X4CG, ipv11_X4CI #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
           rb9_s5yL
           ipv10_X4CG
    of _ { (# ipv12_X4Ic, ipv13_X4CK #) ->
    (# ipv12_X4Ic
       `cast` (GHC.Prim.State#
                 <(Control.Monad.Primitive.TFCo:R:PrimStateST <s_a3LQ>)>
               :: GHC.Prim.State#
                    (Control.Monad.Primitive.PrimState (GHC.ST.ST s_a3LQ))
                    ~#
                  GHC.Prim.State# s_a3LQ),
       (Data.Vector.Unboxed.Base.V_3
          @ GHC.Types.Double
          @ GHC.Types.Double
          @ GHC.Types.Double
          tpl1_a4uB
          ((Data.Vector.Primitive.Vector
              @ GHC.Types.Double rb1_s5yx tpl1_a4uB ipv9_a4xw)
           `cast` (Sym <(Data.Vector.Unboxed.Base.NTCo:R:VectorDouble)> ; Sym
                                                                            <(Data.Vector.Unboxed.Base.TFCo:R:VectorDouble)>
                   :: Data.Vector.Primitive.Vector GHC.Types.Double
                        ~#
                      Data.Vector.Unboxed.Base.Vector GHC.Types.Double))
          ((Data.Vector.Primitive.Vector
              @ GHC.Types.Double rb4_s5yF tpl1_a4uB ipv11_X4CI)
           `cast` (Sym <(Data.Vector.Unboxed.Base.NTCo:R:VectorDouble)> ; Sym
                                                                            <(Data.Vector.Unboxed.Base.TFCo:R:VectorDouble)>
                   :: Data.Vector.Primitive.Vector GHC.Types.Double
                        ~#
                      Data.Vector.Unboxed.Base.Vector GHC.Types.Double))
          ((Data.Vector.Primitive.Vector
              @ GHC.Types.Double rb7_s5yN tpl1_a4uB ipv13_X4CK)
           `cast` (Sym <(Data.Vector.Unboxed.Base.NTCo:R:VectorDouble)> ; Sym
                                                                            <(Data.Vector.Unboxed.Base.TFCo:R:VectorDouble)>
                   :: Data.Vector.Primitive.Vector GHC.Types.Double
                        ~#
                      Data.Vector.Unboxed.Base.Vector GHC.Types.Double)))
       `cast` (Sym
                 <(Data.Vector.Unboxed.Base.TFCo:R:Vector(,,)
                     <GHC.Types.Double> <GHC.Types.Double> <GHC.Types.Double>)>
               :: Data.Vector.Unboxed.Base.R:Vector(,,)
                    GHC.Types.Double GHC.Types.Double GHC.Types.Double
                    ~#
                  Data.Vector.Unboxed.Base.Vector
                    (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)) #)
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Terrain.Noise.grad3
  :: Data.Vector.Unboxed.Base.Vector
       (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 20 0}]
Engine.Terrain.Noise.grad3 =
  GHC.ST.runSTRep
    @ (Data.Vector.Unboxed.Base.Vector
         (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double))
    Engine.Terrain.Noise.grad1

Engine.Terrain.Noise.$wnoise3D
  :: Engine.Terrain.Noise.Permutation
     -> GHC.Prim.Double#
     -> GHC.Prim.Double#
     -> GHC.Prim.Double#
     -> GHC.Prim.Double#
[GblId, Arity=4, Str=DmdType LLLL]
Engine.Terrain.Noise.$wnoise3D =
  \ (w_s5jd :: Engine.Terrain.Noise.Permutation)
    (ww_s5jg :: GHC.Prim.Double#)
    (ww1_s5jk :: GHC.Prim.Double#)
    (ww2_s5jo :: GHC.Prim.Double#) ->
    let {
      a_s5mx :: GHC.Prim.Double#
      [LclId]
      a_s5mx =
        GHC.Prim./##
          (GHC.Prim.+## (GHC.Prim.+## ww_s5jg ww1_s5jk) ww2_s5jo) 3.0 } in
    let {
      x_a3rg [Dmd=Just L] :: GHC.Prim.Double#
      [LclId, Str=DmdType]
      x_a3rg = GHC.Prim.+## ww2_s5jo a_s5mx } in
    let {
      $j_s5oe :: GHC.Prim.Int# -> GHC.Prim.Double#
      [LclId, Arity=1]
      $j_s5oe =
        \ (ww3_s5ib :: GHC.Prim.Int#) ->
          let {
            x1_X3uy [Dmd=Just L] :: GHC.Prim.Double#
            [LclId, Str=DmdType]
            x1_X3uy = GHC.Prim.+## ww1_s5jk a_s5mx } in
          let {
            $j1_s5ob :: GHC.Prim.Int# -> GHC.Prim.Double#
            [LclId, Arity=1]
            $j1_s5ob =
              \ (ww4_s5ie :: GHC.Prim.Int#) ->
                let {
                  x2_X3uL [Dmd=Just L] :: GHC.Prim.Double#
                  [LclId, Str=DmdType]
                  x2_X3uL = GHC.Prim.+## ww_s5jg a_s5mx } in
                let {
                  $j2_s5o8 :: GHC.Prim.Int# -> GHC.Prim.Double#
                  [LclId, Arity=1]
                  $j2_s5o8 =
                    \ (ww5_s5ih :: GHC.Prim.Int#) ->
                      let {
                        y_X3OE [Dmd=Just L] :: GHC.Prim.Double#
                        [LclId, Str=DmdType]
                        y_X3OE =
                          GHC.Prim.*##
                            (GHC.Prim.int2Double#
                               (GHC.Prim.+# (GHC.Prim.+# ww5_s5ih ww4_s5ie) ww3_s5ib))
                            0.16666666666666666 } in
                      let {
                        x3_X3XT [Dmd=Just L] :: GHC.Prim.Double#
                        [LclId, Str=DmdType]
                        x3_X3XT =
                          GHC.Prim.+##
                            (GHC.Prim.-## ww2_s5jo (GHC.Prim.int2Double# ww3_s5ib)) y_X3OE } in
                      let {
                        x4_X3Qw [Dmd=Just L] :: GHC.Prim.Double#
                        [LclId, Str=DmdType]
                        x4_X3Qw =
                          GHC.Prim.+##
                            (GHC.Prim.-## ww1_s5jk (GHC.Prim.int2Double# ww4_s5ie)) y_X3OE } in
                      let {
                        x5_X3Qp [Dmd=Just L] :: GHC.Prim.Double#
                        [LclId, Str=DmdType]
                        x5_X3Qp =
                          GHC.Prim.+##
                            (GHC.Prim.-## ww_s5jg (GHC.Prim.int2Double# ww5_s5ih)) y_X3OE } in
                      let {
                        x6_a3rA [Dmd=Just L] :: GHC.Prim.Double#
                        [LclId, Str=DmdType]
                        x6_a3rA =
                          GHC.Prim.-##
                            (GHC.Prim.-##
                               (GHC.Prim.-## 0.6 (GHC.Prim.*## x5_X3Qp x5_X3Qp))
                               (GHC.Prim.*## x4_X3Qw x4_X3Qw))
                            (GHC.Prim.*## x3_X3XT x3_X3XT) } in
                      let {
                        a1_s5mD :: GHC.Prim.Int#
                        [LclId]
                        a1_s5mD =
                          GHC.Prim.word2Int#
                            (GHC.Prim.and# (GHC.Prim.int2Word# ww5_s5ih) (__word 255)) } in
                      let {
                        a2_s5mB :: GHC.Prim.Int#
                        [LclId]
                        a2_s5mB =
                          GHC.Prim.word2Int#
                            (GHC.Prim.and# (GHC.Prim.int2Word# ww4_s5ie) (__word 255)) } in
                      let {
                        a3_s5mz :: GHC.Prim.Int#
                        [LclId]
                        a3_s5mz =
                          GHC.Prim.word2Int#
                            (GHC.Prim.and# (GHC.Prim.int2Word# ww3_s5ib) (__word 255)) } in
                      let {
                        $w$j_s5jT :: GHC.Prim.Double# -> GHC.Prim.Double#
                        [LclId, Arity=1, Str=DmdType L]
                        $w$j_s5jT =
                          \ (w1_s5j4 :: GHC.Prim.Double#) ->
                            let {
                              $w$j1_s5jU
                                :: GHC.Prim.Int#
                                   -> GHC.Prim.Int#
                                   -> GHC.Prim.Int#
                                   -> GHC.Prim.Int#
                                   -> GHC.Prim.Int#
                                   -> GHC.Prim.Int#
                                   -> GHC.Prim.Double#
                              [LclId, Arity=6, Str=DmdType LLLLLL]
                              $w$j1_s5jU =
                                \ (ww6_s5iD :: GHC.Prim.Int#)
                                  (ww7_s5iH :: GHC.Prim.Int#)
                                  (ww8_s5iL :: GHC.Prim.Int#)
                                  (ww9_s5iP :: GHC.Prim.Int#)
                                  (ww10_s5iT :: GHC.Prim.Int#)
                                  (ww11_s5iX :: GHC.Prim.Int#) ->
                                  let {
                                    x7_X3YJ [Dmd=Just L] :: GHC.Prim.Double#
                                    [LclId, Str=DmdType]
                                    x7_X3YJ =
                                      GHC.Prim.+##
                                        (GHC.Prim.-## x3_X3XT (GHC.Prim.int2Double# ww8_s5iL))
                                        0.16666666666666666 } in
                                  let {
                                    x8_X3QW [Dmd=Just L] :: GHC.Prim.Double#
                                    [LclId, Str=DmdType]
                                    x8_X3QW =
                                      GHC.Prim.+##
                                        (GHC.Prim.-## x4_X3Qw (GHC.Prim.int2Double# ww7_s5iH))
                                        0.16666666666666666 } in
                                  let {
                                    x9_X3QP [Dmd=Just L] :: GHC.Prim.Double#
                                    [LclId, Str=DmdType]
                                    x9_X3QP =
                                      GHC.Prim.+##
                                        (GHC.Prim.-## x5_X3Qp (GHC.Prim.int2Double# ww6_s5iD))
                                        0.16666666666666666 } in
                                  let {
                                    x10_X3D9 [Dmd=Just L] :: GHC.Prim.Double#
                                    [LclId, Str=DmdType]
                                    x10_X3D9 =
                                      GHC.Prim.-##
                                        (GHC.Prim.-##
                                           (GHC.Prim.-## 0.6 (GHC.Prim.*## x9_X3QP x9_X3QP))
                                           (GHC.Prim.*## x8_X3QW x8_X3QW))
                                        (GHC.Prim.*## x7_X3YJ x7_X3YJ) } in
                                  let {
                                    $w$j2_s5jV :: GHC.Prim.Double# -> GHC.Prim.Double#
                                    [LclId, Arity=1, Str=DmdType L]
                                    $w$j2_s5jV =
                                      \ (w2_s5iq :: GHC.Prim.Double#) ->
                                        let {
                                          x11_X3ZB [Dmd=Just L] :: GHC.Prim.Double#
                                          [LclId, Str=DmdType]
                                          x11_X3ZB =
                                            GHC.Prim.+##
                                              (GHC.Prim.-##
                                                 x3_X3XT (GHC.Prim.int2Double# ww11_s5iX))
                                              0.3333333333333333 } in
                                        let {
                                          x12_X3Rn [Dmd=Just L] :: GHC.Prim.Double#
                                          [LclId, Str=DmdType]
                                          x12_X3Rn =
                                            GHC.Prim.+##
                                              (GHC.Prim.-##
                                                 x4_X3Qw (GHC.Prim.int2Double# ww10_s5iT))
                                              0.3333333333333333 } in
                                        let {
                                          x13_X3Rg [Dmd=Just L] :: GHC.Prim.Double#
                                          [LclId, Str=DmdType]
                                          x13_X3Rg =
                                            GHC.Prim.+##
                                              (GHC.Prim.-## x5_X3Qp (GHC.Prim.int2Double# ww9_s5iP))
                                              0.3333333333333333 } in
                                        let {
                                          x14_X3zt [Dmd=Just L] :: GHC.Prim.Double#
                                          [LclId, Str=DmdType]
                                          x14_X3zt =
                                            GHC.Prim.-##
                                              (GHC.Prim.-##
                                                 (GHC.Prim.-## 0.6 (GHC.Prim.*## x13_X3Rg x13_X3Rg))
                                                 (GHC.Prim.*## x12_X3Rn x12_X3Rn))
                                              (GHC.Prim.*## x11_X3ZB x11_X3ZB) } in
                                        let {
                                          $w$j3_s5jW :: GHC.Prim.Double# -> GHC.Prim.Double#
                                          [LclId, Arity=1, Str=DmdType L]
                                          $w$j3_s5jW =
                                            \ (w3_s5ik :: GHC.Prim.Double#) ->
                                              let {
                                                a4_s3Wu [Dmd=Just L] :: GHC.Prim.Double#
                                                [LclId, Str=DmdType]
                                                a4_s3Wu =
                                                  GHC.Prim.+## (GHC.Prim.-## x3_X3XT 1.0) 0.5 } in
                                              let {
                                                a5_s3Ws [Dmd=Just L] :: GHC.Prim.Double#
                                                [LclId, Str=DmdType]
                                                a5_s3Ws =
                                                  GHC.Prim.+## (GHC.Prim.-## x4_X3Qw 1.0) 0.5 } in
                                              let {
                                                a6_s3Wq [Dmd=Just L] :: GHC.Prim.Double#
                                                [LclId, Str=DmdType]
                                                a6_s3Wq =
                                                  GHC.Prim.+## (GHC.Prim.-## x5_X3Qp 1.0) 0.5 } in
                                              let {
                                                x15_X3zO [Dmd=Just L] :: GHC.Prim.Double#
                                                [LclId, Str=DmdType]
                                                x15_X3zO =
                                                  GHC.Prim.-##
                                                    (GHC.Prim.-##
                                                       (GHC.Prim.-##
                                                          0.6 (GHC.Prim.*## a6_s3Wq a6_s3Wq))
                                                       (GHC.Prim.*## a5_s3Ws a5_s3Ws))
                                                    (GHC.Prim.*## a4_s3Wu a4_s3Wu) } in
                                              case GHC.Prim.<## x15_X3zO 0.0 of _ {
                                                GHC.Types.False ->
                                                  case Engine.Terrain.Noise.grad3
                                                       `cast` (<Data.Vector.Unboxed.Base.TFCo:R:Vector(,,)
                                                                  <GHC.Types.Double>
                                                                  <GHC.Types.Double>
                                                                  <GHC.Types.Double>>
                                                               :: Data.Vector.Unboxed.Base.Vector
                                                                    (GHC.Types.Double,
                                                                     GHC.Types.Double,
                                                                     GHC.Types.Double)
                                                                    ~#
                                                                  Data.Vector.Unboxed.Base.R:Vector(,,)
                                                                    GHC.Types.Double
                                                                    GHC.Types.Double
                                                                    GHC.Types.Double)
                                                  of _
                                                  { Data.Vector.Unboxed.Base.V_3 _
                                                                                 as_a4AL
                                                                                 bs_a4AM
                                                                                 cs_a4AN ->
                                                  case as_a4AL
                                                       `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                               :: Data.Vector.Unboxed.Base.Vector
                                                                    GHC.Types.Double
                                                                    ~#
                                                                  Data.Vector.Primitive.Vector
                                                                    GHC.Types.Double)
                                                  of _
                                                  { Data.Vector.Primitive.Vector rb1_s5yW
                                                                                 _
                                                                                 rb3_s5yU ->
                                                  case bs_a4AM
                                                       `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                               :: Data.Vector.Unboxed.Base.Vector
                                                                    GHC.Types.Double
                                                                    ~#
                                                                  Data.Vector.Primitive.Vector
                                                                    GHC.Types.Double)
                                                  of _
                                                  { Data.Vector.Primitive.Vector rb4_s5z4
                                                                                 _
                                                                                 rb6_s5z2 ->
                                                  case cs_a4AN
                                                       `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                               :: Data.Vector.Unboxed.Base.Vector
                                                                    GHC.Types.Double
                                                                    ~#
                                                                  Data.Vector.Primitive.Vector
                                                                    GHC.Types.Double)
                                                  of _
                                                  { Data.Vector.Primitive.Vector rb7_s5Bq
                                                                                 _
                                                                                 rb9_s5Bs ->
                                                  case w_s5jd
                                                       `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorInt> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorInt>
                                                               :: Data.Vector.Unboxed.Base.Vector
                                                                    GHC.Types.Int
                                                                    ~#
                                                                  Data.Vector.Primitive.Vector
                                                                    GHC.Types.Int)
                                                  of _
                                                  { Data.Vector.Primitive.Vector rb10_a4zU
                                                                                 _
                                                                                 rb12_a4zW ->
                                                  case GHC.Prim.indexIntArray#
                                                         rb12_a4zW
                                                         (GHC.Prim.+#
                                                            rb10_a4zU (GHC.Prim.+# a3_s5mz 1))
                                                  of wild6_a4Ad { __DEFAULT ->
                                                  case GHC.Prim.indexIntArray#
                                                         rb12_a4zW
                                                         (GHC.Prim.+#
                                                            rb10_a4zU
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.+# a2_s5mB 1) wild6_a4Ad))
                                                  of wild7_X4GE { __DEFAULT ->
                                                  case GHC.Prim.indexIntArray#
                                                         rb12_a4zW
                                                         (GHC.Prim.+#
                                                            rb10_a4zU
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.+# a1_s5mD 1) wild7_X4GE))
                                                  of wild8_X4GN { __DEFAULT ->
                                                  let {
                                                    y1_X3xr [Dmd=Just L] :: GHC.Prim.Int#
                                                    [LclId, Str=DmdType]
                                                    y1_X3xr = GHC.Prim.remInt# wild8_X4GN 12 } in
                                                  case GHC.Prim.indexDoubleArray#
                                                         rb3_s5yU (GHC.Prim.+# rb1_s5yW y1_X3xr)
                                                  of wild9_a4Bk { __DEFAULT ->
                                                  case GHC.Prim.indexDoubleArray#
                                                         rb6_s5z2 (GHC.Prim.+# rb4_s5z4 y1_X3xr)
                                                  of wild10_X4Hw { __DEFAULT ->
                                                  case GHC.Prim.indexDoubleArray#
                                                         rb9_s5Bs (GHC.Prim.+# rb7_s5Bq y1_X3xr)
                                                  of wild11_X4HF { __DEFAULT ->
                                                  GHC.Prim.*##
                                                    16.0
                                                    (GHC.Prim.+##
                                                       (GHC.Prim.+##
                                                          (GHC.Prim.+## w1_s5j4 w2_s5iq) w3_s5ik)
                                                       (GHC.Prim.*##
                                                          (GHC.Prim.*##
                                                             (GHC.Prim.*##
                                                                (GHC.Prim.*## x15_X3zO x15_X3zO)
                                                                x15_X3zO)
                                                             x15_X3zO)
                                                          (GHC.Prim.+##
                                                             (GHC.Prim.+##
                                                                (GHC.Prim.*## wild9_a4Bk a6_s3Wq)
                                                                (GHC.Prim.*## wild10_X4Hw a5_s3Ws))
                                                             (GHC.Prim.*## wild11_X4HF a4_s3Wu))))
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                GHC.Types.True ->
                                                  GHC.Prim.*##
                                                    16.0
                                                    (GHC.Prim.+##
                                                       (GHC.Prim.+## w1_s5j4 w2_s5iq) w3_s5ik)
                                              } } in
                                        case GHC.Prim.<## x14_X3zt 0.0 of _ {
                                          GHC.Types.False ->
                                            case Engine.Terrain.Noise.grad3
                                                 `cast` (<Data.Vector.Unboxed.Base.TFCo:R:Vector(,,)
                                                            <GHC.Types.Double>
                                                            <GHC.Types.Double>
                                                            <GHC.Types.Double>>
                                                         :: Data.Vector.Unboxed.Base.Vector
                                                              (GHC.Types.Double,
                                                               GHC.Types.Double,
                                                               GHC.Types.Double)
                                                              ~#
                                                            Data.Vector.Unboxed.Base.R:Vector(,,)
                                                              GHC.Types.Double
                                                              GHC.Types.Double
                                                              GHC.Types.Double)
                                            of _
                                            { Data.Vector.Unboxed.Base.V_3 _
                                                                           as_a4AL
                                                                           bs_a4AM
                                                                           cs_a4AN ->
                                            case as_a4AL
                                                 `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                         :: Data.Vector.Unboxed.Base.Vector
                                                              GHC.Types.Double
                                                              ~#
                                                            Data.Vector.Primitive.Vector
                                                              GHC.Types.Double)
                                            of _
                                            { Data.Vector.Primitive.Vector rb1_s5zg _ rb3_s5ze ->
                                            case bs_a4AM
                                                 `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                         :: Data.Vector.Unboxed.Base.Vector
                                                              GHC.Types.Double
                                                              ~#
                                                            Data.Vector.Primitive.Vector
                                                              GHC.Types.Double)
                                            of _
                                            { Data.Vector.Primitive.Vector rb4_s5zo _ rb6_s5zm ->
                                            case cs_a4AN
                                                 `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                         :: Data.Vector.Unboxed.Base.Vector
                                                              GHC.Types.Double
                                                              ~#
                                                            Data.Vector.Primitive.Vector
                                                              GHC.Types.Double)
                                            of _
                                            { Data.Vector.Primitive.Vector rb7_s5Bm _ rb9_s5Bo ->
                                            case w_s5jd
                                                 `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorInt> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorInt>
                                                         :: Data.Vector.Unboxed.Base.Vector
                                                              GHC.Types.Int
                                                              ~#
                                                            Data.Vector.Primitive.Vector
                                                              GHC.Types.Int)
                                            of _
                                            { Data.Vector.Primitive.Vector rb10_a4zU _ rb12_a4zW ->
                                            case GHC.Prim.indexIntArray#
                                                   rb12_a4zW
                                                   (GHC.Prim.+#
                                                      rb10_a4zU (GHC.Prim.+# a3_s5mz ww11_s5iX))
                                            of wild6_a4Ad { __DEFAULT ->
                                            case GHC.Prim.indexIntArray#
                                                   rb12_a4zW
                                                   (GHC.Prim.+#
                                                      rb10_a4zU
                                                      (GHC.Prim.+#
                                                         (GHC.Prim.+# a2_s5mB ww10_s5iT)
                                                         wild6_a4Ad))
                                            of wild7_X4Gw { __DEFAULT ->
                                            case GHC.Prim.indexIntArray#
                                                   rb12_a4zW
                                                   (GHC.Prim.+#
                                                      rb10_a4zU
                                                      (GHC.Prim.+#
                                                         (GHC.Prim.+# a1_s5mD ww9_s5iP) wild7_X4Gw))
                                            of wild8_X4GF { __DEFAULT ->
                                            let {
                                              y1_X3xj [Dmd=Just L] :: GHC.Prim.Int#
                                              [LclId, Str=DmdType]
                                              y1_X3xj = GHC.Prim.remInt# wild8_X4GF 12 } in
                                            case GHC.Prim.indexDoubleArray#
                                                   rb3_s5ze (GHC.Prim.+# rb1_s5zg y1_X3xj)
                                            of wild9_a4Bk { __DEFAULT ->
                                            case GHC.Prim.indexDoubleArray#
                                                   rb6_s5zm (GHC.Prim.+# rb4_s5zo y1_X3xj)
                                            of wild10_X4Ho { __DEFAULT ->
                                            case GHC.Prim.indexDoubleArray#
                                                   rb9_s5Bo (GHC.Prim.+# rb7_s5Bm y1_X3xj)
                                            of wild11_X4Hx { __DEFAULT ->
                                            $w$j3_s5jW
                                              (GHC.Prim.*##
                                                 (GHC.Prim.*##
                                                    (GHC.Prim.*##
                                                       (GHC.Prim.*## x14_X3zt x14_X3zt) x14_X3zt)
                                                    x14_X3zt)
                                                 (GHC.Prim.+##
                                                    (GHC.Prim.+##
                                                       (GHC.Prim.*## wild9_a4Bk x13_X3Rg)
                                                       (GHC.Prim.*## wild10_X4Ho x12_X3Rn))
                                                    (GHC.Prim.*## wild11_X4Hx x11_X3ZB)))
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            }
                                            };
                                          GHC.Types.True -> $w$j3_s5jW 0.0
                                        } } in
                                  case GHC.Prim.<## x10_X3D9 0.0 of _ {
                                    GHC.Types.False ->
                                      case Engine.Terrain.Noise.grad3
                                           `cast` (<Data.Vector.Unboxed.Base.TFCo:R:Vector(,,)
                                                      <GHC.Types.Double>
                                                      <GHC.Types.Double>
                                                      <GHC.Types.Double>>
                                                   :: Data.Vector.Unboxed.Base.Vector
                                                        (GHC.Types.Double,
                                                         GHC.Types.Double,
                                                         GHC.Types.Double)
                                                        ~#
                                                      Data.Vector.Unboxed.Base.R:Vector(,,)
                                                        GHC.Types.Double
                                                        GHC.Types.Double
                                                        GHC.Types.Double)
                                      of _
                                      { Data.Vector.Unboxed.Base.V_3 _ as_a4AL bs_a4AM cs_a4AN ->
                                      case as_a4AL
                                           `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                   :: Data.Vector.Unboxed.Base.Vector
                                                        GHC.Types.Double
                                                        ~#
                                                      Data.Vector.Primitive.Vector GHC.Types.Double)
                                      of _ { Data.Vector.Primitive.Vector rb1_s5zA _ rb3_s5zy ->
                                      case bs_a4AM
                                           `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                   :: Data.Vector.Unboxed.Base.Vector
                                                        GHC.Types.Double
                                                        ~#
                                                      Data.Vector.Primitive.Vector GHC.Types.Double)
                                      of _ { Data.Vector.Primitive.Vector rb4_s5zI _ rb6_s5zG ->
                                      case cs_a4AN
                                           `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                                   :: Data.Vector.Unboxed.Base.Vector
                                                        GHC.Types.Double
                                                        ~#
                                                      Data.Vector.Primitive.Vector GHC.Types.Double)
                                      of _ { Data.Vector.Primitive.Vector rb7_s5Bi _ rb9_s5Bk ->
                                      case w_s5jd
                                           `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorInt> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorInt>
                                                   :: Data.Vector.Unboxed.Base.Vector GHC.Types.Int
                                                        ~#
                                                      Data.Vector.Primitive.Vector GHC.Types.Int)
                                      of _ { Data.Vector.Primitive.Vector rb10_a4zU _ rb12_a4zW ->
                                      case GHC.Prim.indexIntArray#
                                             rb12_a4zW
                                             (GHC.Prim.+# rb10_a4zU (GHC.Prim.+# a3_s5mz ww8_s5iL))
                                      of wild6_a4Ad { __DEFAULT ->
                                      case GHC.Prim.indexIntArray#
                                             rb12_a4zW
                                             (GHC.Prim.+#
                                                rb10_a4zU
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+# a2_s5mB ww7_s5iH) wild6_a4Ad))
                                      of wild7_X4Ga { __DEFAULT ->
                                      case GHC.Prim.indexIntArray#
                                             rb12_a4zW
                                             (GHC.Prim.+#
                                                rb10_a4zU
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+# a1_s5mD ww6_s5iD) wild7_X4Ga))
                                      of wild8_X4Gj { __DEFAULT ->
                                      let {
                                        y1_X3wX [Dmd=Just L] :: GHC.Prim.Int#
                                        [LclId, Str=DmdType]
                                        y1_X3wX = GHC.Prim.remInt# wild8_X4Gj 12 } in
                                      case GHC.Prim.indexDoubleArray#
                                             rb3_s5zy (GHC.Prim.+# rb1_s5zA y1_X3wX)
                                      of wild9_a4Bk { __DEFAULT ->
                                      case GHC.Prim.indexDoubleArray#
                                             rb6_s5zG (GHC.Prim.+# rb4_s5zI y1_X3wX)
                                      of wild10_X4H2 { __DEFAULT ->
                                      case GHC.Prim.indexDoubleArray#
                                             rb9_s5Bk (GHC.Prim.+# rb7_s5Bi y1_X3wX)
                                      of wild11_X4Hb { __DEFAULT ->
                                      $w$j2_s5jV
                                        (GHC.Prim.*##
                                           (GHC.Prim.*##
                                              (GHC.Prim.*##
                                                 (GHC.Prim.*## x10_X3D9 x10_X3D9) x10_X3D9)
                                              x10_X3D9)
                                           (GHC.Prim.+##
                                              (GHC.Prim.+##
                                                 (GHC.Prim.*## wild9_a4Bk x9_X3QP)
                                                 (GHC.Prim.*## wild10_X4H2 x8_X3QW))
                                              (GHC.Prim.*## wild11_X4Hb x7_X3YJ)))
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      }
                                      };
                                    GHC.Types.True -> $w$j2_s5jV 0.0
                                  } } in
                            case GHC.Prim.>=## x5_X3Qp x4_X3Qw of _ {
                              GHC.Types.False ->
                                case GHC.Prim.<## x4_X3Qw x3_X3XT of _ {
                                  GHC.Types.False ->
                                    case GHC.Prim.<## x5_X3Qp x3_X3XT of _ {
                                      GHC.Types.False -> $w$j1_s5jU 0 1 0 1 1 0;
                                      GHC.Types.True -> $w$j1_s5jU 0 1 0 0 1 1
                                    };
                                  GHC.Types.True -> $w$j1_s5jU 0 0 1 0 1 1
                                };
                              GHC.Types.True ->
                                case GHC.Prim.>=## x4_X3Qw x3_X3XT of _ {
                                  GHC.Types.False ->
                                    case GHC.Prim.>=## x5_X3Qp x3_X3XT of _ {
                                      GHC.Types.False -> $w$j1_s5jU 0 0 1 1 0 1;
                                      GHC.Types.True -> $w$j1_s5jU 1 0 0 1 0 1
                                    };
                                  GHC.Types.True -> $w$j1_s5jU 1 0 0 1 1 0
                                }
                            } } in
                      case GHC.Prim.<## x6_a3rA 0.0 of _ {
                        GHC.Types.False ->
                          case Engine.Terrain.Noise.grad3
                               `cast` (<Data.Vector.Unboxed.Base.TFCo:R:Vector(,,)
                                          <GHC.Types.Double> <GHC.Types.Double> <GHC.Types.Double>>
                                       :: Data.Vector.Unboxed.Base.Vector
                                            (GHC.Types.Double, GHC.Types.Double, GHC.Types.Double)
                                            ~#
                                          Data.Vector.Unboxed.Base.R:Vector(,,)
                                            GHC.Types.Double GHC.Types.Double GHC.Types.Double)
                          of _ { Data.Vector.Unboxed.Base.V_3 _ as_a4AL bs_a4AM cs_a4AN ->
                          case as_a4AL
                               `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                       :: Data.Vector.Unboxed.Base.Vector GHC.Types.Double
                                            ~#
                                          Data.Vector.Primitive.Vector GHC.Types.Double)
                          of _ { Data.Vector.Primitive.Vector rb1_s5zU _ rb3_s5zS ->
                          case bs_a4AM
                               `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                       :: Data.Vector.Unboxed.Base.Vector GHC.Types.Double
                                            ~#
                                          Data.Vector.Primitive.Vector GHC.Types.Double)
                          of _ { Data.Vector.Primitive.Vector rb4_s5A2 _ rb6_s5A0 ->
                          case cs_a4AN
                               `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorDouble> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorDouble>
                                       :: Data.Vector.Unboxed.Base.Vector GHC.Types.Double
                                            ~#
                                          Data.Vector.Primitive.Vector GHC.Types.Double)
                          of _ { Data.Vector.Primitive.Vector rb7_s5Be _ rb9_s5Bg ->
                          case w_s5jd
                               `cast` (<Data.Vector.Unboxed.Base.TFCo:R:VectorInt> ; <Data.Vector.Unboxed.Base.NTCo:R:VectorInt>
                                       :: Data.Vector.Unboxed.Base.Vector GHC.Types.Int
                                            ~#
                                          Data.Vector.Primitive.Vector GHC.Types.Int)
                          of _ { Data.Vector.Primitive.Vector rb10_a4zU _ rb12_a4zW ->
                          case GHC.Prim.indexIntArray#
                                 rb12_a4zW (GHC.Prim.+# rb10_a4zU a3_s5mz)
                          of wild6_a4Ad { __DEFAULT ->
                          case GHC.Prim.indexIntArray#
                                 rb12_a4zW (GHC.Prim.+# rb10_a4zU (GHC.Prim.+# a2_s5mB wild6_a4Ad))
                          of wild7_X4FE { __DEFAULT ->
                          case GHC.Prim.indexIntArray#
                                 rb12_a4zW (GHC.Prim.+# rb10_a4zU (GHC.Prim.+# a1_s5mD wild7_X4FE))
                          of wild8_X4FN { __DEFAULT ->
                          let {
                            y1_X3wu [Dmd=Just L] :: GHC.Prim.Int#
                            [LclId, Str=DmdType]
                            y1_X3wu = GHC.Prim.remInt# wild8_X4FN 12 } in
                          case GHC.Prim.indexDoubleArray#
                                 rb3_s5zS (GHC.Prim.+# rb1_s5zU y1_X3wu)
                          of wild9_a4Bk { __DEFAULT ->
                          case GHC.Prim.indexDoubleArray#
                                 rb6_s5A0 (GHC.Prim.+# rb4_s5A2 y1_X3wu)
                          of wild10_X4Gz { __DEFAULT ->
                          case GHC.Prim.indexDoubleArray#
                                 rb9_s5Bg (GHC.Prim.+# rb7_s5Be y1_X3wu)
                          of wild11_X4GI { __DEFAULT ->
                          $w$j_s5jT
                            (GHC.Prim.*##
                               (GHC.Prim.*##
                                  (GHC.Prim.*## (GHC.Prim.*## x6_a3rA x6_a3rA) x6_a3rA) x6_a3rA)
                               (GHC.Prim.+##
                                  (GHC.Prim.+##
                                     (GHC.Prim.*## wild9_a4Bk x5_X3Qp)
                                     (GHC.Prim.*## wild10_X4Gz x4_X3Qw))
                                  (GHC.Prim.*## wild11_X4GI x3_X3XT)))
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                          }
                          };
                        GHC.Types.True -> $w$j_s5jT 0.0
                      } } in
                case GHC.Prim.>## x2_X3uL 0.0 of _ {
                  GHC.Types.False ->
                    $j2_s5o8 (GHC.Prim.double2Int# (GHC.Prim.-## x2_X3uL 1.0));
                  GHC.Types.True -> $j2_s5o8 (GHC.Prim.double2Int# x2_X3uL)
                } } in
          case GHC.Prim.>## x1_X3uy 0.0 of _ {
            GHC.Types.False ->
              $j1_s5ob (GHC.Prim.double2Int# (GHC.Prim.-## x1_X3uy 1.0));
            GHC.Types.True -> $j1_s5ob (GHC.Prim.double2Int# x1_X3uy)
          } } in
    case GHC.Prim.>## x_a3rg 0.0 of _ {
      GHC.Types.False ->
        $j_s5oe (GHC.Prim.double2Int# (GHC.Prim.-## x_a3rg 1.0));
      GHC.Types.True -> $j_s5oe (GHC.Prim.double2Int# x_a3rg)
    }

Engine.Terrain.Noise.noise3D [InlPrag=INLINE[0]]
  :: Engine.Terrain.Noise.Permutation
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
[GblId,
 Arity=4,
 Str=DmdType LU(L)U(L)U(L)m,
 Unf=Unf{Src=Worker=Engine.Terrain.Noise.$wnoise3D, TopLvl=True,
         Arity=4, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s5jd [Occ=Once] :: Engine.Terrain.Noise.Permutation)
                 (w1_s5je [Occ=Once!] :: GHC.Types.Double)
                 (w2_s5ji [Occ=Once!] :: GHC.Types.Double)
                 (w3_s5jm [Occ=Once!] :: GHC.Types.Double) ->
                 case w1_s5je of _ { GHC.Types.D# ww_s5jg [Occ=Once] ->
                 case w2_s5ji of _ { GHC.Types.D# ww1_s5jk [Occ=Once] ->
                 case w3_s5jm of _ { GHC.Types.D# ww2_s5jo [Occ=Once] ->
                 case Engine.Terrain.Noise.$wnoise3D
                        w_s5jd ww_s5jg ww1_s5jk ww2_s5jo
                 of ww3_s5js { __DEFAULT ->
                 GHC.Types.D# ww3_s5js
                 }
                 }
                 }
                 }}]
Engine.Terrain.Noise.noise3D =
  \ (w_s5jd :: Engine.Terrain.Noise.Permutation)
    (w1_s5je :: GHC.Types.Double)
    (w2_s5ji :: GHC.Types.Double)
    (w3_s5jm :: GHC.Types.Double) ->
    case w1_s5je of _ { GHC.Types.D# ww_s5jg ->
    case w2_s5ji of _ { GHC.Types.D# ww1_s5jk ->
    case w3_s5jm of _ { GHC.Types.D# ww2_s5jo ->
    case Engine.Terrain.Noise.$wnoise3D
           w_s5jd ww_s5jg ww1_s5jk ww2_s5jo
    of ww3_s5js { __DEFAULT ->
    GHC.Types.D# ww3_s5js
    }
    }
    }
    }

Engine.Terrain.Noise.$wsimplex3D
  :: Engine.Terrain.Noise.Permutation
     -> GHC.Prim.Int#
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Prim.Double#
[GblId,
 Arity=6,
 Str=DmdType LLLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=6, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 20 20 20 20] 166 0}]
Engine.Terrain.Noise.$wsimplex3D =
  \ (w_s5jA :: Engine.Terrain.Noise.Permutation)
    (ww_s5jD :: GHC.Prim.Int#)
    (w1_s5jF :: GHC.Types.Double)
    (w2_s5jG :: GHC.Types.Double)
    (w3_s5jH :: GHC.Types.Double)
    (w4_s5jI :: GHC.Types.Double) ->
    Engine.Terrain.Noise.$wharmonic
      ww_s5jD
      (\ (f_a2aK :: GHC.Types.Double) ->
         case w2_s5jG of _ { GHC.Types.D# x_a3Jn ->
         case f_a2aK of _ { GHC.Types.D# y_a3Jr ->
         case w1_s5jF of _ { GHC.Types.D# y1_a3KI ->
         case w3_s5jH of _ { GHC.Types.D# x1_X3MD ->
         case w4_s5jI of _ { GHC.Types.D# x2_X3MM ->
         case GHC.Prim./## (GHC.Prim.*## x2_X3MM y_a3Jr) y1_a3KI
         of wild5_X3Oe { __DEFAULT ->
         case GHC.Prim./## (GHC.Prim.*## x1_X3MD y_a3Jr) y1_a3KI
         of wild6_X3O5 { __DEFAULT ->
         case GHC.Prim./## (GHC.Prim.*## x_a3Jn y_a3Jr) y1_a3KI
         of wild7_a3KK { __DEFAULT ->
         case Engine.Terrain.Noise.$wnoise3D
                w_s5jA wild7_a3KK wild6_X3O5 wild5_X3Oe
         of ww1_s5js { __DEFAULT ->
         GHC.Types.D# ww1_s5js
         }
         }
         }
         }
         }
         }
         }
         }
         })

Engine.Terrain.Noise.simplex3D [InlPrag=INLINE[0]]
  :: Engine.Terrain.Noise.Permutation
     -> GHC.Types.Int
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Types.Double
[GblId,
 Arity=6,
 Str=DmdType LU(L)LLLLm,
 Unf=Unf{Src=Worker=Engine.Terrain.Noise.$wsimplex3D, TopLvl=True,
         Arity=6, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s5jA [Occ=Once] :: Engine.Terrain.Noise.Permutation)
                 (w1_s5jB [Occ=Once!] :: GHC.Types.Int)
                 (w2_s5jF [Occ=Once] :: GHC.Types.Double)
                 (w3_s5jG [Occ=Once] :: GHC.Types.Double)
                 (w4_s5jH [Occ=Once] :: GHC.Types.Double)
                 (w5_s5jI [Occ=Once] :: GHC.Types.Double) ->
                 case w1_s5jB of _ { GHC.Types.I# ww_s5jD [Occ=Once] ->
                 case Engine.Terrain.Noise.$wsimplex3D
                        w_s5jA ww_s5jD w2_s5jF w3_s5jG w4_s5jH w5_s5jI
                 of ww1_s5jL { __DEFAULT ->
                 GHC.Types.D# ww1_s5jL
                 }
                 }}]
Engine.Terrain.Noise.simplex3D =
  \ (w_s5jA :: Engine.Terrain.Noise.Permutation)
    (w1_s5jB :: GHC.Types.Int)
    (w2_s5jF :: GHC.Types.Double)
    (w3_s5jG :: GHC.Types.Double)
    (w4_s5jH :: GHC.Types.Double)
    (w5_s5jI :: GHC.Types.Double) ->
    case w1_s5jB of _ { GHC.Types.I# ww_s5jD ->
    case Engine.Terrain.Noise.$wsimplex3D
           w_s5jA ww_s5jD w2_s5jF w3_s5jG w4_s5jH w5_s5jI
    of ww1_s5jL { __DEFAULT ->
    GHC.Types.D# ww1_s5jL
    }
    }

Engine.Terrain.Noise.simplexNoise1
  :: GHC.Types.Int
     -> GHC.Types.Int
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]] #)
[GblId,
 Arity=5,
 Str=DmdType LLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [20 20 0 0 0] 696 30}]
Engine.Terrain.Noise.simplexNoise1 =
  \ (width_a2aL :: GHC.Types.Int)
    (octaves_a2aM :: GHC.Types.Int)
    (wavelength_a2aN :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (intensity_a2aO :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case System.Random.$fRandomInt3
           Engine.Terrain.Noise.simplexNoise2 eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    (# ipv_a3Ui,
       case width_a2aL of wild_a3tD { GHC.Types.I# x_a3tF ->
       let {
         y_X3VG [Dmd=Just L] :: GHC.Prim.Int#
         [LclId, Str=DmdType]
         y_X3VG = GHC.Prim.-# x_a3tF 1 } in
       case GHC.Prim.># 0 y_X3VG of _ {
         GHC.Types.False ->
           let {
             lvl1_s3Ix :: Engine.Terrain.Noise.Permutation
             [LclId, Str=DmdType]
             lvl1_s3Ix =
               Engine.Terrain.Noise.perm3
                 (GHC.List.concat_go
                    @ GHC.Types.Int
                    (Engine.Terrain.Noise.perm1
                       (System.Random.mkStdGen ipv1_a3Uj))) } in
           let {
             lvl2_s3Iu :: GHC.Types.Double
             [LclId, Str=DmdType]
             lvl2_s3Iu =
               case wavelength_a2aN
                    `cast` (<Foreign.C.Types.NTCo:CFloat>
                            :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
               of _ { GHC.Types.F# x1_a3wD ->
               GHC.Types.D# (GHC.Prim.float2Double# x1_a3wD)
               } } in
           let {
             lvl3_s3Iv :: [GHC.Types.Int]
             [LclId, Str=DmdType]
             lvl3_s3Iv = GHC.Enum.eftInt 0 (GHC.Prim.-# x_a3tF 1) } in
           letrec {
             go_X3VN [Occ=LoopBreaker]
               :: GHC.Prim.Int# -> [Foreign.C.Types.CFloat]
             [LclId, Arity=1, Str=DmdType L]
             go_X3VN =
               \ (x1_a3Sr :: GHC.Prim.Int#) ->
                 let {
                   z_a3qo :: [Foreign.C.Types.CFloat]
                   [LclId, Str=DmdType]
                   z_a3qo =
                     case GHC.Prim.==# x1_a3Sr y_X3VG of _ {
                       GHC.Types.False -> go_X3VN (GHC.Prim.+# x1_a3Sr 1);
                       GHC.Types.True -> GHC.Types.[] @ Foreign.C.Types.CFloat
                     } } in
                 let {
                   a_s552 [Dmd=Just L] :: GHC.Prim.Double#
                   [LclId, Str=DmdType]
                   a_s552 = GHC.Prim.int2Double# x1_a3Sr } in
                 letrec {
                   go1_a3qp [Occ=LoopBreaker]
                     :: [GHC.Types.Int] -> [Foreign.C.Types.CFloat]
                   [LclId, Arity=1, Str=DmdType S]
                   go1_a3qp =
                     \ (ds_a3qq :: [GHC.Types.Int]) ->
                       case ds_a3qq of _ {
                         [] -> z_a3qo;
                         : y1_a3qv ys_a3qw ->
                           GHC.Types.:
                             @ Foreign.C.Types.CFloat
                             (case intensity_a2aO
                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                              of _ { GHC.Types.F# x2_a3Uw ->
                              case octaves_a2aM of _ { GHC.Types.I# ww_s5jD ->
                              let {
                                w1_s5jH :: GHC.Types.Double
                                [LclId]
                                w1_s5jH =
                                  case y1_a3qv of _ { GHC.Types.I# i_X3uC ->
                                  GHC.Types.D# (GHC.Prim.int2Double# i_X3uC)
                                  } } in
                              case Engine.Terrain.Noise.$wharmonic
                                     ww_s5jD
                                     (\ (f_a2aK :: GHC.Types.Double) ->
                                        case f_a2aK of _ { GHC.Types.D# y2_a3Jr ->
                                        case lvl2_s3Iu of _ { GHC.Types.D# y3_a3KI ->
                                        case w1_s5jH of _ { GHC.Types.D# x3_X3MD ->
                                        case GHC.Prim./## (GHC.Prim.*## 0.0 y2_a3Jr) y3_a3KI
                                        of wild7_X3Oe { __DEFAULT ->
                                        case GHC.Prim./## (GHC.Prim.*## x3_X3MD y2_a3Jr) y3_a3KI
                                        of wild8_X3O5 { __DEFAULT ->
                                        case GHC.Prim./## (GHC.Prim.*## a_s552 y2_a3Jr) y3_a3KI
                                        of wild9_a3KK { __DEFAULT ->
                                        case Engine.Terrain.Noise.$wnoise3D
                                               lvl1_s3Ix wild9_a3KK wild8_X3O5 wild7_X3Oe
                                        of ww1_s5js { __DEFAULT ->
                                        GHC.Types.D# ww1_s5js
                                        }
                                        }
                                        }
                                        }
                                        }
                                        }
                                        })
                              of ww1_s5jL { __DEFAULT ->
                              (GHC.Types.F#
                                 (GHC.Prim.timesFloat# x2_a3Uw (GHC.Prim.double2Float# ww1_s5jL)))
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                              }
                              }
                              })
                             (go1_a3qp ys_a3qw)
                       }; } in
                 go1_a3qp lvl3_s3Iv; } in
           Engine.Terrain.Noise.splitInterval
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (go_X3VN 0)
             wild_a3tD;
         GHC.Types.True ->
           Engine.Terrain.Noise.splitInterval
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (GHC.Types.[] @ Foreign.C.Types.CFloat)
             wild_a3tD
       }
       } #)
    }

Engine.Terrain.Noise.simplexNoise
  :: GHC.Types.Int
     -> GHC.Types.Int
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Types.IO [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
[GblId,
 Arity=5,
 Str=DmdType LLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Terrain.Noise.simplexNoise =
  Engine.Terrain.Noise.simplexNoise1
  `cast` (<GHC.Types.Int>
          -> <GHC.Types.Int>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <[[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]>)>
          :: (GHC.Types.Int
              -> GHC.Types.Int
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]] #))
               ~#
             (GHC.Types.Int
              -> GHC.Types.Int
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Types.IO [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]))


------ Local rules for imported ids --------
"SPEC GHC.Real.^ [GHC.Types.Double, GHC.Types.Int]" [ALWAYS]
    forall ($dNum_s3zH :: GHC.Num.Num GHC.Types.Double)
           ($dIntegral_s3zJ :: GHC.Real.Integral GHC.Types.Int).
      GHC.Real.^ @ GHC.Types.Double
                 @ GHC.Types.Int
                 $dNum_s3zH
                 $dIntegral_s3zJ
      = Engine.Terrain.Noise.$s^
"SPEC GHC.Real.^^ [GHC.Types.Double, GHC.Types.Int]" [ALWAYS]
    forall ($dFractional_s3IA :: GHC.Real.Fractional GHC.Types.Double)
           ($dIntegral_s3Iz :: GHC.Real.Integral GHC.Types.Int).
      GHC.Real.^^ @ GHC.Types.Double
                  @ GHC.Types.Int
                  $dFractional_s3IA
                  $dIntegral_s3Iz
      = Engine.Terrain.Noise.$s^^


[ 2 of 17] Compiling Engine.Graphics.Textures ( Engine/Graphics/Textures.hs, Engine/Graphics/Textures.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 191, types: 165, coercions: 19}

Engine.Graphics.Textures.$fShowImage2 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Graphics.Textures.$fShowImage2 =
  GHC.CString.unpackCString# "Image "

Engine.Graphics.Textures.$w$cshowsPrec
  :: GHC.Prim.Int#
     -> Graphics.Rendering.OpenGL.GL.CoordTrans.Size
     -> Graphics.Rendering.OpenGL.GL.PixelData.PixelData GHC.Word.Word8
     -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 20 20] 301 120}]
Engine.Graphics.Textures.$w$cshowsPrec =
  \ (ww_s96B :: GHC.Prim.Int#)
    (ww1_s96F :: Graphics.Rendering.OpenGL.GL.CoordTrans.Size)
    (ww2_s96G
       :: Graphics.Rendering.OpenGL.GL.PixelData.PixelData
            GHC.Word.Word8) ->
    let {
      g_X3vm [Dmd=Just L] :: GHC.Base.String -> GHC.Base.String
      [LclId, Str=DmdType]
      g_X3vm =
        case ww2_s96G
        of _
        { Graphics.Rendering.OpenGL.GL.PixelData.PixelData ww3_a94Q
                                                           ww4_a94R
                                                           ww5_a94S ->
        Graphics.Rendering.OpenGL.GL.PixelData.$w$cshowsPrec
          @ GHC.Word.Word8 11 ww3_a94Q ww4_a94R ww5_a94S
        } } in
    let {
      p_a8Oj :: GHC.Show.ShowS
      [LclId, Arity=1, Str=DmdType L]
      p_a8Oj =
        \ (x_X3vs :: GHC.Base.String) ->
          GHC.Base.++
            @ GHC.Types.Char
            Engine.Graphics.Textures.$fShowImage2
            (case ww1_s96F
             of _
             { Graphics.Rendering.OpenGL.GL.CoordTrans.Size ww3_a95p ww4_a95t ->
             case ww3_a95p
                  `cast` (<Foreign.C.Types.NTCo:CInt>
                          :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
             of _ { GHC.Int.I32# ww6_s97w ->
             case ww4_a95t
                  `cast` (<Foreign.C.Types.NTCo:CInt>
                          :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
             of _ { GHC.Int.I32# ww8_s97A ->
             Graphics.Rendering.OpenGL.GL.CoordTrans.$w$cshowsPrec3
               11
               ww6_s97w
               ww8_s97A
               (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g_X3vm x_X3vs))
             }
             }
             }) } in
    case GHC.Prim.>=# ww_s96B 11 of _ {
      GHC.Types.False -> p_a8Oj;
      GHC.Types.True ->
        \ (x_a8Oo :: GHC.Base.String) ->
          GHC.Types.:
            @ GHC.Types.Char
            GHC.Show.shows11
            (p_a8Oj (GHC.Types.: @ GHC.Types.Char GHC.Show.shows10 x_a8Oo))
    }

Engine.Graphics.Textures.$fShowImage_$cshowsPrec [InlPrag=INLINE[0]]
  :: GHC.Types.Int
     -> Engine.Graphics.Textures.Image -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=DmdType U(L)U(LL),
 Unf=Unf{Src=Worker=Engine.Graphics.Textures.$w$cshowsPrec,
         TopLvl=True, Arity=2, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_s96z [Occ=Once!] :: GHC.Types.Int)
                 (w1_s96D [Occ=Once!] :: Engine.Graphics.Textures.Image) ->
                 case w_s96z of _ { GHC.Types.I# ww_s96B [Occ=Once] ->
                 case w1_s96D
                 of _
                 { Engine.Graphics.Textures.Image ww1_s96F [Occ=Once]
                                                  ww2_s96G [Occ=Once] ->
                 Engine.Graphics.Textures.$w$cshowsPrec ww_s96B ww1_s96F ww2_s96G
                 }
                 }}]
Engine.Graphics.Textures.$fShowImage_$cshowsPrec =
  \ (w_s96z :: GHC.Types.Int)
    (w1_s96D :: Engine.Graphics.Textures.Image) ->
    case w_s96z of _ { GHC.Types.I# ww_s96B ->
    case w1_s96D
    of _ { Engine.Graphics.Textures.Image ww1_s96F ww2_s96G ->
    Engine.Graphics.Textures.$w$cshowsPrec ww_s96B ww1_s96F ww2_s96G
    }
    }

Engine.Graphics.Textures.$fShowImage1
  :: Engine.Graphics.Textures.Image -> GHC.Show.ShowS
[GblId,
 Arity=1,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [20] 50 0}]
Engine.Graphics.Textures.$fShowImage1 =
  \ (w_s96D :: Engine.Graphics.Textures.Image) ->
    case w_s96D
    of _ { Engine.Graphics.Textures.Image ww_s96F ww1_s96G ->
    Engine.Graphics.Textures.$w$cshowsPrec 0 ww_s96F ww1_s96G
    }

Engine.Graphics.Textures.$fShowImage_$cshowList
  :: [Engine.Graphics.Textures.Image] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 60}]
Engine.Graphics.Textures.$fShowImage_$cshowList =
  GHC.Show.showList__
    @ Engine.Graphics.Textures.Image
    Engine.Graphics.Textures.$fShowImage1

Engine.Graphics.Textures.$fShowImage_$cshow
  :: Engine.Graphics.Textures.Image -> GHC.Base.String
[GblId,
 Arity=1,
 Str=DmdType U(LL),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a8Qm [Occ=Once] :: Engine.Graphics.Textures.Image) ->
                 Engine.Graphics.Textures.$fShowImage_$cshowsPrec
                   GHC.Show.shows26 x_a8Qm (GHC.Types.[] @ GHC.Types.Char)}]
Engine.Graphics.Textures.$fShowImage_$cshow =
  \ (x_a8Qm :: Engine.Graphics.Textures.Image) ->
    case x_a8Qm
    of _ { Engine.Graphics.Textures.Image ww_s96F ww1_s96G ->
    Engine.Graphics.Textures.$w$cshowsPrec
      0 ww_s96F ww1_s96G (GHC.Types.[] @ GHC.Types.Char)
    }

Engine.Graphics.Textures.$fShowImage [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Show.Show Engine.Graphics.Textures.Image
[GblId[DFunId],
 Str=DmdType m,
 Unf=DFun(arity=0) GHC.Show.D:Show [{Engine.Graphics.Textures.$fShowImage_$cshowsPrec},
                                    {Engine.Graphics.Textures.$fShowImage_$cshow},
                                    {Engine.Graphics.Textures.$fShowImage_$cshowList}]]
Engine.Graphics.Textures.$fShowImage =
  GHC.Show.D:Show
    @ Engine.Graphics.Textures.Image
    Engine.Graphics.Textures.$fShowImage_$cshowsPrec
    Engine.Graphics.Textures.$fShowImage_$cshow
    Engine.Graphics.Textures.$fShowImage_$cshowList

lvl_r982 :: [GHC.Types.Char]
[GblId]
lvl_r982 =
  GHC.CString.unpackCString#
    "Engine.Graphics.Texture.juicyLoadImage: bad image colorspace or format."

Engine.Graphics.Textures.juicyLoadImage2
  :: GHC.Types.IO Engine.Graphics.Textures.Image
[GblId, Str=DmdType b]
Engine.Graphics.Textures.juicyLoadImage2 =
  GHC.Err.error
    @ (GHC.Types.IO Engine.Graphics.Textures.Image) lvl_r982

Engine.Graphics.Textures.juicyLoadImage1
  :: GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Graphics.Textures.Image #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 324 60}]
Engine.Graphics.Textures.juicyLoadImage1 =
  \ (file_a8zg :: GHC.IO.FilePath)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Codec.Picture.readImage1 file_a8zg eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      Data.Either.Left err_a8Ae ->
        case GHC.Err.error
               @ (GHC.Types.IO Engine.Graphics.Textures.Image) err_a8Ae
        of wild1_00 {
        };
      Data.Either.Right ds_d8NN ->
        case ds_d8NN of _ {
          __DEFAULT ->
            case Engine.Graphics.Textures.juicyLoadImage2 of wild2_00 { };
          Codec.Picture.Types.ImageRGB8 ds2_d8NO ->
            case ds2_d8NO
            of _ { Codec.Picture.Types.Image rb_d8Oc rb1_d8Od dat_a8Ah ->
            case dat_a8Ah
                 `cast` (Data.Vector.Storable.Vector
                           <(Codec.Picture.Types.TFCo:R:PixelBaseComponentPixelRGB8)>
                         :: Data.Vector.Storable.Vector
                              (Codec.Picture.Types.PixelBaseComponent
                                 Codec.Picture.Types.PixelRGB8)
                              ~#
                            Data.Vector.Storable.Vector GHC.Word.Word8)
            of _ { Data.Vector.Storable.Vector _ rb3_a8Sr rb4_a8Ss ->
            case GHC.Prim.touch#
                   @ GHC.ForeignPtr.ForeignPtrContents rb4_a8Ss ipv_a3Ui
            of s'_a8UT { __DEFAULT ->
            (# s'_a8UT,
               Engine.Graphics.Textures.Image
                 (Graphics.Rendering.OpenGL.GL.CoordTrans.Size
                    ((GHC.Int.I32# (GHC.Prim.narrow32Int# rb_d8Oc))
                     `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                             :: GHC.Int.Int32 ~# Foreign.C.Types.CInt))
                    ((GHC.Int.I32# (GHC.Prim.narrow32Int# rb1_d8Od))
                     `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                             :: GHC.Int.Int32 ~# Foreign.C.Types.CInt)))
                 (Graphics.Rendering.OpenGL.GL.PixelData.PixelData
                    @ GHC.Word.Word8
                    Graphics.Rendering.OpenGL.GL.PixelFormat.RGB
                    Graphics.Rendering.OpenGL.GL.DataType.UnsignedByte
                    (GHC.Ptr.Ptr @ GHC.Word.Word8 rb3_a8Sr)) #)
            }
            }
            };
          Codec.Picture.Types.ImageYCbCr8 img_a8Ej ->
            case img_a8Ej
            of _ { Codec.Picture.Types.Image ww_a95Y ww1_a95Z ww2_a960 ->
            case Codec.Picture.Types.$w$cconvertImage1
                   ww_a95Y ww1_a95Z ww2_a960
            of _ { (# ww4_a965, ww5_a966, ww6_a967 #) ->
            case ww6_a967
                 `cast` (Data.Vector.Storable.Vector
                           <(Codec.Picture.Types.TFCo:R:PixelBaseComponentPixelRGB8)>
                         :: Data.Vector.Storable.Vector
                              (Codec.Picture.Types.PixelBaseComponent
                                 Codec.Picture.Types.PixelRGB8)
                              ~#
                            Data.Vector.Storable.Vector GHC.Word.Word8)
            of _ { Data.Vector.Storable.Vector _ rb1_a8Sr rb2_a8Ss ->
            case GHC.Prim.touch#
                   @ GHC.ForeignPtr.ForeignPtrContents rb2_a8Ss ipv_a3Ui
            of s'_a8UT { __DEFAULT ->
            (# s'_a8UT,
               Engine.Graphics.Textures.Image
                 (Graphics.Rendering.OpenGL.GL.CoordTrans.Size
                    ((GHC.Int.I32# (GHC.Prim.narrow32Int# ww4_a965))
                     `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                             :: GHC.Int.Int32 ~# Foreign.C.Types.CInt))
                    ((GHC.Int.I32# (GHC.Prim.narrow32Int# ww5_a966))
                     `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                             :: GHC.Int.Int32 ~# Foreign.C.Types.CInt)))
                 (Graphics.Rendering.OpenGL.GL.PixelData.PixelData
                    @ GHC.Word.Word8
                    Graphics.Rendering.OpenGL.GL.PixelFormat.RGB
                    Graphics.Rendering.OpenGL.GL.DataType.UnsignedByte
                    (GHC.Ptr.Ptr @ GHC.Word.Word8 rb1_a8Sr)) #)
            }
            }
            }
            }
        }
    }
    }

Engine.Graphics.Textures.juicyLoadImage
  :: GHC.IO.FilePath -> GHC.Types.IO Engine.Graphics.Textures.Image
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Textures.juicyLoadImage =
  Engine.Graphics.Textures.juicyLoadImage1
  `cast` (<GHC.IO.FilePath>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Graphics.Textures.Image>)>
          :: (GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Graphics.Textures.Image #))
               ~#
             (GHC.IO.FilePath -> GHC.Types.IO Engine.Graphics.Textures.Image))



[ 3 of 17] Compiling Engine.Core.Vec  ( Engine/Core/Vec.hs, Engine/Core/Vec.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 957, types: 1,111, coercions: 0}

Engine.Core.Vec.$WVec3 [InlPrag=INLINE]
  :: forall a_a9kP.
     a_a9kP -> a_a9kP -> a_a9kP -> Engine.Core.Vec.Vec3 a_a9kP
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType SSSm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a9kP)
                 (tpl_B1 [Occ=Once] :: a_a9kP)
                 (tpl_B2 [Occ=Once] :: a_a9kP)
                 (tpl_B3 [Occ=Once] :: a_a9kP) ->
                 case tpl_B1 of tpl_X6 { __DEFAULT ->
                 case tpl_B2 of tpl_X8 { __DEFAULT ->
                 case tpl_B3 of tpl_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ a_a9kP tpl_X6 tpl_X8 tpl_Xa
                 }
                 }
                 }}]
Engine.Core.Vec.$WVec3 =
  \ (@ a_a9kP)
    (tpl_B1 [Occ=Once] :: a_a9kP)
    (tpl_B2 [Occ=Once] :: a_a9kP)
    (tpl_B3 [Occ=Once] :: a_a9kP) ->
    case tpl_B1 of tpl_X6 { __DEFAULT ->
    case tpl_B2 of tpl_X8 { __DEFAULT ->
    case tpl_B3 of tpl_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9kP tpl_X6 tpl_X8 tpl_Xa
    }
    }
    }

Engine.Core.Vec.$WVec2 [InlPrag=INLINE]
  :: forall a_a9kO. a_a9kO -> a_a9kO -> Engine.Core.Vec.Vec2 a_a9kO
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType SSm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a9kO)
                 (tpl_B1 [Occ=Once] :: a_a9kO)
                 (tpl_B2 [Occ=Once] :: a_a9kO) ->
                 case tpl_B1 of tpl_X5 { __DEFAULT ->
                 case tpl_B2 of tpl_X7 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ a_a9kO tpl_X5 tpl_X7
                 }
                 }}]
Engine.Core.Vec.$WVec2 =
  \ (@ a_a9kO)
    (tpl_B1 [Occ=Once] :: a_a9kO)
    (tpl_B2 [Occ=Once] :: a_a9kO) ->
    case tpl_B1 of tpl_X5 { __DEFAULT ->
    case tpl_B2 of tpl_X7 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9kO tpl_X5 tpl_X7
    }
    }

Engine.Core.Vec.toArray2 [InlPrag=INLINE (sat-args=1)]
  :: forall a_a9kQ. Engine.Core.Vec.Vec2 a_a9kQ -> [a_a9kQ]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_s)
                 (ds_d9zi [Occ=Once!] :: Engine.Core.Vec.Vec2 a_s) ->
                 case ds_d9zi
                 of _ { Engine.Core.Vec.Vec2 x_a9kV [Occ=Once] y_a9kW [Occ=Once] ->
                 GHC.Base.build
                   @ a_s
                   (\ (@ a1_d9zf)
                      (c_d9zg :: a_s -> a1_d9zf -> a1_d9zf)
                      (n_d9zh [Occ=Once] :: a1_d9zf) ->
                      c_d9zg x_a9kV (c_d9zg y_a9kW n_d9zh))
                 }}]
Engine.Core.Vec.toArray2 =
  \ (@ a_s) (eta_B1 :: Engine.Core.Vec.Vec2 a_s) ->
    case eta_B1 of _ { Engine.Core.Vec.Vec2 x_a9kV y_a9kW ->
    GHC.Types.:
      @ a_s x_a9kV (GHC.Types.: @ a_s y_a9kW (GHC.Types.[] @ a_s))
    }

Engine.Core.Vec.toArray3 [InlPrag=INLINE (sat-args=1)]
  :: forall a_a9kR. Engine.Core.Vec.Vec3 a_a9kR -> [a_a9kR]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SSS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_v)
                 (ds_d9zo [Occ=Once!] :: Engine.Core.Vec.Vec3 a_v) ->
                 case ds_d9zo
                 of _
                 { Engine.Core.Vec.Vec3 x_a9kS [Occ=Once]
                                        y_a9kT [Occ=Once]
                                        z_a9kU [Occ=Once] ->
                 GHC.Base.build
                   @ a_v
                   (\ (@ a1_d9zl)
                      (c_d9zm :: a_v -> a1_d9zl -> a1_d9zl)
                      (n_d9zn [Occ=Once] :: a1_d9zl) ->
                      c_d9zm x_a9kS (c_d9zm y_a9kT (c_d9zm z_a9kU n_d9zn)))
                 }}]
Engine.Core.Vec.toArray3 =
  \ (@ a_v) (eta_B1 :: Engine.Core.Vec.Vec3 a_v) ->
    case eta_B1 of _ { Engine.Core.Vec.Vec3 x_a9kS y_a9kT z_a9kU ->
    GHC.Types.:
      @ a_v
      x_a9kS
      (GHC.Types.:
         @ a_v y_a9kT (GHC.Types.: @ a_v z_a9kU (GHC.Types.[] @ a_v)))
    }

Engine.Core.Vec.$fFunctorVec3_$cfmap [InlPrag=INLINE[0]]
  :: forall a_a9xz b_a9xA.
     (a_a9xz -> b_a9xA)
     -> Engine.Core.Vec.Vec3 a_a9xz -> Engine.Core.Vec.Vec3 b_a9xA
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType C(S)U(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9xz)
                 (@ b_a9xA)
                 (w_s9Lb :: a_a9xz -> b_a9xA)
                 (w1_s9Lc [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9xz) ->
                 case w1_s9Lc
                 of _
                 { Engine.Core.Vec.Vec3 ww_s9Le [Occ=Once]
                                        ww1_s9Lf [Occ=Once]
                                        ww2_s9Lg [Occ=Once] ->
                 case w_s9Lb ww_s9Le of tpl_X6 { __DEFAULT ->
                 case w_s9Lb ww1_s9Lf of tpl1_X8 { __DEFAULT ->
                 case w_s9Lb ww2_s9Lg of tpl2_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ b_a9xA tpl_X6 tpl1_X8 tpl2_Xa
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fFunctorVec3_$cfmap =
  \ (@ a_a9xz)
    (@ b_a9xA)
    (w_s9Lb :: a_a9xz -> b_a9xA)
    (w1_s9Lc :: Engine.Core.Vec.Vec3 a_a9xz) ->
    case w1_s9Lc
    of _ { Engine.Core.Vec.Vec3 ww_s9Le ww1_s9Lf ww2_s9Lg ->
    case w_s9Lb ww_s9Le of tpl_X6 { __DEFAULT ->
    case w_s9Lb ww1_s9Lf of tpl1_X8 { __DEFAULT ->
    case w_s9Lb ww2_s9Lg of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ b_a9xA tpl_X6 tpl1_X8 tpl2_Xa
    }
    }
    }
    }

Engine.Core.Vec.$fFunctorVec3_$c<$
  :: forall a_a9xS b_a9xT.
     a_a9xS
     -> Engine.Core.Vec.Vec3 b_a9xT -> Engine.Core.Vec.Vec3 a_a9xS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType SU(UUU)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9Ah)
                 (@ b_a9Ai)
                 (x_a9Ak [Occ=Once] :: a_a9Ah)
                 (eta_B1 [Occ=Once!] :: Engine.Core.Vec.Vec3 b_a9Ai) ->
                 case eta_B1 of _ { Engine.Core.Vec.Vec3 _ _ _ ->
                 case x_a9Ak of tpl_X6 { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ a_a9Ah tpl_X6 tpl_X6 tpl_X6
                 }
                 }}]
Engine.Core.Vec.$fFunctorVec3_$c<$ =
  \ (@ a_a9Ah)
    (@ b_a9Ai)
    (x_a9Ak :: a_a9Ah)
    (eta_B1 :: Engine.Core.Vec.Vec3 b_a9Ai) ->
    case eta_B1 of _ { Engine.Core.Vec.Vec3 x1_a9lE y_a9lF z_a9lG ->
    case x_a9Ak of tpl_X6 { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9Ah tpl_X6 tpl_X6 tpl_X6
    }
    }

Engine.Core.Vec.$fFunctorVec3 [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Base.Functor Engine.Core.Vec.Vec3
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=DFun(arity=0) GHC.Base.D:Functor [{Engine.Core.Vec.$fFunctorVec3_$cfmap},
                                       {Engine.Core.Vec.$fFunctorVec3_$c<$}]]
Engine.Core.Vec.$fFunctorVec3 =
  GHC.Base.D:Functor
    @ Engine.Core.Vec.Vec3
    Engine.Core.Vec.$fFunctorVec3_$cfmap
    Engine.Core.Vec.$fFunctorVec3_$c<$

Engine.Core.Vec.$fNumVec3_$cfromInteger [InlPrag=INLINE[0]]
  :: forall a_a9lg.
     GHC.Num.Num a_a9lg =>
     GHC.Integer.Type.Integer -> Engine.Core.Vec.Vec3 a_a9lg
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(AAAAAAS)Lm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9lg)
                 (w_s9Lm [Occ=Once!] :: GHC.Num.Num a_a9lg)
                 (w1_s9Lw :: GHC.Integer.Type.Integer) ->
                 case w_s9Lm of _ { GHC.Num.D:Num _ _ _ _ _ _ ww6_s9Lu ->
                 case ww6_s9Lu w1_s9Lw of tpl_X6 { __DEFAULT ->
                 case ww6_s9Lu w1_s9Lw of tpl1_X8 { __DEFAULT ->
                 case ww6_s9Lu w1_s9Lw of tpl2_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec3_$cfromInteger =
  \ (@ a_a9lg)
    (w_s9Lm :: GHC.Num.Num a_a9lg)
    (w1_s9Lw :: GHC.Integer.Type.Integer) ->
    case w_s9Lm
    of _
    { GHC.Num.D:Num ww_s9Lo
                    ww1_s9Lp
                    ww2_s9Lq
                    ww3_s9Lr
                    ww4_s9Ls
                    ww5_s9Lt
                    ww6_s9Lu ->
    case ww6_s9Lu w1_s9Lw of tpl_X6 { __DEFAULT ->
    case ww6_s9Lu w1_s9Lw of tpl1_X8 { __DEFAULT ->
    case ww6_s9Lu w1_s9Lw of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec3_$csignum
  :: forall a_a9lg.
     GHC.Num.Num a_a9lg =>
     Engine.Core.Vec.Vec3 a_a9lg -> Engine.Core.Vec.Vec3 a_a9lg
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(AAAAASA)U(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9lg)
                 ($dNum_a9xY [Occ=Once] :: GHC.Num.Num a_a9lg)
                 (eta_B1 [Occ=Once] :: Engine.Core.Vec.Vec3 a_a9lg) ->
                 Engine.Core.Vec.$fFunctorVec3_$cfmap
                   @ a_a9lg @ a_a9lg (GHC.Num.signum @ a_a9lg $dNum_a9xY) eta_B1}]
Engine.Core.Vec.$fNumVec3_$csignum =
  \ (@ a_a9lg)
    ($dNum_a9xY :: GHC.Num.Num a_a9lg)
    (eta_B1 :: Engine.Core.Vec.Vec3 a_a9lg) ->
    case eta_B1
    of _ { Engine.Core.Vec.Vec3 ww_s9Le ww1_s9Lf ww2_s9Lg ->
    let {
      w1_s9Lb :: a_a9lg -> a_a9lg
      [LclId]
      w1_s9Lb = GHC.Num.signum @ a_a9lg $dNum_a9xY } in
    case w1_s9Lb ww_s9Le of tpl_X6 { __DEFAULT ->
    case w1_s9Lb ww1_s9Lf of tpl1_X8 { __DEFAULT ->
    case w1_s9Lb ww2_s9Lg of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec3_$cabs [InlPrag=INLINE[0]]
  :: forall a_a9lg.
     GHC.Num.Num a_a9lg =>
     Engine.Core.Vec.Vec3 a_a9lg -> Engine.Core.Vec.Vec3 a_a9lg
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(AAAASAA)U(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9lg)
                 (w_s9LB [Occ=Once!] :: GHC.Num.Num a_a9lg)
                 (w1_s9LL [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9lg) ->
                 case w_s9LB of _ { GHC.Num.D:Num _ _ _ _ ww4_s9LH _ _ ->
                 case w1_s9LL
                 of _
                 { Engine.Core.Vec.Vec3 ww7_s9LN [Occ=Once]
                                        ww8_s9LO [Occ=Once]
                                        ww9_s9LP [Occ=Once] ->
                 case ww4_s9LH ww7_s9LN of tpl_X6 { __DEFAULT ->
                 case ww4_s9LH ww8_s9LO of tpl1_X8 { __DEFAULT ->
                 case ww4_s9LH ww9_s9LP of tpl2_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
                 }
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec3_$cabs =
  \ (@ a_a9lg)
    (w_s9LB :: GHC.Num.Num a_a9lg)
    (w1_s9LL :: Engine.Core.Vec.Vec3 a_a9lg) ->
    case w_s9LB
    of _
    { GHC.Num.D:Num ww_s9LD
                    ww1_s9LE
                    ww2_s9LF
                    ww3_s9LG
                    ww4_s9LH
                    ww5_s9LI
                    ww6_s9LJ ->
    case w1_s9LL
    of _ { Engine.Core.Vec.Vec3 ww7_s9LN ww8_s9LO ww9_s9LP ->
    case ww4_s9LH ww7_s9LN of tpl_X6 { __DEFAULT ->
    case ww4_s9LH ww8_s9LO of tpl1_X8 { __DEFAULT ->
    case ww4_s9LH ww9_s9LP of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
    }
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec3_$c- [InlPrag=INLINE[0]]
  :: forall a_a9lg.
     GHC.Num.Num a_a9lg =>
     Engine.Core.Vec.Vec3 a_a9lg
     -> Engine.Core.Vec.Vec3 a_a9lg -> Engine.Core.Vec.Vec3 a_a9lg
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(AASAAAA)U(SSS)U(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9lg)
                 (w_s9LW [Occ=Once!] :: GHC.Num.Num a_a9lg)
                 (w1_s9M6 [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9lg)
                 (w2_s9Mc [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9lg) ->
                 case w_s9LW of _ { GHC.Num.D:Num _ _ ww2_s9M0 _ _ _ _ ->
                 case w1_s9M6
                 of _
                 { Engine.Core.Vec.Vec3 ww7_s9M8 [Occ=Once]
                                        ww8_s9M9 [Occ=Once]
                                        ww9_s9Ma [Occ=Once] ->
                 case w2_s9Mc
                 of _
                 { Engine.Core.Vec.Vec3 ww10_s9Me [Occ=Once]
                                        ww11_s9Mf [Occ=Once]
                                        ww12_s9Mg [Occ=Once] ->
                 case ww2_s9M0 ww7_s9M8 ww10_s9Me of tpl_X6 { __DEFAULT ->
                 case ww2_s9M0 ww8_s9M9 ww11_s9Mf of tpl1_X8 { __DEFAULT ->
                 case ww2_s9M0 ww9_s9Ma ww12_s9Mg of tpl2_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
                 }
                 }
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec3_$c- =
  \ (@ a_a9lg)
    (w_s9LW :: GHC.Num.Num a_a9lg)
    (w1_s9M6 :: Engine.Core.Vec.Vec3 a_a9lg)
    (w2_s9Mc :: Engine.Core.Vec.Vec3 a_a9lg) ->
    case w_s9LW
    of _
    { GHC.Num.D:Num ww_s9LY
                    ww1_s9LZ
                    ww2_s9M0
                    ww3_s9M1
                    ww4_s9M2
                    ww5_s9M3
                    ww6_s9M4 ->
    case w1_s9M6
    of _ { Engine.Core.Vec.Vec3 ww7_s9M8 ww8_s9M9 ww9_s9Ma ->
    case w2_s9Mc
    of _ { Engine.Core.Vec.Vec3 ww10_s9Me ww11_s9Mf ww12_s9Mg ->
    case ww2_s9M0 ww7_s9M8 ww10_s9Me of tpl_X6 { __DEFAULT ->
    case ww2_s9M0 ww8_s9M9 ww11_s9Mf of tpl1_X8 { __DEFAULT ->
    case ww2_s9M0 ww9_s9Ma ww12_s9Mg of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
    }
    }
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec3_$c* [InlPrag=INLINE[0]]
  :: forall a_a9lg.
     GHC.Num.Num a_a9lg =>
     Engine.Core.Vec.Vec3 a_a9lg
     -> Engine.Core.Vec.Vec3 a_a9lg -> Engine.Core.Vec.Vec3 a_a9lg
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(ASAAAAA)U(SSS)U(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9lg)
                 (w_s9Mn [Occ=Once!] :: GHC.Num.Num a_a9lg)
                 (w1_s9Mx [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9lg)
                 (w2_s9MD [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9lg) ->
                 case w_s9Mn of _ { GHC.Num.D:Num _ ww1_s9Mq _ _ _ _ _ ->
                 case w1_s9Mx
                 of _
                 { Engine.Core.Vec.Vec3 ww7_s9Mz [Occ=Once]
                                        ww8_s9MA [Occ=Once]
                                        ww9_s9MB [Occ=Once] ->
                 case w2_s9MD
                 of _
                 { Engine.Core.Vec.Vec3 ww10_s9MF [Occ=Once]
                                        ww11_s9MG [Occ=Once]
                                        ww12_s9MH [Occ=Once] ->
                 case ww1_s9Mq ww7_s9Mz ww10_s9MF of tpl_X6 { __DEFAULT ->
                 case ww1_s9Mq ww8_s9MA ww11_s9MG of tpl1_X8 { __DEFAULT ->
                 case ww1_s9Mq ww9_s9MB ww12_s9MH of tpl2_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
                 }
                 }
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec3_$c* =
  \ (@ a_a9lg)
    (w_s9Mn :: GHC.Num.Num a_a9lg)
    (w1_s9Mx :: Engine.Core.Vec.Vec3 a_a9lg)
    (w2_s9MD :: Engine.Core.Vec.Vec3 a_a9lg) ->
    case w_s9Mn
    of _
    { GHC.Num.D:Num ww_s9Mp
                    ww1_s9Mq
                    ww2_s9Mr
                    ww3_s9Ms
                    ww4_s9Mt
                    ww5_s9Mu
                    ww6_s9Mv ->
    case w1_s9Mx
    of _ { Engine.Core.Vec.Vec3 ww7_s9Mz ww8_s9MA ww9_s9MB ->
    case w2_s9MD
    of _ { Engine.Core.Vec.Vec3 ww10_s9MF ww11_s9MG ww12_s9MH ->
    case ww1_s9Mq ww7_s9Mz ww10_s9MF of tpl_X6 { __DEFAULT ->
    case ww1_s9Mq ww8_s9MA ww11_s9MG of tpl1_X8 { __DEFAULT ->
    case ww1_s9Mq ww9_s9MB ww12_s9MH of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
    }
    }
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec3_$c+ [InlPrag=INLINE[0]]
  :: forall a_a9lg.
     GHC.Num.Num a_a9lg =>
     Engine.Core.Vec.Vec3 a_a9lg
     -> Engine.Core.Vec.Vec3 a_a9lg -> Engine.Core.Vec.Vec3 a_a9lg
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(SAAAAAA)U(SSS)U(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9lg)
                 (w_s9MO [Occ=Once!] :: GHC.Num.Num a_a9lg)
                 (w1_s9MY [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9lg)
                 (w2_s9N4 [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9lg) ->
                 case w_s9MO of _ { GHC.Num.D:Num ww_s9MQ _ _ _ _ _ _ ->
                 case w1_s9MY
                 of _
                 { Engine.Core.Vec.Vec3 ww7_s9N0 [Occ=Once]
                                        ww8_s9N1 [Occ=Once]
                                        ww9_s9N2 [Occ=Once] ->
                 case w2_s9N4
                 of _
                 { Engine.Core.Vec.Vec3 ww10_s9N6 [Occ=Once]
                                        ww11_s9N7 [Occ=Once]
                                        ww12_s9N8 [Occ=Once] ->
                 case ww_s9MQ ww7_s9N0 ww10_s9N6 of tpl_X6 { __DEFAULT ->
                 case ww_s9MQ ww8_s9N1 ww11_s9N7 of tpl1_X8 { __DEFAULT ->
                 case ww_s9MQ ww9_s9N2 ww12_s9N8 of tpl2_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
                 }
                 }
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec3_$c+ =
  \ (@ a_a9lg)
    (w_s9MO :: GHC.Num.Num a_a9lg)
    (w1_s9MY :: Engine.Core.Vec.Vec3 a_a9lg)
    (w2_s9N4 :: Engine.Core.Vec.Vec3 a_a9lg) ->
    case w_s9MO
    of _
    { GHC.Num.D:Num ww_s9MQ
                    ww1_s9MR
                    ww2_s9MS
                    ww3_s9MT
                    ww4_s9MU
                    ww5_s9MV
                    ww6_s9MW ->
    case w1_s9MY
    of _ { Engine.Core.Vec.Vec3 ww7_s9N0 ww8_s9N1 ww9_s9N2 ->
    case w2_s9N4
    of _ { Engine.Core.Vec.Vec3 ww10_s9N6 ww11_s9N7 ww12_s9N8 ->
    case ww_s9MQ ww7_s9N0 ww10_s9N6 of tpl_X6 { __DEFAULT ->
    case ww_s9MQ ww8_s9N1 ww11_s9N7 of tpl1_X8 { __DEFAULT ->
    case ww_s9MQ ww9_s9N2 ww12_s9N8 of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9lg tpl_X6 tpl1_X8 tpl2_Xa
    }
    }
    }
    }
    }
    }

lvl_ra9i :: GHC.Integer.Type.Integer
[GblId, Str=DmdType]
lvl_ra9i = __integer 0

Engine.Core.Vec.$fNumVec3_$cnegate [InlPrag=INLINE (sat-args=1)]
  :: forall a_a9lg.
     GHC.Num.Num a_a9lg =>
     Engine.Core.Vec.Vec3 a_a9lg -> Engine.Core.Vec.Vec3 a_a9lg
[GblId,
 Arity=2,
 Str=DmdType U(AASAAAS)U(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a9lg)
                 ($dNum_a9xY :: GHC.Num.Num a_a9lg)
                 (x_a9AA [Occ=Once] :: Engine.Core.Vec.Vec3 a_a9lg) ->
                 Engine.Core.Vec.$fNumVec3_$c-
                   @ a_a9lg
                   $dNum_a9xY
                   (Engine.Core.Vec.$fNumVec3_$cfromInteger
                      @ a_a9lg $dNum_a9xY (__integer 0))
                   x_a9AA}]
Engine.Core.Vec.$fNumVec3_$cnegate =
  \ (@ a_a9lg)
    ($dNum_a9xY :: GHC.Num.Num a_a9lg)
    (eta_B1 :: Engine.Core.Vec.Vec3 a_a9lg) ->
    case $dNum_a9xY
    of _
    { GHC.Num.D:Num ww_s9LY
                    ww1_s9LZ
                    ww2_s9M0
                    ww3_s9M1
                    ww4_s9M2
                    ww5_s9M3
                    ww6_s9M4 ->
    case ww6_s9M4 lvl_ra9i of tpl_X6 { __DEFAULT ->
    case eta_B1
    of _ { Engine.Core.Vec.Vec3 ww7_s9Me ww8_s9Mf ww9_s9Mg ->
    case ww2_s9M0 tpl_X6 ww7_s9Me of tpl1_X1Q { __DEFAULT ->
    case ww2_s9M0 tpl_X6 ww8_s9Mf of tpl2_X1U { __DEFAULT ->
    case ww2_s9M0 tpl_X6 ww9_s9Mg of tpl3_X1Y { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ a_a9lg tpl1_X1Q tpl2_X1U tpl3_X1Y
    }
    }
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec3 [InlPrag=[ALWAYS] CONLIKE]
  :: forall a_a9lg.
     GHC.Num.Num a_a9lg =>
     GHC.Num.Num (Engine.Core.Vec.Vec3 a_a9lg)
[GblId[DFunId],
 Arity=1,
 Str=DmdType Lm,
 Unf=DFun(arity=2) GHC.Num.D:Num [{Engine.Core.Vec.$fNumVec3_$c+},
                                  {Engine.Core.Vec.$fNumVec3_$c*}, {Engine.Core.Vec.$fNumVec3_$c-},
                                  {Engine.Core.Vec.$fNumVec3_$cnegate},
                                  {Engine.Core.Vec.$fNumVec3_$cabs},
                                  {Engine.Core.Vec.$fNumVec3_$csignum},
                                  {Engine.Core.Vec.$fNumVec3_$cfromInteger}]]
Engine.Core.Vec.$fNumVec3 =
  \ (@ a_a9lg) ($dNum_a9xY :: GHC.Num.Num a_a9lg) ->
    GHC.Num.D:Num
      @ (Engine.Core.Vec.Vec3 a_a9lg)
      (Engine.Core.Vec.$fNumVec3_$c+ @ a_a9lg $dNum_a9xY)
      (Engine.Core.Vec.$fNumVec3_$c* @ a_a9lg $dNum_a9xY)
      (Engine.Core.Vec.$fNumVec3_$c- @ a_a9lg $dNum_a9xY)
      (Engine.Core.Vec.$fNumVec3_$cnegate @ a_a9lg $dNum_a9xY)
      (Engine.Core.Vec.$fNumVec3_$cabs @ a_a9lg $dNum_a9xY)
      (Engine.Core.Vec.$fNumVec3_$csignum @ a_a9lg $dNum_a9xY)
      (Engine.Core.Vec.$fNumVec3_$cfromInteger @ a_a9lg $dNum_a9xY)

Engine.Core.Vec.$fFunctorVec2_$cfmap
  :: forall a_a9xz b_a9xA.
     (a_a9xz -> b_a9xA)
     -> Engine.Core.Vec.Vec2 a_a9xz -> Engine.Core.Vec.Vec2 b_a9xA
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType C(S)U(SS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_t1l)
                 (@ b_t1m)
                 (f_a9ld :: a_t1l -> b_t1m)
                 (ds_d9zQ [Occ=Once!] :: Engine.Core.Vec.Vec2 a_t1l) ->
                 case ds_d9zQ
                 of _ { Engine.Core.Vec.Vec2 x_a9le [Occ=Once] y_a9lf [Occ=Once] ->
                 case f_a9ld x_a9le of tpl_X5 { __DEFAULT ->
                 case f_a9ld y_a9lf of tpl1_X7 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ b_t1m tpl_X5 tpl1_X7
                 }
                 }
                 }}]
Engine.Core.Vec.$fFunctorVec2_$cfmap =
  \ (@ a_t1l)
    (@ b_t1m)
    (f_a9ld :: a_t1l -> b_t1m)
    (ds_d9zQ :: Engine.Core.Vec.Vec2 a_t1l) ->
    case ds_d9zQ of _ { Engine.Core.Vec.Vec2 x_a9le y_a9lf ->
    case f_a9ld x_a9le of tpl_X5 { __DEFAULT ->
    case f_a9ld y_a9lf of tpl1_X7 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ b_t1m tpl_X5 tpl1_X7
    }
    }
    }

Engine.Core.Vec.$fFunctorVec2_$c<$
  :: forall a_a9xS b_a9xT.
     a_a9xS
     -> Engine.Core.Vec.Vec2 b_a9xT -> Engine.Core.Vec.Vec2 a_a9xS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType SU(UU)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9Ah)
                 (@ b_a9Ai)
                 (x_a9Ak [Occ=Once] :: a_a9Ah)
                 (eta_B1 [Occ=Once!] :: Engine.Core.Vec.Vec2 b_a9Ai) ->
                 case eta_B1 of _ { Engine.Core.Vec.Vec2 _ _ ->
                 case x_a9Ak of tpl_X5 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ a_a9Ah tpl_X5 tpl_X5
                 }
                 }}]
Engine.Core.Vec.$fFunctorVec2_$c<$ =
  \ (@ a_a9Ah)
    (@ b_a9Ai)
    (x_a9Ak :: a_a9Ah)
    (eta_B1 :: Engine.Core.Vec.Vec2 b_a9Ai) ->
    case eta_B1 of _ { Engine.Core.Vec.Vec2 x1_a9le y_a9lf ->
    case x_a9Ak of tpl_X5 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9Ah tpl_X5 tpl_X5
    }
    }

Engine.Core.Vec.$fFunctorVec2 [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Base.Functor Engine.Core.Vec.Vec2
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=DFun(arity=0) GHC.Base.D:Functor [{Engine.Core.Vec.$fFunctorVec2_$cfmap},
                                       {Engine.Core.Vec.$fFunctorVec2_$c<$}]]
Engine.Core.Vec.$fFunctorVec2 =
  GHC.Base.D:Functor
    @ Engine.Core.Vec.Vec2
    Engine.Core.Vec.$fFunctorVec2_$cfmap
    Engine.Core.Vec.$fFunctorVec2_$c<$

Engine.Core.Vec.$fNumVec2_$cfromInteger
  :: forall a_a9kX.
     GHC.Num.Num a_a9kX =>
     GHC.Integer.Type.Integer -> Engine.Core.Vec.Vec2 a_a9kX
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(AAAAAAS)Lm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kX)
                 ($dNum_a9x3 :: GHC.Num.Num a_a9kX)
                 (i_a9lc :: GHC.Integer.Type.Integer) ->
                 case GHC.Num.fromInteger @ a_a9kX $dNum_a9x3 i_a9lc
                 of tpl_X5 { __DEFAULT ->
                 case GHC.Num.fromInteger @ a_a9kX $dNum_a9x3 i_a9lc
                 of tpl1_X7 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
                 }
                 }}]
Engine.Core.Vec.$fNumVec2_$cfromInteger =
  \ (@ a_a9kX)
    ($dNum_a9x3 :: GHC.Num.Num a_a9kX)
    (i_a9lc :: GHC.Integer.Type.Integer) ->
    case GHC.Num.fromInteger @ a_a9kX $dNum_a9x3 i_a9lc
    of tpl_X5 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl_X5
    }

Engine.Core.Vec.$fNumVec2_$csignum [InlPrag=INLINE[0]]
  :: forall a_a9kX.
     GHC.Num.Num a_a9kX =>
     Engine.Core.Vec.Vec2 a_a9kX -> Engine.Core.Vec.Vec2 a_a9kX
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(AAAAASA)U(SS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kX)
                 (w_s9Ne [Occ=Once!] :: GHC.Num.Num a_a9kX)
                 (w1_s9No [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kX) ->
                 case w_s9Ne of _ { GHC.Num.D:Num _ _ _ _ _ ww5_s9Nl _ ->
                 case w1_s9No
                 of _
                 { Engine.Core.Vec.Vec2 ww7_s9Nq [Occ=Once] ww8_s9Nr [Occ=Once] ->
                 case ww5_s9Nl ww7_s9Nq of tpl_X5 { __DEFAULT ->
                 case ww5_s9Nl ww8_s9Nr of tpl1_X7 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec2_$csignum =
  \ (@ a_a9kX)
    (w_s9Ne :: GHC.Num.Num a_a9kX)
    (w1_s9No :: Engine.Core.Vec.Vec2 a_a9kX) ->
    case w_s9Ne
    of _
    { GHC.Num.D:Num ww_s9Ng
                    ww1_s9Nh
                    ww2_s9Ni
                    ww3_s9Nj
                    ww4_s9Nk
                    ww5_s9Nl
                    ww6_s9Nm ->
    case w1_s9No of _ { Engine.Core.Vec.Vec2 ww7_s9Nq ww8_s9Nr ->
    case ww5_s9Nl ww7_s9Nq of tpl_X5 { __DEFAULT ->
    case ww5_s9Nl ww8_s9Nr of tpl1_X7 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec2_$cabs [InlPrag=INLINE[0]]
  :: forall a_a9kX.
     GHC.Num.Num a_a9kX =>
     Engine.Core.Vec.Vec2 a_a9kX -> Engine.Core.Vec.Vec2 a_a9kX
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(AAAASAA)U(SS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kX)
                 (w_s9Nx [Occ=Once!] :: GHC.Num.Num a_a9kX)
                 (w1_s9NH [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kX) ->
                 case w_s9Nx of _ { GHC.Num.D:Num _ _ _ _ ww4_s9ND _ _ ->
                 case w1_s9NH
                 of _
                 { Engine.Core.Vec.Vec2 ww7_s9NJ [Occ=Once] ww8_s9NK [Occ=Once] ->
                 case ww4_s9ND ww7_s9NJ of tpl_X5 { __DEFAULT ->
                 case ww4_s9ND ww8_s9NK of tpl1_X7 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec2_$cabs =
  \ (@ a_a9kX)
    (w_s9Nx :: GHC.Num.Num a_a9kX)
    (w1_s9NH :: Engine.Core.Vec.Vec2 a_a9kX) ->
    case w_s9Nx
    of _
    { GHC.Num.D:Num ww_s9Nz
                    ww1_s9NA
                    ww2_s9NB
                    ww3_s9NC
                    ww4_s9ND
                    ww5_s9NE
                    ww6_s9NF ->
    case w1_s9NH of _ { Engine.Core.Vec.Vec2 ww7_s9NJ ww8_s9NK ->
    case ww4_s9ND ww7_s9NJ of tpl_X5 { __DEFAULT ->
    case ww4_s9ND ww8_s9NK of tpl1_X7 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec2_$c- [InlPrag=INLINE[0]]
  :: forall a_a9kX.
     GHC.Num.Num a_a9kX =>
     Engine.Core.Vec.Vec2 a_a9kX
     -> Engine.Core.Vec.Vec2 a_a9kX -> Engine.Core.Vec.Vec2 a_a9kX
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(AASAAAA)U(SS)U(SS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kX)
                 (w_s9NR [Occ=Once!] :: GHC.Num.Num a_a9kX)
                 (w1_s9O1 [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kX)
                 (w2_s9O6 [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kX) ->
                 case w_s9NR of _ { GHC.Num.D:Num _ _ ww2_s9NV _ _ _ _ ->
                 case w1_s9O1
                 of _
                 { Engine.Core.Vec.Vec2 ww7_s9O3 [Occ=Once] ww8_s9O4 [Occ=Once] ->
                 case w2_s9O6
                 of _
                 { Engine.Core.Vec.Vec2 ww9_s9O8 [Occ=Once] ww10_s9O9 [Occ=Once] ->
                 case ww2_s9NV ww7_s9O3 ww9_s9O8 of tpl_X5 { __DEFAULT ->
                 case ww2_s9NV ww8_s9O4 ww10_s9O9 of tpl1_X7 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
                 }
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec2_$c- =
  \ (@ a_a9kX)
    (w_s9NR :: GHC.Num.Num a_a9kX)
    (w1_s9O1 :: Engine.Core.Vec.Vec2 a_a9kX)
    (w2_s9O6 :: Engine.Core.Vec.Vec2 a_a9kX) ->
    case w_s9NR
    of _
    { GHC.Num.D:Num ww_s9NT
                    ww1_s9NU
                    ww2_s9NV
                    ww3_s9NW
                    ww4_s9NX
                    ww5_s9NY
                    ww6_s9NZ ->
    case w1_s9O1 of _ { Engine.Core.Vec.Vec2 ww7_s9O3 ww8_s9O4 ->
    case w2_s9O6 of _ { Engine.Core.Vec.Vec2 ww9_s9O8 ww10_s9O9 ->
    case ww2_s9NV ww7_s9O3 ww9_s9O8 of tpl_X5 { __DEFAULT ->
    case ww2_s9NV ww8_s9O4 ww10_s9O9 of tpl1_X7 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
    }
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec2_$c* [InlPrag=INLINE[0]]
  :: forall a_a9kX.
     GHC.Num.Num a_a9kX =>
     Engine.Core.Vec.Vec2 a_a9kX
     -> Engine.Core.Vec.Vec2 a_a9kX -> Engine.Core.Vec.Vec2 a_a9kX
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(ASAAAAA)U(SS)U(SS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kX)
                 (w_s9Og [Occ=Once!] :: GHC.Num.Num a_a9kX)
                 (w1_s9Oq [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kX)
                 (w2_s9Ov [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kX) ->
                 case w_s9Og of _ { GHC.Num.D:Num _ ww1_s9Oj _ _ _ _ _ ->
                 case w1_s9Oq
                 of _
                 { Engine.Core.Vec.Vec2 ww7_s9Os [Occ=Once] ww8_s9Ot [Occ=Once] ->
                 case w2_s9Ov
                 of _
                 { Engine.Core.Vec.Vec2 ww9_s9Ox [Occ=Once] ww10_s9Oy [Occ=Once] ->
                 case ww1_s9Oj ww7_s9Os ww9_s9Ox of tpl_X5 { __DEFAULT ->
                 case ww1_s9Oj ww8_s9Ot ww10_s9Oy of tpl1_X7 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
                 }
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec2_$c* =
  \ (@ a_a9kX)
    (w_s9Og :: GHC.Num.Num a_a9kX)
    (w1_s9Oq :: Engine.Core.Vec.Vec2 a_a9kX)
    (w2_s9Ov :: Engine.Core.Vec.Vec2 a_a9kX) ->
    case w_s9Og
    of _
    { GHC.Num.D:Num ww_s9Oi
                    ww1_s9Oj
                    ww2_s9Ok
                    ww3_s9Ol
                    ww4_s9Om
                    ww5_s9On
                    ww6_s9Oo ->
    case w1_s9Oq of _ { Engine.Core.Vec.Vec2 ww7_s9Os ww8_s9Ot ->
    case w2_s9Ov of _ { Engine.Core.Vec.Vec2 ww9_s9Ox ww10_s9Oy ->
    case ww1_s9Oj ww7_s9Os ww9_s9Ox of tpl_X5 { __DEFAULT ->
    case ww1_s9Oj ww8_s9Ot ww10_s9Oy of tpl1_X7 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
    }
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec2_$c+ [InlPrag=INLINE[0]]
  :: forall a_a9kX.
     GHC.Num.Num a_a9kX =>
     Engine.Core.Vec.Vec2 a_a9kX
     -> Engine.Core.Vec.Vec2 a_a9kX -> Engine.Core.Vec.Vec2 a_a9kX
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(SAAAAAA)U(SS)U(SS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kX)
                 (w_s9OF [Occ=Once!] :: GHC.Num.Num a_a9kX)
                 (w1_s9OP [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kX)
                 (w2_s9OU [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kX) ->
                 case w_s9OF of _ { GHC.Num.D:Num ww_s9OH _ _ _ _ _ _ ->
                 case w1_s9OP
                 of _
                 { Engine.Core.Vec.Vec2 ww7_s9OR [Occ=Once] ww8_s9OS [Occ=Once] ->
                 case w2_s9OU
                 of _
                 { Engine.Core.Vec.Vec2 ww9_s9OW [Occ=Once] ww10_s9OX [Occ=Once] ->
                 case ww_s9OH ww7_s9OR ww9_s9OW of tpl_X5 { __DEFAULT ->
                 case ww_s9OH ww8_s9OS ww10_s9OX of tpl1_X7 { __DEFAULT ->
                 Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
                 }
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fNumVec2_$c+ =
  \ (@ a_a9kX)
    (w_s9OF :: GHC.Num.Num a_a9kX)
    (w1_s9OP :: Engine.Core.Vec.Vec2 a_a9kX)
    (w2_s9OU :: Engine.Core.Vec.Vec2 a_a9kX) ->
    case w_s9OF
    of _
    { GHC.Num.D:Num ww_s9OH
                    ww1_s9OI
                    ww2_s9OJ
                    ww3_s9OK
                    ww4_s9OL
                    ww5_s9OM
                    ww6_s9ON ->
    case w1_s9OP of _ { Engine.Core.Vec.Vec2 ww7_s9OR ww8_s9OS ->
    case w2_s9OU of _ { Engine.Core.Vec.Vec2 ww9_s9OW ww10_s9OX ->
    case ww_s9OH ww7_s9OR ww9_s9OW of tpl_X5 { __DEFAULT ->
    case ww_s9OH ww8_s9OS ww10_s9OX of tpl1_X7 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9kX tpl_X5 tpl1_X7
    }
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec2_$cnegate [InlPrag=INLINE (sat-args=1)]
  :: forall a_a9kX.
     GHC.Num.Num a_a9kX =>
     Engine.Core.Vec.Vec2 a_a9kX -> Engine.Core.Vec.Vec2 a_a9kX
[GblId,
 Arity=2,
 Str=DmdType U(AASAAAS)U(SS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_a9kX)
                 ($dNum_a9x3 :: GHC.Num.Num a_a9kX)
                 (x_a9AA [Occ=Once] :: Engine.Core.Vec.Vec2 a_a9kX) ->
                 Engine.Core.Vec.$fNumVec2_$c-
                   @ a_a9kX
                   $dNum_a9x3
                   (Engine.Core.Vec.$fNumVec2_$cfromInteger
                      @ a_a9kX $dNum_a9x3 (__integer 0))
                   x_a9AA}]
Engine.Core.Vec.$fNumVec2_$cnegate =
  \ (@ a_a9kX)
    ($dNum_a9x3 :: GHC.Num.Num a_a9kX)
    (eta_B1 :: Engine.Core.Vec.Vec2 a_a9kX) ->
    case $dNum_a9x3
    of _
    { GHC.Num.D:Num ww_s9NT
                    ww1_s9NU
                    ww2_s9NV
                    ww3_s9NW
                    ww4_s9NX
                    ww5_s9NY
                    ww6_s9NZ ->
    case ww6_s9NZ lvl_ra9i of tpl_X5 { __DEFAULT ->
    case eta_B1 of _ { Engine.Core.Vec.Vec2 ww7_s9O8 ww8_s9O9 ->
    case ww2_s9NV tpl_X5 ww7_s9O8 of tpl1_X22 { __DEFAULT ->
    case ww2_s9NV tpl_X5 ww8_s9O9 of tpl2_X26 { __DEFAULT ->
    Engine.Core.Vec.Vec2 @ a_a9kX tpl1_X22 tpl2_X26
    }
    }
    }
    }
    }

Engine.Core.Vec.$fNumVec2 [InlPrag=[ALWAYS] CONLIKE]
  :: forall a_a9kX.
     GHC.Num.Num a_a9kX =>
     GHC.Num.Num (Engine.Core.Vec.Vec2 a_a9kX)
[GblId[DFunId],
 Arity=1,
 Str=DmdType Lm,
 Unf=DFun(arity=2) GHC.Num.D:Num [{Engine.Core.Vec.$fNumVec2_$c+},
                                  {Engine.Core.Vec.$fNumVec2_$c*}, {Engine.Core.Vec.$fNumVec2_$c-},
                                  {Engine.Core.Vec.$fNumVec2_$cnegate},
                                  {Engine.Core.Vec.$fNumVec2_$cabs},
                                  {Engine.Core.Vec.$fNumVec2_$csignum},
                                  {Engine.Core.Vec.$fNumVec2_$cfromInteger}]]
Engine.Core.Vec.$fNumVec2 =
  \ (@ a_a9kX) ($dNum_a9x3 :: GHC.Num.Num a_a9kX) ->
    GHC.Num.D:Num
      @ (Engine.Core.Vec.Vec2 a_a9kX)
      (Engine.Core.Vec.$fNumVec2_$c+ @ a_a9kX $dNum_a9x3)
      (Engine.Core.Vec.$fNumVec2_$c* @ a_a9kX $dNum_a9x3)
      (Engine.Core.Vec.$fNumVec2_$c- @ a_a9kX $dNum_a9x3)
      (Engine.Core.Vec.$fNumVec2_$cnegate @ a_a9kX $dNum_a9x3)
      (Engine.Core.Vec.$fNumVec2_$cabs @ a_a9kX $dNum_a9x3)
      (Engine.Core.Vec.$fNumVec2_$csignum @ a_a9kX $dNum_a9x3)
      (Engine.Core.Vec.$fNumVec2_$cfromInteger @ a_a9kX $dNum_a9x3)

Engine.Core.Vec.$fEqVec3_$c== [InlPrag=INLINE[0]]
  :: forall a_a9kP.
     GHC.Classes.Eq a_a9kP =>
     Engine.Core.Vec.Vec3 a_a9kP
     -> Engine.Core.Vec.Vec3 a_a9kP -> GHC.Types.Bool
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(SA)U(SU(L*)U(L*))U(SU(L*)U(L*)),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kP)
                 (w_s9P4 [Occ=Once!] :: GHC.Classes.Eq a_a9kP)
                 (w1_s9P9 [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9kP)
                 (w2_s9Pf [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9kP) ->
                 case w_s9P4 of _ { GHC.Classes.D:Eq ww_s9P6 _ ->
                 case w1_s9P9
                 of _
                 { Engine.Core.Vec.Vec3 ww2_s9Pb [Occ=Once]
                                        ww3_s9Pc [Occ=Once]
                                        ww4_s9Pd [Occ=Once] ->
                 case w2_s9Pf
                 of _
                 { Engine.Core.Vec.Vec3 ww5_s9Ph [Occ=Once]
                                        ww6_s9Pi [Occ=Once]
                                        ww7_s9Pj [Occ=Once] ->
                 case ww_s9P6 ww2_s9Pb ww5_s9Ph of _ {
                   GHC.Types.False -> GHC.Types.False;
                   GHC.Types.True ->
                     case ww_s9P6 ww3_s9Pc ww6_s9Pi of _ {
                       GHC.Types.False -> GHC.Types.False;
                       GHC.Types.True -> ww_s9P6 ww4_s9Pd ww7_s9Pj
                     }
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fEqVec3_$c== =
  \ (@ a_a9kP)
    (w_s9P4 :: GHC.Classes.Eq a_a9kP)
    (w1_s9P9 :: Engine.Core.Vec.Vec3 a_a9kP)
    (w2_s9Pf :: Engine.Core.Vec.Vec3 a_a9kP) ->
    case w_s9P4 of _ { GHC.Classes.D:Eq ww_s9P6 ww1_s9P7 ->
    case w1_s9P9
    of _ { Engine.Core.Vec.Vec3 ww2_s9Pb ww3_s9Pc ww4_s9Pd ->
    case w2_s9Pf
    of _ { Engine.Core.Vec.Vec3 ww5_s9Ph ww6_s9Pi ww7_s9Pj ->
    case ww_s9P6 ww2_s9Pb ww5_s9Ph of _ {
      GHC.Types.False -> GHC.Types.False;
      GHC.Types.True ->
        case ww_s9P6 ww3_s9Pc ww6_s9Pi of _ {
          GHC.Types.False -> GHC.Types.False;
          GHC.Types.True -> ww_s9P6 ww4_s9Pd ww7_s9Pj
        }
    }
    }
    }
    }

Engine.Core.Vec.$fEqVec3_$c/=
  :: forall a_a9kP.
     GHC.Classes.Eq a_a9kP =>
     Engine.Core.Vec.Vec3 a_a9kP
     -> Engine.Core.Vec.Vec3 a_a9kP -> GHC.Types.Bool
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(SA)U(SU(L*)U(L*))U(SU(L*)U(L*)),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kP)
                 ($dEq_a9wP [Occ=Once] :: GHC.Classes.Eq a_a9kP)
                 (a_a9vV [Occ=Once] :: Engine.Core.Vec.Vec3 a_a9kP)
                 (b_a9vW [Occ=Once] :: Engine.Core.Vec.Vec3 a_a9kP) ->
                 case Engine.Core.Vec.$fEqVec3_$c== @ a_a9kP $dEq_a9wP a_a9vV b_a9vW
                 of _ {
                   GHC.Types.False -> GHC.Types.True;
                   GHC.Types.True -> GHC.Types.False
                 }}]
Engine.Core.Vec.$fEqVec3_$c/= =
  \ (@ a_a9kP)
    ($dEq_a9wP :: GHC.Classes.Eq a_a9kP)
    (a_a9vV :: Engine.Core.Vec.Vec3 a_a9kP)
    (b_a9vW :: Engine.Core.Vec.Vec3 a_a9kP) ->
    case $dEq_a9wP of _ { GHC.Classes.D:Eq ww_s9P6 ww1_s9P7 ->
    case a_a9vV
    of _ { Engine.Core.Vec.Vec3 ww2_s9Pb ww3_s9Pc ww4_s9Pd ->
    case b_a9vW
    of _ { Engine.Core.Vec.Vec3 ww5_s9Ph ww6_s9Pi ww7_s9Pj ->
    case ww_s9P6 ww2_s9Pb ww5_s9Ph of _ {
      GHC.Types.False -> GHC.Types.True;
      GHC.Types.True ->
        case ww_s9P6 ww3_s9Pc ww6_s9Pi of _ {
          GHC.Types.False -> GHC.Types.True;
          GHC.Types.True ->
            case ww_s9P6 ww4_s9Pd ww7_s9Pj of _ {
              GHC.Types.False -> GHC.Types.True;
              GHC.Types.True -> GHC.Types.False
            }
        }
    }
    }
    }
    }

Engine.Core.Vec.$fEqVec3 [InlPrag=[ALWAYS] CONLIKE]
  :: forall a_a9kP.
     GHC.Classes.Eq a_a9kP =>
     GHC.Classes.Eq (Engine.Core.Vec.Vec3 a_a9kP)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType Lm,
 Unf=DFun(arity=2) GHC.Classes.D:Eq [{Engine.Core.Vec.$fEqVec3_$c==},
                                     {Engine.Core.Vec.$fEqVec3_$c/=}]]
Engine.Core.Vec.$fEqVec3 =
  \ (@ a_a9kP) ($dEq_a9wP :: GHC.Classes.Eq a_a9kP) ->
    GHC.Classes.D:Eq
      @ (Engine.Core.Vec.Vec3 a_a9kP)
      (Engine.Core.Vec.$fEqVec3_$c== @ a_a9kP $dEq_a9wP)
      (Engine.Core.Vec.$fEqVec3_$c/= @ a_a9kP $dEq_a9wP)

Engine.Core.Vec.$fShowVec5 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Core.Vec.$fShowVec5 = GHC.CString.unpackCString# "Vec3 "

Engine.Core.Vec.$fShowVec4 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Core.Vec.$fShowVec4 = GHC.Types.I# 11

Engine.Core.Vec.$w$cshowsPrec1
  :: forall a_a9kP.
     GHC.Show.Show a_a9kP =>
     GHC.Prim.Int# -> a_a9kP -> a_a9kP -> a_a9kP -> GHC.Show.ShowS
[GblId,
 Arity=5,
 Str=DmdType LLSSS,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [90 0 0 0 0] 351 120}]
Engine.Core.Vec.$w$cshowsPrec1 =
  \ (@ a_a9kP)
    (w_s9Pp :: GHC.Show.Show a_a9kP)
    (ww_s9Ps :: GHC.Prim.Int#)
    (ww1_s9Pw :: a_a9kP)
    (ww2_s9Px :: a_a9kP)
    (ww3_s9Py :: a_a9kP) ->
    let {
      g_X3wD [Dmd=Just L] :: GHC.Base.String -> GHC.Base.String
      [LclId, Str=DmdType]
      g_X3wD =
        GHC.Show.showsPrec
          @ a_a9kP w_s9Pp Engine.Core.Vec.$fShowVec4 ww3_s9Py } in
    let {
      f_X3ym [Dmd=Just L] :: GHC.Base.String -> GHC.Base.String
      [LclId, Str=DmdType]
      f_X3ym =
        GHC.Show.showsPrec
          @ a_a9kP w_s9Pp Engine.Core.Vec.$fShowVec4 ww2_s9Px } in
    let {
      f1_X3wt [Dmd=Just L] :: GHC.Base.String -> GHC.Base.String
      [LclId, Str=DmdType]
      f1_X3wt =
        GHC.Show.showsPrec
          @ a_a9kP w_s9Pp Engine.Core.Vec.$fShowVec4 ww1_s9Pw } in
    let {
      p_a8Oj :: GHC.Show.ShowS
      [LclId, Arity=1, Str=DmdType L]
      p_a8Oj =
        \ (x_X3wL :: GHC.Base.String) ->
          GHC.Base.++
            @ GHC.Types.Char
            Engine.Core.Vec.$fShowVec5
            (f1_X3wt
               (GHC.Types.:
                  @ GHC.Types.Char
                  GHC.Show.showSpace1
                  (f_X3ym
                     (GHC.Types.:
                        @ GHC.Types.Char GHC.Show.showSpace1 (g_X3wD x_X3wL))))) } in
    case GHC.Prim.>=# ww_s9Ps 11 of _ {
      GHC.Types.False -> p_a8Oj;
      GHC.Types.True ->
        \ (x_a8Oo :: GHC.Base.String) ->
          GHC.Types.:
            @ GHC.Types.Char
            GHC.Show.shows11
            (p_a8Oj (GHC.Types.: @ GHC.Types.Char GHC.Show.shows10 x_a8Oo))
    }

Engine.Core.Vec.$fShowVec3_$cshowsPrec [InlPrag=INLINE[0]]
  :: forall a_a9kP.
     GHC.Show.Show a_a9kP =>
     GHC.Types.Int -> Engine.Core.Vec.Vec3 a_a9kP -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=DmdType LU(L)U(SSS),
 Unf=Unf{Src=Worker=Engine.Core.Vec.$w$cshowsPrec1, TopLvl=True,
         Arity=3, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kP)
                 (w_s9Pp [Occ=Once] :: GHC.Show.Show a_a9kP)
                 (w1_s9Pq [Occ=Once!] :: GHC.Types.Int)
                 (w2_s9Pu [Occ=Once!] :: Engine.Core.Vec.Vec3 a_a9kP) ->
                 case w1_s9Pq of _ { GHC.Types.I# ww_s9Ps [Occ=Once] ->
                 case w2_s9Pu
                 of _
                 { Engine.Core.Vec.Vec3 ww1_s9Pw [Occ=Once]
                                        ww2_s9Px [Occ=Once]
                                        ww3_s9Py [Occ=Once] ->
                 Engine.Core.Vec.$w$cshowsPrec1
                   @ a_a9kP w_s9Pp ww_s9Ps ww1_s9Pw ww2_s9Px ww3_s9Py
                 }
                 }}]
Engine.Core.Vec.$fShowVec3_$cshowsPrec =
  \ (@ a_a9kP)
    (w_s9Pp :: GHC.Show.Show a_a9kP)
    (w1_s9Pq :: GHC.Types.Int)
    (w2_s9Pu :: Engine.Core.Vec.Vec3 a_a9kP) ->
    case w1_s9Pq of _ { GHC.Types.I# ww_s9Ps ->
    case w2_s9Pu
    of _ { Engine.Core.Vec.Vec3 ww1_s9Pw ww2_s9Px ww3_s9Py ->
    Engine.Core.Vec.$w$cshowsPrec1
      @ a_a9kP w_s9Pp ww_s9Ps ww1_s9Pw ww2_s9Px ww3_s9Py
    }
    }

Engine.Core.Vec.$fShowVec3_$cshowList
  :: forall a_a9kP.
     GHC.Show.Show a_a9kP =>
     [Engine.Core.Vec.Vec3 a_a9kP] -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 120 0}]
Engine.Core.Vec.$fShowVec3_$cshowList =
  \ (@ a_a9kP)
    ($dShow_a9wx :: GHC.Show.Show a_a9kP)
    (eta_B2 :: [Engine.Core.Vec.Vec3 a_a9kP])
    (eta1_B1 :: GHC.Base.String) ->
    GHC.Show.showList__
      @ (Engine.Core.Vec.Vec3 a_a9kP)
      (\ (w_s9Pu :: Engine.Core.Vec.Vec3 a_a9kP) ->
         case w_s9Pu
         of _ { Engine.Core.Vec.Vec3 ww_s9Pw ww1_s9Px ww2_s9Py ->
         Engine.Core.Vec.$w$cshowsPrec1
           @ a_a9kP $dShow_a9wx 0 ww_s9Pw ww1_s9Px ww2_s9Py
         })
      eta_B2
      eta1_B1

Engine.Core.Vec.$fShowVec3_$cshow
  :: forall a_a9kP.
     GHC.Show.Show a_a9kP =>
     Engine.Core.Vec.Vec3 a_a9kP -> GHC.Base.String
[GblId,
 Arity=2,
 Str=DmdType LU(SSS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kP)
                 ($dShow_a9wx [Occ=Once] :: GHC.Show.Show a_a9kP)
                 (x_a8Qm [Occ=Once] :: Engine.Core.Vec.Vec3 a_a9kP) ->
                 Engine.Core.Vec.$fShowVec3_$cshowsPrec
                   @ a_a9kP
                   $dShow_a9wx
                   GHC.Show.shows26
                   x_a8Qm
                   (GHC.Types.[] @ GHC.Types.Char)}]
Engine.Core.Vec.$fShowVec3_$cshow =
  \ (@ a_a9kP)
    ($dShow_a9wx :: GHC.Show.Show a_a9kP)
    (x_a8Qm :: Engine.Core.Vec.Vec3 a_a9kP) ->
    case x_a8Qm
    of _ { Engine.Core.Vec.Vec3 ww_s9Pw ww1_s9Px ww2_s9Py ->
    Engine.Core.Vec.$w$cshowsPrec1
      @ a_a9kP
      $dShow_a9wx
      0
      ww_s9Pw
      ww1_s9Px
      ww2_s9Py
      (GHC.Types.[] @ GHC.Types.Char)
    }

Engine.Core.Vec.$fShowVec3 [InlPrag=[ALWAYS] CONLIKE]
  :: forall a_a9kP.
     GHC.Show.Show a_a9kP =>
     GHC.Show.Show (Engine.Core.Vec.Vec3 a_a9kP)
[GblId[DFunId],
 Arity=1,
 Str=DmdType Lm,
 Unf=DFun(arity=2) GHC.Show.D:Show [{Engine.Core.Vec.$fShowVec3_$cshowsPrec},
                                    {Engine.Core.Vec.$fShowVec3_$cshow},
                                    {Engine.Core.Vec.$fShowVec3_$cshowList}]]
Engine.Core.Vec.$fShowVec3 =
  \ (@ a_a9kP) ($dShow_a9wx :: GHC.Show.Show a_a9kP) ->
    GHC.Show.D:Show
      @ (Engine.Core.Vec.Vec3 a_a9kP)
      (Engine.Core.Vec.$fShowVec3_$cshowsPrec @ a_a9kP $dShow_a9wx)
      (Engine.Core.Vec.$fShowVec3_$cshow @ a_a9kP $dShow_a9wx)
      (Engine.Core.Vec.$fShowVec3_$cshowList @ a_a9kP $dShow_a9wx)

Engine.Core.Vec.$fEqVec2_$c== [InlPrag=INLINE[0]]
  :: forall a_a9kO.
     GHC.Classes.Eq a_a9kO =>
     Engine.Core.Vec.Vec2 a_a9kO
     -> Engine.Core.Vec.Vec2 a_a9kO -> GHC.Types.Bool
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(SA)U(SU(L*))U(SU(L*)),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kO)
                 (w_s9PE [Occ=Once!] :: GHC.Classes.Eq a_a9kO)
                 (w1_s9PJ [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kO)
                 (w2_s9PO [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kO) ->
                 case w_s9PE of _ { GHC.Classes.D:Eq ww_s9PG _ ->
                 case w1_s9PJ
                 of _
                 { Engine.Core.Vec.Vec2 ww2_s9PL [Occ=Once] ww3_s9PM [Occ=Once] ->
                 case w2_s9PO
                 of _
                 { Engine.Core.Vec.Vec2 ww4_s9PQ [Occ=Once] ww5_s9PR [Occ=Once] ->
                 case ww_s9PG ww2_s9PL ww4_s9PQ of _ {
                   GHC.Types.False -> GHC.Types.False;
                   GHC.Types.True -> ww_s9PG ww3_s9PM ww5_s9PR
                 }
                 }
                 }
                 }}]
Engine.Core.Vec.$fEqVec2_$c== =
  \ (@ a_a9kO)
    (w_s9PE :: GHC.Classes.Eq a_a9kO)
    (w1_s9PJ :: Engine.Core.Vec.Vec2 a_a9kO)
    (w2_s9PO :: Engine.Core.Vec.Vec2 a_a9kO) ->
    case w_s9PE of _ { GHC.Classes.D:Eq ww_s9PG ww1_s9PH ->
    case w1_s9PJ of _ { Engine.Core.Vec.Vec2 ww2_s9PL ww3_s9PM ->
    case w2_s9PO of _ { Engine.Core.Vec.Vec2 ww4_s9PQ ww5_s9PR ->
    case ww_s9PG ww2_s9PL ww4_s9PQ of _ {
      GHC.Types.False -> GHC.Types.False;
      GHC.Types.True -> ww_s9PG ww3_s9PM ww5_s9PR
    }
    }
    }
    }

Engine.Core.Vec.$fEqVec2_$c/=
  :: forall a_a9kO.
     GHC.Classes.Eq a_a9kO =>
     Engine.Core.Vec.Vec2 a_a9kO
     -> Engine.Core.Vec.Vec2 a_a9kO -> GHC.Types.Bool
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(SA)U(SU(L*))U(SU(L*)),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kO)
                 ($dEq_a9wk [Occ=Once] :: GHC.Classes.Eq a_a9kO)
                 (a_a9vJ [Occ=Once] :: Engine.Core.Vec.Vec2 a_a9kO)
                 (b_a9vK [Occ=Once] :: Engine.Core.Vec.Vec2 a_a9kO) ->
                 case Engine.Core.Vec.$fEqVec2_$c== @ a_a9kO $dEq_a9wk a_a9vJ b_a9vK
                 of _ {
                   GHC.Types.False -> GHC.Types.True;
                   GHC.Types.True -> GHC.Types.False
                 }}]
Engine.Core.Vec.$fEqVec2_$c/= =
  \ (@ a_a9kO)
    ($dEq_a9wk :: GHC.Classes.Eq a_a9kO)
    (a_a9vJ :: Engine.Core.Vec.Vec2 a_a9kO)
    (b_a9vK :: Engine.Core.Vec.Vec2 a_a9kO) ->
    case $dEq_a9wk of _ { GHC.Classes.D:Eq ww_s9PG ww1_s9PH ->
    case a_a9vJ of _ { Engine.Core.Vec.Vec2 ww2_s9PL ww3_s9PM ->
    case b_a9vK of _ { Engine.Core.Vec.Vec2 ww4_s9PQ ww5_s9PR ->
    case ww_s9PG ww2_s9PL ww4_s9PQ of _ {
      GHC.Types.False -> GHC.Types.True;
      GHC.Types.True ->
        case ww_s9PG ww3_s9PM ww5_s9PR of _ {
          GHC.Types.False -> GHC.Types.True;
          GHC.Types.True -> GHC.Types.False
        }
    }
    }
    }
    }

Engine.Core.Vec.$fEqVec2 [InlPrag=[ALWAYS] CONLIKE]
  :: forall a_a9kO.
     GHC.Classes.Eq a_a9kO =>
     GHC.Classes.Eq (Engine.Core.Vec.Vec2 a_a9kO)
[GblId[DFunId],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType Lm,
 Unf=DFun(arity=2) GHC.Classes.D:Eq [{Engine.Core.Vec.$fEqVec2_$c==},
                                     {Engine.Core.Vec.$fEqVec2_$c/=}]]
Engine.Core.Vec.$fEqVec2 =
  \ (@ a_a9kO) ($dEq_a9wk :: GHC.Classes.Eq a_a9kO) ->
    GHC.Classes.D:Eq
      @ (Engine.Core.Vec.Vec2 a_a9kO)
      (Engine.Core.Vec.$fEqVec2_$c== @ a_a9kO $dEq_a9wk)
      (Engine.Core.Vec.$fEqVec2_$c/= @ a_a9kO $dEq_a9wk)

Engine.Core.Vec.$fShowVec1 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Core.Vec.$fShowVec1 = GHC.CString.unpackCString# "Vec2 "

Engine.Core.Vec.$w$cshowsPrec
  :: forall a_a9kO.
     GHC.Show.Show a_a9kO =>
     GHC.Prim.Int# -> a_a9kO -> a_a9kO -> GHC.Show.ShowS
[GblId,
 Arity=4,
 Str=DmdType LLSS,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [60 0 0 0] 321 120}]
Engine.Core.Vec.$w$cshowsPrec =
  \ (@ a_a9kO)
    (w_s9PX :: GHC.Show.Show a_a9kO)
    (ww_s9Q0 :: GHC.Prim.Int#)
    (ww1_s9Q4 :: a_a9kO)
    (ww2_s9Q5 :: a_a9kO) ->
    let {
      g_X3wJ [Dmd=Just L] :: GHC.Base.String -> GHC.Base.String
      [LclId, Str=DmdType]
      g_X3wJ =
        GHC.Show.showsPrec
          @ a_a9kO w_s9PX Engine.Core.Vec.$fShowVec4 ww2_s9Q5 } in
    let {
      f_X3wE [Dmd=Just L] :: GHC.Base.String -> GHC.Base.String
      [LclId, Str=DmdType]
      f_X3wE =
        GHC.Show.showsPrec
          @ a_a9kO w_s9PX Engine.Core.Vec.$fShowVec4 ww1_s9Q4 } in
    case GHC.Prim.>=# ww_s9Q0 11 of _ {
      GHC.Types.False ->
        \ (x_X3wO :: GHC.Base.String) ->
          GHC.Base.++
            @ GHC.Types.Char
            Engine.Core.Vec.$fShowVec1
            (f_X3wE
               (GHC.Types.:
                  @ GHC.Types.Char GHC.Show.showSpace1 (g_X3wJ x_X3wO)));
      GHC.Types.True ->
        \ (x_a8Oo :: GHC.Base.String) ->
          GHC.Types.:
            @ GHC.Types.Char
            GHC.Show.shows11
            (GHC.Base.++
               @ GHC.Types.Char
               Engine.Core.Vec.$fShowVec1
               (f_X3wE
                  (GHC.Types.:
                     @ GHC.Types.Char
                     GHC.Show.showSpace1
                     (g_X3wJ (GHC.Types.: @ GHC.Types.Char GHC.Show.shows10 x_a8Oo)))))
    }

Engine.Core.Vec.$fShowVec2_$cshowsPrec [InlPrag=INLINE[0]]
  :: forall a_a9kO.
     GHC.Show.Show a_a9kO =>
     GHC.Types.Int -> Engine.Core.Vec.Vec2 a_a9kO -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=DmdType LU(L)U(SS),
 Unf=Unf{Src=Worker=Engine.Core.Vec.$w$cshowsPrec, TopLvl=True,
         Arity=3, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kO)
                 (w_s9PX [Occ=Once] :: GHC.Show.Show a_a9kO)
                 (w1_s9PY [Occ=Once!] :: GHC.Types.Int)
                 (w2_s9Q2 [Occ=Once!] :: Engine.Core.Vec.Vec2 a_a9kO) ->
                 case w1_s9PY of _ { GHC.Types.I# ww_s9Q0 [Occ=Once] ->
                 case w2_s9Q2
                 of _
                 { Engine.Core.Vec.Vec2 ww1_s9Q4 [Occ=Once] ww2_s9Q5 [Occ=Once] ->
                 Engine.Core.Vec.$w$cshowsPrec
                   @ a_a9kO w_s9PX ww_s9Q0 ww1_s9Q4 ww2_s9Q5
                 }
                 }}]
Engine.Core.Vec.$fShowVec2_$cshowsPrec =
  \ (@ a_a9kO)
    (w_s9PX :: GHC.Show.Show a_a9kO)
    (w1_s9PY :: GHC.Types.Int)
    (w2_s9Q2 :: Engine.Core.Vec.Vec2 a_a9kO) ->
    case w1_s9PY of _ { GHC.Types.I# ww_s9Q0 ->
    case w2_s9Q2 of _ { Engine.Core.Vec.Vec2 ww1_s9Q4 ww2_s9Q5 ->
    Engine.Core.Vec.$w$cshowsPrec
      @ a_a9kO w_s9PX ww_s9Q0 ww1_s9Q4 ww2_s9Q5
    }
    }

Engine.Core.Vec.$fShowVec2_$cshowList
  :: forall a_a9kO.
     GHC.Show.Show a_a9kO =>
     [Engine.Core.Vec.Vec2 a_a9kO] -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 110 0}]
Engine.Core.Vec.$fShowVec2_$cshowList =
  \ (@ a_a9kO)
    ($dShow_a9w3 :: GHC.Show.Show a_a9kO)
    (eta_B2 :: [Engine.Core.Vec.Vec2 a_a9kO])
    (eta1_B1 :: GHC.Base.String) ->
    GHC.Show.showList__
      @ (Engine.Core.Vec.Vec2 a_a9kO)
      (\ (w_s9Q2 :: Engine.Core.Vec.Vec2 a_a9kO) ->
         case w_s9Q2 of _ { Engine.Core.Vec.Vec2 ww_s9Q4 ww1_s9Q5 ->
         Engine.Core.Vec.$w$cshowsPrec
           @ a_a9kO $dShow_a9w3 0 ww_s9Q4 ww1_s9Q5
         })
      eta_B2
      eta1_B1

Engine.Core.Vec.$fShowVec2_$cshow
  :: forall a_a9kO.
     GHC.Show.Show a_a9kO =>
     Engine.Core.Vec.Vec2 a_a9kO -> GHC.Base.String
[GblId,
 Arity=2,
 Str=DmdType LU(SS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a9kO)
                 ($dShow_a9w3 [Occ=Once] :: GHC.Show.Show a_a9kO)
                 (x_a8Qm [Occ=Once] :: Engine.Core.Vec.Vec2 a_a9kO) ->
                 Engine.Core.Vec.$fShowVec2_$cshowsPrec
                   @ a_a9kO
                   $dShow_a9w3
                   GHC.Show.shows26
                   x_a8Qm
                   (GHC.Types.[] @ GHC.Types.Char)}]
Engine.Core.Vec.$fShowVec2_$cshow =
  \ (@ a_a9kO)
    ($dShow_a9w3 :: GHC.Show.Show a_a9kO)
    (x_a8Qm :: Engine.Core.Vec.Vec2 a_a9kO) ->
    case x_a8Qm of _ { Engine.Core.Vec.Vec2 ww_s9Q4 ww1_s9Q5 ->
    Engine.Core.Vec.$w$cshowsPrec
      @ a_a9kO
      $dShow_a9w3
      0
      ww_s9Q4
      ww1_s9Q5
      (GHC.Types.[] @ GHC.Types.Char)
    }

Engine.Core.Vec.$fShowVec2 [InlPrag=[ALWAYS] CONLIKE]
  :: forall a_a9kO.
     GHC.Show.Show a_a9kO =>
     GHC.Show.Show (Engine.Core.Vec.Vec2 a_a9kO)
[GblId[DFunId],
 Arity=1,
 Str=DmdType Lm,
 Unf=DFun(arity=2) GHC.Show.D:Show [{Engine.Core.Vec.$fShowVec2_$cshowsPrec},
                                    {Engine.Core.Vec.$fShowVec2_$cshow},
                                    {Engine.Core.Vec.$fShowVec2_$cshowList}]]
Engine.Core.Vec.$fShowVec2 =
  \ (@ a_a9kO) ($dShow_a9w3 :: GHC.Show.Show a_a9kO) ->
    GHC.Show.D:Show
      @ (Engine.Core.Vec.Vec2 a_a9kO)
      (Engine.Core.Vec.$fShowVec2_$cshowsPrec @ a_a9kO $dShow_a9w3)
      (Engine.Core.Vec.$fShowVec2_$cshow @ a_a9kO $dShow_a9w3)
      (Engine.Core.Vec.$fShowVec2_$cshowList @ a_a9kO $dShow_a9w3)



[ 4 of 17] Compiling Engine.Graphics.Shaders ( Engine/Graphics/Shaders.hs, Engine/Graphics/Shaders.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 1,307, types: 1,720, coercions: 370}

Engine.Graphics.Shaders.quickGetUniform1
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Graphics.Rendering.OpenGL.Raw.Types.GLint #)
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 101 0}]
Engine.Graphics.Shaders.quickGetUniform1 =
  \ (shader_abW4 :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (name_abW5 :: GHC.Base.String)
    (eta_acc1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Encoding.getForeignEncoding1
    of _ { (getForeignEncoding4_acep, setForeignEncoding1_aceq) ->
    case (getForeignEncoding4_acep
          `cast` (<GHC.Types.NTCo:IO <GHC.IO.Encoding.Types.TextEncoding>>
                  :: GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                            GHC.IO.Encoding.Types.TextEncoding #))))
           eta_acc1
    of _ { (# ipv_acek, ipv1_acel #) ->
    GHC.Foreign.charIsRepresentable3
      @ Graphics.Rendering.OpenGL.Raw.Types.GLint
      ipv1_acel
      name_abW5
      (Graphics.Rendering.OpenGL.Raw.Core31.Functions.dyn_glGetUniformLocation
         (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glGetUniformLocation
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint
               -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLchar
               -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLint))
         shader_abW4)
      ipv_acek
    }
    }

Engine.Graphics.Shaders.quickGetUniform
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.Base.String
     -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLint
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.quickGetUniform =
  Engine.Graphics.Shaders.quickGetUniform1
  `cast` (<Graphics.Rendering.OpenGL.Raw.Types.GLuint>
          -> <GHC.Base.String>
          -> Sym
               <(GHC.Types.NTCo:IO <Graphics.Rendering.OpenGL.Raw.Types.GLint>)>
          :: (Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.Base.String
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Graphics.Rendering.OpenGL.Raw.Types.GLint #))
               ~#
             (Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.Base.String
              -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLint))

Rec {
Engine.Graphics.Shaders.disableShaderAttribs1 [Occ=LoopBreaker]
  :: [Engine.Graphics.Shaders.ShaderAttrib]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Graphics.Shaders.disableShaderAttribs1 =
  \ (ds_dc0W :: [Engine.Graphics.Shaders.ShaderAttrib])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_dc0W of _ {
      [] -> (# eta_B1, GHC.Tuple.() #);
      : ds1_dc0X rest_abVW ->
        case ds1_dc0X
        of _ { Engine.Core.Vec.Vec3 attr_abVV ds2_dc0Y ds3_dc0Z ->
        case attr_abVV
             `cast` (<Foreign.C.Types.NTCo:CUInt>
                     :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
        of _ { GHC.Word.W32# ds5_sdsg ->
        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glDisableVertexAttribArray
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds7_acip ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aciu
               ds7_acip ds5_sdsg eta_B1
        of _ { (# ds8_aciz #) ->
        Engine.Graphics.Shaders.disableShaderAttribs1 rest_abVW ds8_aciz
        }
        }
        }
        }
    }
end Rec }

Engine.Graphics.Shaders.disableShaderAttribs
  :: [Engine.Graphics.Shaders.ShaderAttrib] -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.disableShaderAttribs =
  Engine.Graphics.Shaders.disableShaderAttribs1
  `cast` (<[Engine.Graphics.Shaders.ShaderAttrib]>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: ([Engine.Graphics.Shaders.ShaderAttrib]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             ([Engine.Graphics.Shaders.ShaderAttrib] -> GHC.Types.IO ()))

Rec {
Engine.Graphics.Shaders.bindShaderAttribs1 [Occ=LoopBreaker]
  :: [Engine.Graphics.Shaders.ShaderAttrib]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Graphics.Shaders.bindShaderAttribs1 =
  \ (ds_dc13 :: [Engine.Graphics.Shaders.ShaderAttrib])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_dc13 of _ {
      [] -> (# eta_B1, GHC.Tuple.() #);
      : ds1_dc14 rest_abVy ->
        case ds1_dc14
        of _ { Engine.Core.Vec.Vec3 attr_abVv buf_abVw len_abVx ->
        case len_abVx
             `cast` (<Foreign.C.Types.NTCo:CUInt>
                     :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
        of _ { GHC.Word.W32# x#_sdsk ->
        case attr_abVv
             `cast` (<Foreign.C.Types.NTCo:CUInt>
                     :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
        of _ { GHC.Word.W32# ds5_sdso ->
        case buf_abVw
             `cast` (<Foreign.C.Types.NTCo:CUInt>
                     :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
        of _ { GHC.Word.W32# ds8_sdss ->
        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glEnableVertexAttribArray
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds3_acki ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_ackn
               ds3_acki ds5_sdso eta_B1
        of _ { (# ds6_acks #) ->
        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glBindBuffer
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt>
                        -> <Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Word.Word32 -> GHC.Word.Word32 -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds10_acjT ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_ack2
               ds10_acjT (__word 34962) ds8_sdss ds6_acks
        of _ { (# ds11_ack7 #) ->
        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glVertexAttribPointer
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLint
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLboolean
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLsizei
                   -> GHC.Ptr.Ptr (GHC.Prim.Any *)
                   -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt>
                        -> <Foreign.C.Types.NTCo:CInt>
                        -> <Foreign.C.Types.NTCo:CUInt>
                        -> <Foreign.C.Types.NTCo:CUChar>
                        -> <Foreign.C.Types.NTCo:CInt>
                        -> <GHC.Ptr.Ptr (GHC.Prim.Any *) -> GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CUInt
                           -> Foreign.C.Types.CInt
                           -> Foreign.C.Types.CUInt
                           -> Foreign.C.Types.CUChar
                           -> Foreign.C.Types.CInt
                           -> GHC.Ptr.Ptr (GHC.Prim.Any *)
                           -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Word.Word32
                           -> GHC.Int.Int32
                           -> GHC.Word.Word32
                           -> GHC.Word.Word8
                           -> GHC.Int.Int32
                           -> GHC.Ptr.Ptr (GHC.Prim.Any *)
                           -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds13_acj2 ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acjK
               ds13_acj2
               ds5_sdso
               (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# x#_sdsk))
               (__word 5126)
               (__word 0)
               0
               (GHC.Prim.int2Addr# 0)
               ds11_ack7
        of _ { (# ds22_acjw #) ->
        Engine.Graphics.Shaders.bindShaderAttribs1 rest_abVy ds22_acjw
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
    }
end Rec }

Engine.Graphics.Shaders.bindShaderAttribs
  :: [Engine.Graphics.Shaders.ShaderAttrib] -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.bindShaderAttribs =
  Engine.Graphics.Shaders.bindShaderAttribs1
  `cast` (<[Engine.Graphics.Shaders.ShaderAttrib]>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: ([Engine.Graphics.Shaders.ShaderAttrib]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             ([Engine.Graphics.Shaders.ShaderAttrib] -> GHC.Types.IO ()))

Engine.Graphics.Shaders.$wa
  :: GHC.Prim.Word#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 131 60}]
Engine.Graphics.Shaders.$wa =
  \ (ww_sdj9 :: GHC.Prim.Word#)
    (w_sdjb :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.ltWord# (__word 0) ww_sdj9 of _ {
      GHC.Types.False -> (# w_sdjb, GHC.Tuple.() #);
      GHC.Types.True ->
        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glActiveTexture
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds3_ackF ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_ackK
               ds3_ackF (__word 33984) w_sdjb
        of _ { (# ds7_ackP #) ->
        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glBindTexture
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt>
                        -> <Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Word.Word32 -> GHC.Word.Word32 -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds4_acla ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aclj
               ds4_acla (__word 3553) (__word 0) ds7_ackP
        of _ { (# ds10_aclo #) ->
        (# ds10_aclo, GHC.Tuple.() #)
        }
        }
        }
        }
    }

Engine.Graphics.Shaders.unBindTextures1 [InlPrag=INLINE[0]]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=DmdType U(L)L,
 Unf=Unf{Src=Worker=Engine.Graphics.Shaders.$wa, TopLvl=True,
         Arity=2, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sdj7 [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                 (w1_sdjb [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sdj7
                      `cast` (<Foreign.C.Types.NTCo:CUInt>
                              :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
                 of _ { GHC.Word.W32# ww_sdj9 [Occ=Once] ->
                 Engine.Graphics.Shaders.$wa ww_sdj9 w1_sdjb
                 }}]
Engine.Graphics.Shaders.unBindTextures1 =
  \ (w_sdj7 :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (w1_sdjb :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_sdj7
         `cast` (<Foreign.C.Types.NTCo:CUInt>
                 :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
    of _ { GHC.Word.W32# ww_sdj9 ->
    Engine.Graphics.Shaders.$wa ww_sdj9 w1_sdjb
    }

Engine.Graphics.Shaders.unBindTextures
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=DmdType U(L)L,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Graphics.Shaders.unBindTextures1
               `cast` (<Graphics.Rendering.OpenGL.Raw.Types.GLuint>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (Graphics.Rendering.OpenGL.Raw.Types.GLuint
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))}]
Engine.Graphics.Shaders.unBindTextures =
  Engine.Graphics.Shaders.unBindTextures1
  `cast` (<Graphics.Rendering.OpenGL.Raw.Types.GLuint>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))

lvl_rdyy :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=DmdType m]
lvl_rdyy = GHC.Types.C# ']'

lvl1_rdyz :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs, Str=DmdType]
lvl1_rdyz =
  GHC.Types.:
    @ GHC.Types.Char lvl_rdyy (GHC.Types.[] @ GHC.Types.Char)

Rec {
Engine.Graphics.Shaders.bindTextures3 [Occ=LoopBreaker]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> [(Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
          Graphics.Rendering.OpenGL.Raw.Types.GLint)]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=4, Str=DmdType LSLL]
Engine.Graphics.Shaders.bindTextures3 =
  \ (s_abVm :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (ds_dc18
       :: [(Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
            Graphics.Rendering.OpenGL.Raw.Types.GLint)])
    (i_abVq :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (eta_Xt :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_dc18 of _ {
      [] -> (# eta_Xt, GHC.Tuple.() #);
      : ds1_dc19 ts_abVp ->
        case ds1_dc19 of _ { (ds2_dc1a, activeId_abVo) ->
        case activeId_abVo
             `cast` (<Foreign.C.Types.NTCo:CInt>
                     :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
        of _ { GHC.Int.I32# a1_acmZ ->
        let {
          a_scmU
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Arity=1, Str=DmdType L]
          a_scmU =
            \ (s1_X3Wm :: GHC.Prim.State# GHC.Prim.RealWorld) ->
              case GHC.IO.Encoding.getForeignEncoding1
              of _ { (getForeignEncoding4_acep, setForeignEncoding1_aceq) ->
              case (getForeignEncoding4_acep
                    `cast` (<GHC.Types.NTCo:IO <GHC.IO.Encoding.Types.TextEncoding>>
                            :: GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding
                                 ~#
                               (GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                      GHC.IO.Encoding.Types.TextEncoding #))))
                     s1_X3Wm
              of _ { (# ipv_acek, ipv1_acel #) ->
              case GHC.Foreign.charIsRepresentable3
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLint
                     ipv1_acel
                     (GHC.CString.unpackAppendCString#
                        "textures["
                        (case i_abVq
                              `cast` (UnsafeCo Foreign.C.Types.CUInt GHC.Word.Word32
                                      :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
                         of _ { GHC.Word.W32# x#_aclZ ->
                         GHC.Base.++
                           @ GHC.Types.Char
                           (GHC.Show.itos
                              (GHC.Prim.word2Int# x#_aclZ) (GHC.Types.[] @ GHC.Types.Char))
                           lvl1_rdyz
                         }))
                     (Graphics.Rendering.OpenGL.Raw.Core31.Functions.dyn_glGetUniformLocation
                        (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glGetUniformLocation
                           @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint
                              -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLchar
                              -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLint))
                        s_abVm)
                     ipv_acek
              of _ { (# ipv2_a3Ui, ipv3_a3Uj #) ->
              case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glUniform1i
                      @ (Graphics.Rendering.OpenGL.Raw.Types.GLint
                         -> Graphics.Rendering.OpenGL.Raw.Types.GLint -> GHC.Types.IO ()))
                   `cast` (GHC.Ptr.FunPtr
                             (<Foreign.C.Types.NTCo:CInt>
                              -> <Foreign.C.Types.NTCo:CInt> -> <GHC.Types.IO ()>)
                           :: GHC.Ptr.FunPtr
                                (Foreign.C.Types.CInt -> Foreign.C.Types.CInt -> GHC.Types.IO ())
                                ~#
                              GHC.Ptr.FunPtr (GHC.Int.Int32 -> GHC.Int.Int32 -> GHC.Types.IO ()))
              of _ { GHC.Ptr.FunPtr ds6_acmz ->
              case ipv3_a3Uj
                   `cast` (<Foreign.C.Types.NTCo:CInt>
                           :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
              of _ { GHC.Int.I32# ds8_acmD ->
              case i_abVq
                   `cast` (<Foreign.C.Types.NTCo:CUInt>
                           :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
              of _ { GHC.Word.W32# x#_ac2G ->
              case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Int#
                -> GHC.Prim.Int#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acmI
                     ds6_acmz
                     ds8_acmD
                     (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# x#_ac2G))
                     ipv2_a3Ui
              of _ { (# ds10_acmN #) ->
              Engine.Graphics.Shaders.bindTextures3
                s_abVm
                ts_abVp
                ((GHC.Word.W32#
                    (GHC.Prim.narrow32Word# (GHC.Prim.plusWord# x#_ac2G (__word 1))))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                         :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
                ds10_acmN
              }
              }
              }
              }
              }
              }
              } } in
        case GHC.Prim.>=# a1_acmZ 0 of _ {
          GHC.Types.False -> a_scmU eta_Xt;
          GHC.Types.True ->
            case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glActiveTexture
                    @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
                 `cast` (GHC.Ptr.FunPtr
                           (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                         :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                              ~#
                            GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
            of _ { GHC.Ptr.FunPtr ds4_ackF ->
            case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_ackK
                   ds4_ackF
                   (GHC.Prim.narrow32Word#
                      (GHC.Prim.plusWord#
                         (__word 33984)
                         (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# a1_acmZ))))
                   eta_Xt
            of _ { (# ds7_ackP #) ->
            case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glBindTexture
                    @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
                 `cast` (GHC.Ptr.FunPtr
                           (<Foreign.C.Types.NTCo:CUInt>
                            -> <Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                         :: GHC.Ptr.FunPtr
                              (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt -> GHC.Types.IO ())
                              ~#
                            GHC.Ptr.FunPtr
                              (GHC.Word.Word32 -> GHC.Word.Word32 -> GHC.Types.IO ()))
            of _ { GHC.Ptr.FunPtr ds6_acla ->
            case ds2_dc1a
                 `cast` (<Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.NTCo:TextureObject> ; <Foreign.C.Types.NTCo:CUInt>
                         :: Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                              ~#
                            GHC.Word.Word32)
            of _ { GHC.Word.W32# ds9_aclk ->
            case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aclj
                   ds6_acla (__word 3553) ds9_aclk ds7_ackP
            of _ { (# ds10_aclo #) ->
            a_scmU ds10_aclo
            }
            }
            }
            }
            }
        }
        }
        }
    }
end Rec }

Engine.Graphics.Shaders.bindTextures2 :: GHC.Word.Word32
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Graphics.Shaders.bindTextures2 = GHC.Word.W32# (__word 0)

Engine.Graphics.Shaders.bindTextures1
  :: [Engine.Graphics.Textures.Texture]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=DmdType SLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 50 0}]
Engine.Graphics.Shaders.bindTextures1 =
  \ (textures_abVj :: [Engine.Graphics.Textures.Texture])
    (shader_abVk :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    Engine.Graphics.Shaders.bindTextures3
      shader_abVk
      textures_abVj
      (Engine.Graphics.Shaders.bindTextures2
       `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
               :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
      eta_B1

Engine.Graphics.Shaders.bindTextures
  :: [Engine.Graphics.Textures.Texture]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=DmdType SLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.bindTextures =
  Engine.Graphics.Shaders.bindTextures1
  `cast` (<[Engine.Graphics.Textures.Texture]>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLuint>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: ([Engine.Graphics.Textures.Texture]
              -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             ([Engine.Graphics.Textures.Texture]
              -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))

Engine.Graphics.Shaders.withNewPtr1
  :: forall a_Xg.
     (GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
      -> GHC.Types.IO a_Xg)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Graphics.Rendering.OpenGL.Raw.Types.GLint #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [60 0] 68 30}]
Engine.Graphics.Shaders.withNewPtr1 =
  \ (@ a_Xg)
    (f_abW6
       :: GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
          -> GHC.Types.IO a_Xg)
    (eta_acnr :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.newAlignedPinnedByteArray#
           @ GHC.Prim.RealWorld 4 4 eta_acnr
    of _ { (# ipv_acnC, ipv1_acnD #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ GHC.Prim.RealWorld ipv1_acnD ipv_acnC
    of _ { (# ipv2_acnH, ipv3_acnI #) ->
    let {
      a_scnV [Dmd=Just L] :: GHC.Prim.Addr#
      [LclId, Str=DmdType]
      a_scnV = GHC.Prim.byteArrayContents# ipv3_acnI } in
    case ((f_abW6
             (GHC.Ptr.Ptr @ Graphics.Rendering.OpenGL.Raw.Types.GLint a_scnV))
          `cast` (<GHC.Types.NTCo:IO <a_Xg>>
                  :: GHC.Types.IO a_Xg
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_Xg #))))
           ipv2_acnH
    of _ { (# ipv4_a3Ui, _ #) ->
    case GHC.Prim.readInt32OffAddr#
           @ GHC.Prim.RealWorld a_scnV 0 ipv4_a3Ui
    of _ { (# ipv6_aco4, ipv7_aco5 #) ->
    case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv3_acnI ipv6_aco4
    of s4_acnP { __DEFAULT ->
    (# s4_acnP,
       (GHC.Int.I32# ipv7_aco5)
       `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
               :: GHC.Int.Int32 ~# Foreign.C.Types.CInt) #)
    }
    }
    }
    }
    }

Engine.Graphics.Shaders.withNewPtr_$swithNewPtr
  :: forall a_o.
     (GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
      -> GHC.Types.IO a_o)
     -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLint
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.withNewPtr_$swithNewPtr =
  Engine.Graphics.Shaders.withNewPtr1
  `cast` (forall a_Xg.
          <GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
           -> GHC.Types.IO a_Xg>
          -> Sym
               <(GHC.Types.NTCo:IO <Graphics.Rendering.OpenGL.Raw.Types.GLint>)>
          :: (forall a_Xg.
              (GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
               -> GHC.Types.IO a_Xg)
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Graphics.Rendering.OpenGL.Raw.Types.GLint #))
               ~#
             (forall a_Xg.
              (GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
               -> GHC.Types.IO a_Xg)
              -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLint))

Engine.Graphics.Shaders.$wa1
  :: forall b_n a_o.
     (b_n -> GHC.Types.Int)
     -> (b_n -> GHC.Types.Int)
     -> (GHC.Ptr.Ptr b_n -> GHC.Types.IO b_n)
     -> (GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_n #)
[GblId,
 Arity=5,
 Str=DmdType SSLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [60 60 60 60 0] 158 30}]
Engine.Graphics.Shaders.$wa1 =
  \ (@ b_n)
    (@ a_o)
    (ww_sdji :: b_n -> GHC.Types.Int)
    (ww1_sdjj :: b_n -> GHC.Types.Int)
    (ww2_sdjo :: GHC.Ptr.Ptr b_n -> GHC.Types.IO b_n)
    (w_sdjr :: GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o)
    (w1_sdjs :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ww_sdji (GHC.Err.undefined @ b_n)
    of _ { GHC.Types.I# size_acnu ->
    case ww1_sdjj (GHC.Err.undefined @ b_n)
    of _ { GHC.Types.I# align_acny ->
    case GHC.Prim.newAlignedPinnedByteArray#
           @ GHC.Prim.RealWorld size_acnu align_acny w1_sdjs
    of _ { (# ipv_acnC, ipv1_acnD #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ GHC.Prim.RealWorld ipv1_acnD ipv_acnC
    of _ { (# ipv2_acnH, ipv3_acnI #) ->
    let {
      a_scok [Dmd=Just L] :: GHC.Prim.Addr#
      [LclId, Str=DmdType]
      a_scok = GHC.Prim.byteArrayContents# ipv3_acnI } in
    let {
      p_abWl :: GHC.Ptr.Ptr b_n
      [LclId, Str=DmdType m]
      p_abWl = GHC.Ptr.Ptr @ b_n a_scok } in
    case ((w_sdjr p_abWl)
          `cast` (<GHC.Types.NTCo:IO <a_o>>
                  :: GHC.Types.IO a_o
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_o #))))
           ipv2_acnH
    of _ { (# ipv4_a3Ui, _ #) ->
    case ((ww2_sdjo p_abWl)
          `cast` (<GHC.Types.NTCo:IO <b_n>>
                  :: GHC.Types.IO b_n
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_n #))))
           ipv4_a3Ui
    of _ { (# ipv6_acnM, ipv7_acnN #) ->
    case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv3_acnI ipv6_acnM
    of s4_acnP { __DEFAULT ->
    (# s4_acnP, ipv7_acnN #)
    }
    }
    }
    }
    }
    }
    }

Engine.Graphics.Shaders.withNewPtr2 [InlPrag=INLINE[0]]
  :: forall b_n a_o.
     Foreign.Storable.Storable b_n =>
     (GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_n #)
[GblId,
 Arity=3,
 Str=DmdType U(SSAAAALA)LL,
 Unf=Unf{Src=Worker=Engine.Graphics.Shaders.$wa1, TopLvl=True,
         Arity=3, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ b_n)
                 (@ a_o)
                 (w_sdjg [Occ=Once!] :: Foreign.Storable.Storable b_n)
                 (w1_sdjr [Occ=Once] :: GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o)
                 (w2_sdjs [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sdjg
                 of _
                 { Foreign.Storable.D:Storable ww_sdji [Occ=Once]
                                               ww1_sdjj [Occ=Once]
                                               _
                                               _
                                               _
                                               _
                                               ww6_sdjo [Occ=Once]
                                               _ ->
                 Engine.Graphics.Shaders.$wa1
                   @ b_n @ a_o ww_sdji ww1_sdjj ww6_sdjo w1_sdjr w2_sdjs
                 }}]
Engine.Graphics.Shaders.withNewPtr2 =
  \ (@ b_n)
    (@ a_o)
    (w_sdjg :: Foreign.Storable.Storable b_n)
    (w1_sdjr :: GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o)
    (w2_sdjs :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_sdjg
    of _
    { Foreign.Storable.D:Storable ww_sdji
                                  ww1_sdjj
                                  ww2_sdjk
                                  ww3_sdjl
                                  ww4_sdjm
                                  ww5_sdjn
                                  ww6_sdjo
                                  ww7_sdjp ->
    Engine.Graphics.Shaders.$wa1
      @ b_n @ a_o ww_sdji ww1_sdjj ww6_sdjo w1_sdjr w2_sdjs
    }

Engine.Graphics.Shaders.withNewPtr
  :: forall b_aby7 a_aby8.
     Foreign.Storable.Storable b_aby7 =>
     (GHC.Ptr.Ptr b_aby7 -> GHC.Types.IO a_aby8) -> GHC.Types.IO b_aby7
[GblId,
 Arity=3,
 Str=DmdType U(SSAAAALA)LL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Graphics.Shaders.withNewPtr2
               `cast` (forall b_n a_o.
                       <Foreign.Storable.Storable b_n>
                       -> <GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o>
                       -> Sym <(GHC.Types.NTCo:IO <b_n>)>
                       :: (forall b_n a_o.
                           Foreign.Storable.Storable b_n =>
                           (GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o)
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_n #))
                            ~#
                          (forall b_n a_o.
                           Foreign.Storable.Storable b_n =>
                           (GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o) -> GHC.Types.IO b_n))}]
Engine.Graphics.Shaders.withNewPtr =
  Engine.Graphics.Shaders.withNewPtr2
  `cast` (forall b_n a_o.
          <Foreign.Storable.Storable b_n>
          -> <GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o>
          -> Sym <(GHC.Types.NTCo:IO <b_n>)>
          :: (forall b_n a_o.
              Foreign.Storable.Storable b_n =>
              (GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o)
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_n #))
               ~#
             (forall b_n a_o.
              Foreign.Storable.Storable b_n =>
              (GHC.Ptr.Ptr b_n -> GHC.Types.IO a_o) -> GHC.Types.IO b_n))

Engine.Graphics.Shaders.checkStatus2 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 90 0}]
Engine.Graphics.Shaders.checkStatus2 =
  GHC.CString.unpackCString# "Error loading shader: "

Engine.Graphics.Shaders.checkStatus4 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 100 0}]
Engine.Graphics.Shaders.checkStatus4 =
  GHC.CString.unpackCString# "Successfully loaded shader: "

Engine.Graphics.Shaders.checkStatus3 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Graphics.Shaders.checkStatus3 =
  GHC.Types.:
    @ GHC.Types.Char
    GHC.Show.$fShowChar1
    (GHC.Types.[] @ GHC.Types.Char)

Engine.Graphics.Shaders.checkStatus1
  :: forall t_XG a_XJ a3_XL a2_XN.
     Graphics.Rendering.OpenGL.Raw.Types.GLenum
     -> (t_XG
         -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
         -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
         -> GHC.Types.IO a_XJ)
     -> (t_XG
         -> Graphics.Rendering.OpenGL.Raw.Types.GLint
         -> GHC.Ptr.Ptr a3_XL
         -> GHC.Ptr.Ptr Foreign.C.Types.CChar
         -> GHC.Types.IO a2_XN)
     -> t_XG
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=DmdType LLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 60 60 0 0] 706 90}]
Engine.Graphics.Shaders.checkStatus1 =
  \ (@ t_XG)
    (@ a_XJ)
    (@ a3_XL)
    (@ a2_XN)
    (statusFlag_abUN :: Graphics.Rendering.OpenGL.Raw.Types.GLenum)
    (glGetFn_abUO
       :: t_XG
          -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
          -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
          -> GHC.Types.IO a_XJ)
    (glInfoLogFn_abUP
       :: t_XG
          -> Graphics.Rendering.OpenGL.Raw.Types.GLint
          -> GHC.Ptr.Ptr a3_XL
          -> GHC.Ptr.Ptr Foreign.C.Types.CChar
          -> GHC.Types.IO a2_XN)
    (idT_abUQ :: t_XG)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.newAlignedPinnedByteArray#
           @ GHC.Prim.RealWorld 4 4 eta_B1
    of _ { (# ipv_acnC, ipv1_acnD #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ GHC.Prim.RealWorld ipv1_acnD ipv_acnC
    of _ { (# ipv2_acnH, ipv3_acnI #) ->
    let {
      a_scok [Dmd=Just L] :: GHC.Prim.Addr#
      [LclId, Str=DmdType]
      a_scok = GHC.Prim.byteArrayContents# ipv3_acnI } in
    case ((glGetFn_abUO
             idT_abUQ
             statusFlag_abUN
             (GHC.Ptr.Ptr @ Graphics.Rendering.OpenGL.Raw.Types.GLint a_scok))
          `cast` (<GHC.Types.NTCo:IO <a_XJ>>
                  :: GHC.Types.IO a_XJ
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_XJ #))))
           ipv2_acnH
    of _ { (# ipv4_a3Ui, _ #) ->
    case GHC.Prim.readInt32OffAddr#
           @ GHC.Prim.RealWorld a_scok 0 ipv4_a3Ui
    of _ { (# ipv6_aco4, ipv7_aco5 #) ->
    case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv3_acnI ipv6_aco4
    of s4_acnP { __DEFAULT ->
    case GHC.Prim.newAlignedPinnedByteArray#
           @ GHC.Prim.RealWorld 4 4 s4_acnP
    of _ { (# ipv8_XcqN, ipv9_XcqP #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ GHC.Prim.RealWorld ipv9_XcqP ipv8_XcqN
    of _ { (# ipv10_XcqW, ipv11_XcqY #) ->
    let {
      a1_XcrC [Dmd=Just L] :: GHC.Prim.Addr#
      [LclId, Str=DmdType]
      a1_XcrC = GHC.Prim.byteArrayContents# ipv11_XcqY } in
    case ((glGetFn_abUO
             idT_abUQ
             (Graphics.Rendering.OpenGL.Raw.Core31.Tokens.gl_INFO_LOG_LENGTH1
              `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                      :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
             (GHC.Ptr.Ptr @ Graphics.Rendering.OpenGL.Raw.Types.GLint a1_XcrC))
          `cast` (<GHC.Types.NTCo:IO <a_XJ>>
                  :: GHC.Types.IO a_XJ
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_XJ #))))
           ipv10_XcqW
    of _ { (# ipv12_X3XD, _ #) ->
    case GHC.Prim.readInt32OffAddr#
           @ GHC.Prim.RealWorld a1_XcrC 0 ipv12_X3XD
    of _ { (# ipv14_Xcrt, ipv15_Xcrv #) ->
    case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv11_XcqY ipv14_Xcrt
    of s1_Xcrh { __DEFAULT ->
    case GHC.Prim.># ipv15_Xcrv 0 of _ {
      GHC.Types.False ->
        (# s1_Xcrh,
           case ipv7_aco5 of _ {
             __DEFAULT -> GHC.Types.True;
             0 -> GHC.Types.False
           } #);
      GHC.Types.True ->
        case GHC.Prim.newAlignedPinnedByteArray#
               @ GHC.Prim.RealWorld (GHC.Prim.+# ipv15_Xcrv 1) 1 s1_Xcrh
        of _ { (# ipv16_acxT, ipv17_acxU #) ->
        case GHC.Prim.unsafeFreezeByteArray#
               @ GHC.Prim.RealWorld ipv17_acxU ipv16_acxT
        of _ { (# ipv18_acxY, ipv19_acxZ #) ->
        let {
          a2_scyj [Dmd=Just L] :: GHC.Prim.Addr#
          [LclId, Str=DmdType]
          a2_scyj = GHC.Prim.byteArrayContents# ipv19_acxZ } in
        case ((glInfoLogFn_abUP
                 idT_abUQ
                 ((GHC.Int.I32# ipv15_Xcrv)
                  `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                          :: GHC.Int.Int32 ~# Foreign.C.Types.CInt))
                 (GHC.Ptr.nullPtr @ a3_XL)
                 (GHC.Ptr.Ptr @ Foreign.C.Types.CChar a2_scyj))
              `cast` (<GHC.Types.NTCo:IO <a2_XN>>
                      :: GHC.Types.IO a2_XN
                           ~#
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a2_XN #))))
               ipv18_acxY
        of _ { (# ipv20_X3Ym, _ #) ->
        case GHC.IO.Encoding.getForeignEncoding1
        of _ { (getForeignEncoding4_acep, setForeignEncoding1_aceq) ->
        case (getForeignEncoding4_acep
              `cast` (<GHC.Types.NTCo:IO <GHC.IO.Encoding.Types.TextEncoding>>
                      :: GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding
                           ~#
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                GHC.IO.Encoding.Types.TextEncoding #))))
               ipv20_X3Ym
        of _ { (# ipv22_acyp, ipv23_acyq #) ->
        case GHC.Foreign.$wa ipv23_acyq a2_scyj ipv22_acyp
        of _ { (# ipv24_X3Yu, ipv25_X3Yw #) ->
        case ipv7_aco5 of _ {
          __DEFAULT ->
            case GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Engine.Graphics.Shaders.checkStatus4
                   GHC.Types.False
                   ipv24_X3Yu
            of _ { (# ipv26_X3WH, _ #) ->
            case GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.$fShowChar1
                      (GHC.Show.showLitString
                         ipv25_X3Yw Engine.Graphics.Shaders.checkStatus3))
                   GHC.Types.True
                   ipv26_X3WH
            of _ { (# ipv28_acy3, _ #) ->
            case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv19_acxZ ipv28_acy3
            of s2_acy6 { __DEFAULT ->
            (# s2_acy6, GHC.Types.True #)
            }
            }
            };
          0 ->
            case GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Engine.Graphics.Shaders.checkStatus2
                   GHC.Types.False
                   ipv24_X3Yu
            of _ { (# ipv26_X3WH, _ #) ->
            case GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.Types.:
                      @ GHC.Types.Char
                      GHC.Show.$fShowChar1
                      (GHC.Show.showLitString
                         ipv25_X3Yw Engine.Graphics.Shaders.checkStatus3))
                   GHC.Types.True
                   ipv26_X3WH
            of _ { (# ipv28_acy3, _ #) ->
            case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv19_acxZ ipv28_acy3
            of s2_acy6 { __DEFAULT ->
            (# s2_acy6, GHC.Types.False #)
            }
            }
            }
        }
        }
        }
        }
        }
        }
        }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Graphics.Shaders.checkStatus_$scheckStatus
  :: forall t_tB a_tD a3_tE a2_tF.
     Graphics.Rendering.OpenGL.Raw.Types.GLenum
     -> (t_tB
         -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
         -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
         -> GHC.Types.IO a_tD)
     -> (t_tB
         -> Graphics.Rendering.OpenGL.Raw.Types.GLint
         -> GHC.Ptr.Ptr a3_tE
         -> GHC.Ptr.Ptr Foreign.C.Types.CChar
         -> GHC.Types.IO a2_tF)
     -> t_tB
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=5,
 Str=DmdType LLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.checkStatus_$scheckStatus =
  Engine.Graphics.Shaders.checkStatus1
  `cast` (forall t_XG a_XJ a3_XL a2_XN.
          <Graphics.Rendering.OpenGL.Raw.Types.GLenum>
          -> <t_XG
              -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
              -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
              -> GHC.Types.IO a_XJ>
          -> <t_XG
              -> Graphics.Rendering.OpenGL.Raw.Types.GLint
              -> GHC.Ptr.Ptr a3_XL
              -> GHC.Ptr.Ptr Foreign.C.Types.CChar
              -> GHC.Types.IO a2_XN>
          -> <t_XG>
          -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
          :: (forall t_XG a_XJ a3_XL a2_XN.
              Graphics.Rendering.OpenGL.Raw.Types.GLenum
              -> (t_XG
                  -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
                  -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
                  -> GHC.Types.IO a_XJ)
              -> (t_XG
                  -> Graphics.Rendering.OpenGL.Raw.Types.GLint
                  -> GHC.Ptr.Ptr a3_XL
                  -> GHC.Ptr.Ptr Foreign.C.Types.CChar
                  -> GHC.Types.IO a2_XN)
              -> t_XG
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
               ~#
             (forall t_XG a_XJ a3_XL a2_XN.
              Graphics.Rendering.OpenGL.Raw.Types.GLenum
              -> (t_XG
                  -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
                  -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
                  -> GHC.Types.IO a_XJ)
              -> (t_XG
                  -> Graphics.Rendering.OpenGL.Raw.Types.GLint
                  -> GHC.Ptr.Ptr a3_XL
                  -> GHC.Ptr.Ptr Foreign.C.Types.CChar
                  -> GHC.Types.IO a2_XN)
              -> t_XG
              -> GHC.Types.IO GHC.Types.Bool))

lvl2_rdyA :: GHC.Integer.Type.Integer
[GblId, Str=DmdType]
lvl2_rdyA = __integer 0

Engine.Graphics.Shaders.checkStatus
  :: forall t_aby9 a1_abya a_abyb a3_abyc a2_abyd.
     (Foreign.Storable.Storable a1_abya, GHC.Num.Num a1_abya,
      GHC.Classes.Eq a1_abya, GHC.Classes.Ord a1_abya,
      GHC.Real.Integral a1_abya) =>
     Graphics.Rendering.OpenGL.Raw.Types.GLenum
     -> (t_aby9
         -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
         -> GHC.Ptr.Ptr a1_abya
         -> GHC.Types.IO a_abyb)
     -> (t_aby9
         -> a1_abya
         -> GHC.Ptr.Ptr a3_abyc
         -> GHC.Ptr.Ptr Foreign.C.Types.CChar
         -> GHC.Types.IO a2_abyd)
     -> t_aby9
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=5, Str=DmdType LLLLL]
Engine.Graphics.Shaders.checkStatus =
  \ (@ t_tB)
    (@ a1_tC)
    (@ a_tD)
    (@ a3_tE)
    (@ a2_tF)
    ($dStorable_abXL :: Foreign.Storable.Storable a1_tC)
    ($dNum_abXM :: GHC.Num.Num a1_tC)
    ($dEq_abXN :: GHC.Classes.Eq a1_tC)
    ($dOrd_abXO :: GHC.Classes.Ord a1_tC)
    ($dIntegral_abXP :: GHC.Real.Integral a1_tC) ->
    let {
      lvl3_Xc6T :: a1_tC -> a1_tC -> GHC.Types.Bool
      [LclId, Str=DmdType]
      lvl3_Xc6T = GHC.Classes./= @ a1_tC $dEq_abXN } in
    let {
      ds_Xc6Q :: a1_tC
      [LclId, Str=DmdType]
      ds_Xc6Q =
        GHC.Num.fromInteger
          @ a1_tC $dNum_abXM Foreign.Marshal.Utils.fromBool3 } in
    let {
      lvl4_scbo :: a1_tC
      [LclId, Str=DmdType]
      lvl4_scbo = GHC.Num.fromInteger @ a1_tC $dNum_abXM lvl2_rdyA } in
    let {
      lvl5_sdsL :: a1_tC -> a1_tC -> GHC.Types.Bool
      [LclId]
      lvl5_sdsL = GHC.Classes.> @ a1_tC $dOrd_abXO } in
    let {
      lvl6_sdsK :: a1_tC -> GHC.Integer.Type.Integer
      [LclId]
      lvl6_sdsK = GHC.Real.toInteger @ a1_tC $dIntegral_abXP } in
    (\ (statusFlag_XbWk :: Graphics.Rendering.OpenGL.Raw.Types.GLenum)
       (glGetFn_XbWm
          :: t_tB
             -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
             -> GHC.Ptr.Ptr a1_tC
             -> GHC.Types.IO a_tD)
       (glInfoLogFn_XbWo
          :: t_tB
             -> a1_tC
             -> GHC.Ptr.Ptr a3_tE
             -> GHC.Ptr.Ptr Foreign.C.Types.CChar
             -> GHC.Types.IO a2_tF)
       (idT_XbWq :: t_tB)
       (s_X3Xi :: GHC.Prim.State# GHC.Prim.RealWorld) ->
       case $dStorable_abXL
       of _
       { Foreign.Storable.D:Storable ww_sdji
                                     ww1_sdjj
                                     ww2_sdjk
                                     ww3_sdjl
                                     ww4_sdjm
                                     ww5_sdjn
                                     ww6_sdjo
                                     ww7_sdjp ->
       case ww_sdji (GHC.Err.undefined @ a1_tC)
       of _ { GHC.Types.I# size_acnu ->
       case ww1_sdjj (GHC.Err.undefined @ a1_tC)
       of _ { GHC.Types.I# align_acny ->
       case GHC.Prim.newAlignedPinnedByteArray#
              @ GHC.Prim.RealWorld size_acnu align_acny s_X3Xi
       of _ { (# ipv_acnC, ipv1_acnD #) ->
       case GHC.Prim.unsafeFreezeByteArray#
              @ GHC.Prim.RealWorld ipv1_acnD ipv_acnC
       of _ { (# ipv2_acnH, ipv3_acnI #) ->
       let {
         a_scok [Dmd=Just L] :: GHC.Prim.Addr#
         [LclId, Str=DmdType]
         a_scok = GHC.Prim.byteArrayContents# ipv3_acnI } in
       let {
         p_abWl :: GHC.Ptr.Ptr a1_tC
         [LclId, Str=DmdType m]
         p_abWl = GHC.Ptr.Ptr @ a1_tC a_scok } in
       case ((glGetFn_XbWm idT_XbWq statusFlag_XbWk p_abWl)
             `cast` (<GHC.Types.NTCo:IO <a_tD>>
                     :: GHC.Types.IO a_tD
                          ~#
                        (GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_tD #))))
              ipv2_acnH
       of _ { (# ipv4_a3Ui, _ #) ->
       case ((ww6_sdjo p_abWl)
             `cast` (<GHC.Types.NTCo:IO <a1_tC>>
                     :: GHC.Types.IO a1_tC
                          ~#
                        (GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a1_tC #))))
              ipv4_a3Ui
       of _ { (# ipv6_acnM, ipv7_acnN #) ->
       case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv3_acnI ipv6_acnM
       of s4_acnP { __DEFAULT ->
       case GHC.Prim.newAlignedPinnedByteArray#
              @ GHC.Prim.RealWorld size_acnu align_acny s4_acnP
       of _ { (# ipv8_XcpL, ipv9_XcpN #) ->
       case GHC.Prim.unsafeFreezeByteArray#
              @ GHC.Prim.RealWorld ipv9_XcpN ipv8_XcpL
       of _ { (# ipv10_XcpU, ipv11_XcpW #) ->
       let {
         a1_XcqA [Dmd=Just L] :: GHC.Prim.Addr#
         [LclId, Str=DmdType]
         a1_XcqA = GHC.Prim.byteArrayContents# ipv11_XcpW } in
       let {
         p1_XbYD :: GHC.Ptr.Ptr a1_tC
         [LclId, Str=DmdType m]
         p1_XbYD = GHC.Ptr.Ptr @ a1_tC a1_XcqA } in
       case ((glGetFn_XbWm
                idT_XbWq
                (Graphics.Rendering.OpenGL.Raw.Core31.Tokens.gl_INFO_LOG_LENGTH1
                 `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                         :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
                p1_XbYD)
             `cast` (<GHC.Types.NTCo:IO <a_tD>>
                     :: GHC.Types.IO a_tD
                          ~#
                        (GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_tD #))))
              ipv10_XcpU
       of _ { (# ipv12_X3WD, _ #) ->
       case ((ww6_sdjo p1_XbYD)
             `cast` (<GHC.Types.NTCo:IO <a1_tC>>
                     :: GHC.Types.IO a1_tC
                          ~#
                        (GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a1_tC #))))
              ipv12_X3WD
       of _ { (# ipv14_Xcqb, ipv15_Xcqd #) ->
       case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv11_XcpW ipv14_Xcqb
       of s1_Xcqh { __DEFAULT ->
       case lvl5_sdsL ipv15_Xcqd lvl4_scbo of _ {
         GHC.Types.False -> (# s1_Xcqh, lvl3_Xc6T ipv7_acnN ds_Xc6Q #);
         GHC.Types.True ->
           case GHC.Integer.Type.integerToInt (lvl6_sdsK ipv15_Xcqd)
           of wild3_a3ta { __DEFAULT ->
           case GHC.Prim.newAlignedPinnedByteArray#
                  @ GHC.Prim.RealWorld (GHC.Prim.+# wild3_a3ta 1) 1 s1_Xcqh
           of _ { (# ipv16_acxT, ipv17_acxU #) ->
           case GHC.Prim.unsafeFreezeByteArray#
                  @ GHC.Prim.RealWorld ipv17_acxU ipv16_acxT
           of _ { (# ipv18_acxY, ipv19_acxZ #) ->
           let {
             a2_sczc [Dmd=Just L] :: GHC.Prim.Addr#
             [LclId, Str=DmdType]
             a2_sczc = GHC.Prim.byteArrayContents# ipv19_acxZ } in
           case ((glInfoLogFn_XbWo
                    idT_XbWq
                    ipv15_Xcqd
                    (GHC.Ptr.nullPtr @ a3_tE)
                    (GHC.Ptr.Ptr @ Foreign.C.Types.CChar a2_sczc))
                 `cast` (<GHC.Types.NTCo:IO <a2_tF>>
                         :: GHC.Types.IO a2_tF
                              ~#
                            (GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, a2_tF #))))
                  ipv18_acxY
           of _ { (# ipv20_X3Y5, _ #) ->
           case GHC.IO.Encoding.getForeignEncoding1
           of _ { (getForeignEncoding4_acep, setForeignEncoding1_aceq) ->
           case (getForeignEncoding4_acep
                 `cast` (<GHC.Types.NTCo:IO <GHC.IO.Encoding.Types.TextEncoding>>
                         :: GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding
                              ~#
                            (GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                   GHC.IO.Encoding.Types.TextEncoding #))))
                  ipv20_X3Y5
           of _ { (# ipv22_acyp, ipv23_acyq #) ->
           case GHC.Foreign.$wa ipv23_acyq a2_sczc ipv22_acyp
           of _ { (# ipv24_X3Yd, ipv25_X3Yf #) ->
           case lvl3_Xc6T ipv7_acnN ds_Xc6Q of _ {
             GHC.Types.False ->
               case GHC.IO.Handle.Text.hPutStr2
                      GHC.IO.Handle.FD.stdout
                      Engine.Graphics.Shaders.checkStatus2
                      GHC.Types.False
                      ipv24_X3Yd
               of _ { (# ipv26_X3Xm, _ #) ->
               case GHC.IO.Handle.Text.hPutStr2
                      GHC.IO.Handle.FD.stdout
                      (GHC.Types.:
                         @ GHC.Types.Char
                         GHC.Show.$fShowChar1
                         (GHC.Show.showLitString
                            ipv25_X3Yf Engine.Graphics.Shaders.checkStatus3))
                      GHC.Types.True
                      ipv26_X3Xm
               of _ { (# ipv28_acy3, _ #) ->
               case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv19_acxZ ipv28_acy3
               of s2_acy6 { __DEFAULT ->
               (# s2_acy6, GHC.Types.False #)
               }
               }
               };
             GHC.Types.True ->
               case GHC.IO.Handle.Text.hPutStr2
                      GHC.IO.Handle.FD.stdout
                      Engine.Graphics.Shaders.checkStatus4
                      GHC.Types.False
                      ipv24_X3Yd
               of _ { (# ipv26_X3Xm, _ #) ->
               case GHC.IO.Handle.Text.hPutStr2
                      GHC.IO.Handle.FD.stdout
                      (GHC.Types.:
                         @ GHC.Types.Char
                         GHC.Show.$fShowChar1
                         (GHC.Show.showLitString
                            ipv25_X3Yf Engine.Graphics.Shaders.checkStatus3))
                      GHC.Types.True
                      ipv26_X3Xm
               of _ { (# ipv28_acy3, _ #) ->
               case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv19_acxZ ipv28_acy3
               of s2_acy6 { __DEFAULT ->
               (# s2_acy6, GHC.Types.True #)
               }
               }
               }
           }
           }
           }
           }
           }
           }
           }
           }
       }
       }
       }
       }
       }
       }
       }
       }
       }
       }
       }
       }
       }
       })
    `cast` (<Graphics.Rendering.OpenGL.Raw.Types.GLenum>
            -> <t_tB
                -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
                -> GHC.Ptr.Ptr a1_tC
                -> GHC.Types.IO a_tD>
            -> <t_tB
                -> a1_tC
                -> GHC.Ptr.Ptr a3_tE
                -> GHC.Ptr.Ptr Foreign.C.Types.CChar
                -> GHC.Types.IO a2_tF>
            -> <t_tB>
            -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
            :: (Graphics.Rendering.OpenGL.Raw.Types.GLenum
                -> (t_tB
                    -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
                    -> GHC.Ptr.Ptr a1_tC
                    -> GHC.Types.IO a_tD)
                -> (t_tB
                    -> a1_tC
                    -> GHC.Ptr.Ptr a3_tE
                    -> GHC.Ptr.Ptr Foreign.C.Types.CChar
                    -> GHC.Types.IO a2_tF)
                -> t_tB
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                 ~#
               (Graphics.Rendering.OpenGL.Raw.Types.GLenum
                -> (t_tB
                    -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
                    -> GHC.Ptr.Ptr a1_tC
                    -> GHC.Types.IO a_tD)
                -> (t_tB
                    -> a1_tC
                    -> GHC.Ptr.Ptr a3_tE
                    -> GHC.Ptr.Ptr Foreign.C.Types.CChar
                    -> GHC.Types.IO a2_tF)
                -> t_tB
                -> GHC.Types.IO GHC.Types.Bool))

Engine.Graphics.Shaders.loadProgram3
  :: Graphics.Rendering.OpenGL.Raw.Types.GLenum
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Graphics.Rendering.OpenGL.Raw.Types.GLuint #)
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 499 30}]
Engine.Graphics.Shaders.loadProgram3 =
  \ (shaderTypeFlag_abSc
       :: Graphics.Rendering.OpenGL.Raw.Types.GLenum)
    (filePath_abSd :: GHC.IO.FilePath)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.FD.openFile1
           filePath_abSd GHC.IO.IOMode.ReadMode eta_B1
    of _ { (# ipv_acBx, ipv1_acBy #) ->
    case GHC.IO.Handle.Text.hGetContents1 ipv1_acBy ipv_acBx
    of _ { (# ipv2_a3Ui, ipv3_a3Uj #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glCreateShader
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt>
                    -> GHC.Types.IO <(Foreign.C.Types.NTCo:CUInt)>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CUInt -> GHC.Types.IO Foreign.C.Types.CUInt)
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO GHC.Word.Word32))
    of _ { GHC.Ptr.FunPtr ds4_aczB ->
    case shaderTypeFlag_abSc
         `cast` (<Foreign.C.Types.NTCo:CUInt>
                 :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
    of _ { GHC.Word.W32# ds6_aczH ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Word# #)}_aczG
           ds4_aczB ds6_aczH ipv2_a3Ui
    of _ { (# ds7_aczL, ds8_aczM #) ->
    case GHC.IO.Encoding.getForeignEncoding1
    of _ { (getForeignEncoding4_acep, setForeignEncoding1_aceq) ->
    case (getForeignEncoding4_acep
          `cast` (<GHC.Types.NTCo:IO <GHC.IO.Encoding.Types.TextEncoding>>
                  :: GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                            GHC.IO.Encoding.Types.TextEncoding #))))
           ds7_aczL
    of _ { (# ipv4_acek, ipv5_acel #) ->
    let {
      a_scLv [Dmd=Just L] :: GHC.Prim.Word#
      [LclId, Str=DmdType]
      a_scLv = GHC.Prim.narrow32Word# ds8_aczM } in
    case GHC.Foreign.charIsRepresentable3
           @ ()
           ipv5_acel
           ipv3_a3Uj
           ((\ (codePtr_abUz :: Foreign.C.String.CString)
               (w_ad8c :: GHC.Prim.State# GHC.Prim.RealWorld) ->
               case GHC.Prim.newAlignedPinnedByteArray#
                      @ GHC.Prim.RealWorld 8 8 w_ad8c
               of _ { (# ipv6_ad8v, ipv7_ad8w #) ->
               case GHC.Prim.unsafeFreezeByteArray#
                      @ GHC.Prim.RealWorld ipv7_ad8w ipv6_ad8v
               of _ { (# ipv8_ad8B, ipv9_ad8C #) ->
               case codePtr_abUz of _ { GHC.Ptr.Ptr x_ad98 ->
               let {
                 a1_ad8A [Dmd=Just L] :: GHC.Prim.Addr#
                 [LclId, Str=DmdType]
                 a1_ad8A = GHC.Prim.byteArrayContents# ipv9_ad8C } in
               case GHC.Prim.writeAddrOffAddr#
                      @ GHC.Prim.RealWorld a1_ad8A 0 x_ad98 ipv8_ad8B
               of s2_ad9a { __DEFAULT ->
               case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glShaderSource
                       @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint
                          -> Graphics.Rendering.OpenGL.Raw.Types.GLsizei
                          -> GHC.Ptr.Ptr
                               (GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLchar)
                          -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLint
                          -> GHC.Types.IO ()))
                    `cast` (GHC.Ptr.FunPtr
                              (<Foreign.C.Types.NTCo:CUInt>
                               -> <Foreign.C.Types.NTCo:CInt>
                               -> GHC.Ptr.Ptr (GHC.Ptr.Ptr <(Foreign.C.Types.NTCo:CChar)>)
                               -> GHC.Ptr.Ptr <(Foreign.C.Types.NTCo:CInt)>
                               -> <GHC.Types.IO ()>)
                            :: GHC.Ptr.FunPtr
                                 (Foreign.C.Types.CUInt
                                  -> Foreign.C.Types.CInt
                                  -> GHC.Ptr.Ptr (GHC.Ptr.Ptr Foreign.C.Types.CChar)
                                  -> GHC.Ptr.Ptr Foreign.C.Types.CInt
                                  -> GHC.Types.IO ())
                                 ~#
                               GHC.Ptr.FunPtr
                                 (GHC.Word.Word32
                                  -> GHC.Int.Int32
                                  -> GHC.Ptr.Ptr (GHC.Ptr.Ptr GHC.Int.Int8)
                                  -> GHC.Ptr.Ptr GHC.Int.Int32
                                  -> GHC.Types.IO ()))
               of _ { GHC.Ptr.FunPtr ds13_acM4 ->
               case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.Addr#
                -> GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acMl
                      ds13_acM4 a_scLv 1 a1_ad8A __NULL s2_ad9a
               of _ { (# ds16_acMq #) ->
               case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv9_ad8C ds16_acMq
               of s4_ad8P { __DEFAULT ->
               (# s4_ad8P, GHC.Tuple.() #)
               }
               }
               }
               }
               }
               }
               })
            `cast` (<Foreign.C.String.CString>
                    -> Sym <(GHC.Types.NTCo:IO <()>)>
                    :: (Foreign.C.String.CString
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                         ~#
                       (Foreign.C.String.CString -> GHC.Types.IO ())))
           ipv4_acek
    of _ { (# ipv6_X3XL, _ #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glCompileShader
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds12_acLG ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acLL
           ds12_acLG a_scLv ipv6_X3XL
    of _ { (# ds13_acLQ #) ->
    let {
      a1_scLw :: GHC.Word.Word32
      [LclId, Str=DmdType m]
      a1_scLw = GHC.Word.W32# a_scLv } in
    case Engine.Graphics.Shaders.checkStatus1
           @ Foreign.C.Types.CUInt
           @ ()
           @ Foreign.C.Types.CInt
           @ ()
           (Graphics.Rendering.OpenGL.Raw.Core31.Tokens.gl_COMPILE_STATUS1
            `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                    :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
           Graphics.Rendering.OpenGL.Raw.Core31.Functions.glGetShaderiv
           Graphics.Rendering.OpenGL.Raw.Core31.Functions.glGetShaderInfoLog
           (a1_scLw
            `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                    :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
           ds13_acLQ
    of _ { (# ipv8_X3Xx, _ #) ->
    (# ipv8_X3Xx,
       a1_scLw
       `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
               :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt) #)
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Graphics.Shaders.loadShader
  :: Graphics.Rendering.OpenGL.Raw.Types.GLenum
     -> GHC.IO.FilePath
     -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.loadShader =
  Engine.Graphics.Shaders.loadProgram3
  `cast` (<Graphics.Rendering.OpenGL.Raw.Types.GLenum>
          -> <GHC.IO.FilePath>
          -> Sym
               <(GHC.Types.NTCo:IO <Graphics.Rendering.OpenGL.Raw.Types.GLuint>)>
          :: (Graphics.Rendering.OpenGL.Raw.Types.GLenum
              -> GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint #))
               ~#
             (Graphics.Rendering.OpenGL.Raw.Types.GLenum
              -> GHC.IO.FilePath
              -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint))

Rec {
Engine.Graphics.Shaders.loadProgram2 [Occ=LoopBreaker]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Graphics.Shaders.loadProgram2 =
  \ (ds_X3s8 :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_X3s8 of _ {
      [] -> (# eta_B1, GHC.Tuple.() #);
      : y_a3qv ys_a3qw ->
        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glDeleteShader
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds3_ad9M ->
        case y_a3qv
             `cast` (<Foreign.C.Types.NTCo:CUInt>
                     :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
        of _ { GHC.Word.W32# ds5_ad9S ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_ad9R
               ds3_ad9M ds5_ad9S eta_B1
        of _ { (# ds7_ad9W #) ->
        Engine.Graphics.Shaders.loadProgram2 ys_a3qw ds7_ad9W
        }
        }
        }
    }
end Rec }

Engine.Graphics.Shaders.loadProgram1
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Graphics.Rendering.OpenGL.Raw.Types.GLuint #)
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 471 30}]
Engine.Graphics.Shaders.loadProgram1 =
  \ (vertFP_abye :: GHC.IO.FilePath)
    (fragFP_abyf :: GHC.IO.FilePath)
    (s_X3X1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Graphics.Shaders.loadProgram3
           (Graphics.Rendering.OpenGL.Raw.Core31.Tokens.gl_VERTEX_SHADER1
            `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                    :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
           vertFP_abye
           s_X3X1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Engine.Graphics.Shaders.loadProgram3
           (Graphics.Rendering.OpenGL.Raw.Core31.Tokens.gl_FRAGMENT_SHADER1
            `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                    :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
           fragFP_abyf
           ipv_a3Ui
    of _ { (# ipv2_X3Vz, ipv3_X3VB #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glCreateProgram
            @ (GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint))
         `cast` (GHC.Ptr.FunPtr
                   (GHC.Types.IO <(Foreign.C.Types.NTCo:CUInt)>)
                 :: GHC.Ptr.FunPtr (GHC.Types.IO Foreign.C.Types.CUInt)
                      ~#
                    GHC.Ptr.FunPtr (GHC.Types.IO GHC.Word.Word32))
    of _ { GHC.Ptr.FunPtr ds3_acMJ ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Word# #)}_acMI
           ds3_acMJ ipv2_X3Vz
    of _ { (# ds4_acMN, ds5_acMO #) ->
    let {
      a_scMU [Dmd=Just L] :: GHC.Prim.Word#
      [LclId, Str=DmdType]
      a_scMU = GHC.Prim.narrow32Word# ds5_acMO } in
    let {
      a1_sd9r :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
      [LclId, Str=DmdType]
      a1_sd9r =
        GHC.Types.:
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
          ipv3_X3VB
          (GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLuint) } in
    let {
      ipv4_X3VI :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
      [LclId, Str=DmdType]
      ipv4_X3VI =
        GHC.Types.:
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint ipv1_a3Uj a1_sd9r } in
    letrec {
      a2_sdd1 [Occ=LoopBreaker]
        :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
           -> GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=2, Str=DmdType SL]
      a2_sdd1 =
        \ (ds6_a3qq :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint])
          (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case ds6_a3qq of _ {
            [] -> (# eta_B1, GHC.Tuple.() #);
            : y_a3qv ys_a3qw ->
              case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glAttachShader
                      @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint
                         -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
                   `cast` (GHC.Ptr.FunPtr
                             (<Foreign.C.Types.NTCo:CUInt>
                              -> <Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                           :: GHC.Ptr.FunPtr
                                (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt -> GHC.Types.IO ())
                                ~#
                              GHC.Ptr.FunPtr
                                (GHC.Word.Word32 -> GHC.Word.Word32 -> GHC.Types.IO ()))
              of _ { GHC.Ptr.FunPtr ds8_acNr ->
              case y_a3qv
                   `cast` (<Foreign.C.Types.NTCo:CUInt>
                           :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
              of _ { GHC.Word.W32# ds10_acNB ->
              case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acNA
                     ds8_acNr a_scMU ds10_acNB eta_B1
              of _ { (# ds11_acNF #) ->
              a2_sdd1 ys_a3qw ds11_acNF
              }
              }
              }
          }; } in
    case a2_sdd1 ipv4_X3VI ds4_acMN of _ { (# ipv5_X3Xs, _ #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glLinkProgram
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds8_acN5 ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acNa
           ds8_acN5 a_scMU ipv5_X3Xs
    of _ { (# ds9_acNf #) ->
    case Engine.Graphics.Shaders.loadProgram2 ipv4_X3VI ds9_acNf
    of _ { (# ipv7_X3Xo, _ #) ->
    (# ipv7_X3Xo,
       (GHC.Word.W32# a_scMU)
       `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
               :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt) #)
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Graphics.Shaders.loadProgram
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.loadProgram =
  Engine.Graphics.Shaders.loadProgram1
  `cast` (<GHC.IO.FilePath>
          -> <GHC.IO.FilePath>
          -> Sym
               <(GHC.Types.NTCo:IO <Graphics.Rendering.OpenGL.Raw.Types.GLuint>)>
          :: (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint #))
               ~#
             (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint))

Rec {
Engine.Graphics.Shaders.bindUniforms1 [Occ=LoopBreaker]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> [Engine.Graphics.Shaders.ShaderUniform]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=DmdType LSL]
Engine.Graphics.Shaders.bindUniforms1 =
  \ (shader_abVX :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (ds_dc0R :: [Engine.Graphics.Shaders.ShaderUniform])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_dc0R of _ {
      [] -> (# eta_B1, GHC.Tuple.() #);
      : ds1_dc0S xs_abW0 ->
        case ds1_dc0S of _ { (name_abVY, valsIo_abVZ) ->
        case (valsIo_abVZ
              `cast` (<GHC.Types.NTCo:IO
                         <[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>>
                      :: GHC.Types.IO [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                           ~#
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #))))
               eta_B1
        of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
        case GHC.IO.Encoding.getForeignEncoding1
        of _ { (getForeignEncoding4_acep, setForeignEncoding1_aceq) ->
        case (getForeignEncoding4_acep
              `cast` (<GHC.Types.NTCo:IO <GHC.IO.Encoding.Types.TextEncoding>>
                      :: GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding
                           ~#
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                GHC.IO.Encoding.Types.TextEncoding #))))
               ipv_a3Ui
        of _ { (# ipv2_acek, ipv3_acel #) ->
        case GHC.Foreign.charIsRepresentable3
               @ Graphics.Rendering.OpenGL.Raw.Types.GLint
               ipv3_acel
               name_abVY
               (Graphics.Rendering.OpenGL.Raw.Core31.Functions.dyn_glGetUniformLocation
                  (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glGetUniformLocation
                     @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint
                        -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLchar
                        -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLint))
                  shader_abVX)
               ipv2_acek
        of _ { (# ipv4_X3Y4, ipv5_X3Y6 #) ->
        case GHC.List.$wlen
               @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat ipv1_a3Uj 0
        of ww_adam {
          __DEFAULT ->
            case GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.CString.unpackAppendCString#
                      "Bad length value in ShaderUniform "
                      (GHC.Base.++
                         @ GHC.Types.Char
                         name_abVY
                         (GHC.CString.unpackAppendCString#
                            ": "
                            (GHC.Show.$wshowSignedInt
                               0 ww_adam (GHC.Types.[] @ GHC.Types.Char)))))
                   GHC.Types.True
                   ipv4_X3Y4
            of _ { (# ipv6_X3Ye, _ #) ->
            Engine.Graphics.Shaders.bindUniforms1 shader_abVX xs_abW0 ipv6_X3Ye
            };
          1 ->
            case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glUniform1f
                    @ (Graphics.Rendering.OpenGL.Raw.Types.GLint
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat -> GHC.Types.IO ()))
                 `cast` (GHC.Ptr.FunPtr
                           (<Foreign.C.Types.NTCo:CInt>
                            -> <Foreign.C.Types.NTCo:CFloat> -> <GHC.Types.IO ()>)
                         :: GHC.Ptr.FunPtr
                              (Foreign.C.Types.CInt -> Foreign.C.Types.CFloat -> GHC.Types.IO ())
                              ~#
                            GHC.Ptr.FunPtr
                              (GHC.Int.Int32 -> GHC.Types.Float -> GHC.Types.IO ()))
            of _ { GHC.Ptr.FunPtr ds6_acOv ->
            case ipv5_X3Y6
                 `cast` (<Foreign.C.Types.NTCo:CInt>
                         :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
            of _ { GHC.Int.I32# ds8_acOz ->
            case ipv1_a3Uj of _ {
              [] -> case GHC.List.badHead of wild4_00 { };
              : x_ac7a ds9_ac7b ->
                case x_ac7a
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds11_acOF ->
                case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Int#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acOE
                       ds6_acOv ds8_acOz ds11_acOF ipv4_X3Y4
                of _ { (# ds12_acOJ #) ->
                Engine.Graphics.Shaders.bindUniforms1 shader_abVX xs_abW0 ds12_acOJ
                }
                }
            }
            }
            };
          2 ->
            case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glUniform2f
                    @ (Graphics.Rendering.OpenGL.Raw.Types.GLint
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> GHC.Types.IO ()))
                 `cast` (GHC.Ptr.FunPtr
                           (<Foreign.C.Types.NTCo:CInt>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <GHC.Types.IO ()>)
                         :: GHC.Ptr.FunPtr
                              (Foreign.C.Types.CInt
                               -> Foreign.C.Types.CFloat
                               -> Foreign.C.Types.CFloat
                               -> GHC.Types.IO ())
                              ~#
                            GHC.Ptr.FunPtr
                              (GHC.Int.Int32
                               -> GHC.Types.Float -> GHC.Types.Float -> GHC.Types.IO ()))
            of _ { GHC.Ptr.FunPtr ds6_acOV ->
            case ipv5_X3Y6
                 `cast` (<Foreign.C.Types.NTCo:CInt>
                         :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
            of _ { GHC.Int.I32# ds8_acOZ ->
            case ipv1_a3Uj of wild3_ac76 {
              [] -> case GHC.List.badHead of wild4_00 { };
              : x_ac7a ds9_ac7b ->
                case x_ac7a
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds11_acP3 ->
                case (GHC.List.!!_sub
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild3_ac76 1)
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds13_acP9 ->
                case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Int#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acP8
                       ds6_acOV ds8_acOZ ds11_acP3 ds13_acP9 ipv4_X3Y4
                of _ { (# ds14_acPd #) ->
                Engine.Graphics.Shaders.bindUniforms1 shader_abVX xs_abW0 ds14_acPd
                }
                }
                }
            }
            }
            };
          3 ->
            case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glUniform3f
                    @ (Graphics.Rendering.OpenGL.Raw.Types.GLint
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> GHC.Types.IO ()))
                 `cast` (GHC.Ptr.FunPtr
                           (<Foreign.C.Types.NTCo:CInt>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <GHC.Types.IO ()>)
                         :: GHC.Ptr.FunPtr
                              (Foreign.C.Types.CInt
                               -> Foreign.C.Types.CFloat
                               -> Foreign.C.Types.CFloat
                               -> Foreign.C.Types.CFloat
                               -> GHC.Types.IO ())
                              ~#
                            GHC.Ptr.FunPtr
                              (GHC.Int.Int32
                               -> GHC.Types.Float
                               -> GHC.Types.Float
                               -> GHC.Types.Float
                               -> GHC.Types.IO ()))
            of _ { GHC.Ptr.FunPtr ds6_acPr ->
            case ipv5_X3Y6
                 `cast` (<Foreign.C.Types.NTCo:CInt>
                         :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
            of _ { GHC.Int.I32# ds8_acPv ->
            case ipv1_a3Uj of wild3_ac76 {
              [] -> case GHC.List.badHead of wild4_00 { };
              : x_ac7a ds9_ac7b ->
                case x_ac7a
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds11_acPz ->
                case (GHC.List.!!_sub
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild3_ac76 1)
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds13_acPD ->
                case (GHC.List.!!_sub
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild3_ac76 2)
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds15_acPJ ->
                case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Int#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acPI
                       ds6_acPr ds8_acPv ds11_acPz ds13_acPD ds15_acPJ ipv4_X3Y4
                of _ { (# ds16_acPN #) ->
                Engine.Graphics.Shaders.bindUniforms1 shader_abVX xs_abW0 ds16_acPN
                }
                }
                }
                }
            }
            }
            };
          4 ->
            case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glUniform4f
                    @ (Graphics.Rendering.OpenGL.Raw.Types.GLint
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> GHC.Types.IO ()))
                 `cast` (GHC.Ptr.FunPtr
                           (<Foreign.C.Types.NTCo:CInt>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <Foreign.C.Types.NTCo:CFloat>
                            -> <GHC.Types.IO ()>)
                         :: GHC.Ptr.FunPtr
                              (Foreign.C.Types.CInt
                               -> Foreign.C.Types.CFloat
                               -> Foreign.C.Types.CFloat
                               -> Foreign.C.Types.CFloat
                               -> Foreign.C.Types.CFloat
                               -> GHC.Types.IO ())
                              ~#
                            GHC.Ptr.FunPtr
                              (GHC.Int.Int32
                               -> GHC.Types.Float
                               -> GHC.Types.Float
                               -> GHC.Types.Float
                               -> GHC.Types.Float
                               -> GHC.Types.IO ()))
            of _ { GHC.Ptr.FunPtr ds7_acQ3 ->
            case ipv5_X3Y6
                 `cast` (<Foreign.C.Types.NTCo:CInt>
                         :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
            of _ { GHC.Int.I32# ds9_acQ7 ->
            case ipv1_a3Uj of wild3_ac76 {
              [] -> case GHC.List.badHead of wild4_00 { };
              : x_ac7a ds5_ac7b ->
                case x_ac7a
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds11_acQb ->
                case (GHC.List.!!_sub
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild3_ac76 1)
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds13_acQf ->
                case (GHC.List.!!_sub
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild3_ac76 2)
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds15_acQj ->
                case (GHC.List.!!_sub
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild3_ac76 3)
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# ds17_acQp ->
                case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Int#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_acQo
                       ds7_acQ3 ds9_acQ7 ds11_acQb ds13_acQf ds15_acQj ds17_acQp ipv4_X3Y4
                of _ { (# ds19_acQt #) ->
                Engine.Graphics.Shaders.bindUniforms1 shader_abVX xs_abW0 ds19_acQt
                }
                }
                }
                }
                }
            }
            }
            }
        }
        }
        }
        }
        }
        }
    }
end Rec }

Engine.Graphics.Shaders.bindUniforms
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> [Engine.Graphics.Shaders.ShaderUniform] -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Shaders.bindUniforms =
  Engine.Graphics.Shaders.bindUniforms1
  `cast` (<Graphics.Rendering.OpenGL.Raw.Types.GLuint>
          -> <[Engine.Graphics.Shaders.ShaderUniform]>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> [Engine.Graphics.Shaders.ShaderUniform]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> [Engine.Graphics.Shaders.ShaderUniform] -> GHC.Types.IO ()))


------ Local rules for imported ids --------
"SPEC Engine.Graphics.Shaders.withNewPtr [Graphics.Rendering.OpenGL.Raw.Types.GLint]" [ALWAYS]
    forall (@ a_o)
           ($dStorable_scaT
              :: Foreign.Storable.Storable
                   Graphics.Rendering.OpenGL.Raw.Types.GLint).
      Engine.Graphics.Shaders.withNewPtr @ Graphics.Rendering.OpenGL.Raw.Types.GLint
                                         @ a_o
                                         $dStorable_scaT
      = Engine.Graphics.Shaders.withNewPtr_$swithNewPtr @ a_o
"SPEC Engine.Graphics.Shaders.checkStatus [Graphics.Rendering.OpenGL.Raw.Types.GLint]" [ALWAYS]
    forall (@ t_tB)
           (@ a_tD)
           (@ a3_tE)
           (@ a2_tF)
           ($dStorable_scbi
              :: Foreign.Storable.Storable
                   Graphics.Rendering.OpenGL.Raw.Types.GLint)
           ($dNum_scbj
              :: GHC.Num.Num Graphics.Rendering.OpenGL.Raw.Types.GLint)
           ($dEq_scbk
              :: GHC.Classes.Eq Graphics.Rendering.OpenGL.Raw.Types.GLint)
           ($dOrd_scbl
              :: GHC.Classes.Ord Graphics.Rendering.OpenGL.Raw.Types.GLint)
           ($dIntegral_scbm
              :: GHC.Real.Integral Graphics.Rendering.OpenGL.Raw.Types.GLint).
      Engine.Graphics.Shaders.checkStatus @ t_tB
                                          @ Graphics.Rendering.OpenGL.Raw.Types.GLint
                                          @ a_tD
                                          @ a3_tE
                                          @ a2_tF
                                          $dStorable_scbi
                                          $dNum_scbj
                                          $dEq_scbk
                                          $dOrd_scbl
                                          $dIntegral_scbm
      = Engine.Graphics.Shaders.checkStatus_$scheckStatus
          @ t_tB @ a_tD @ a3_tE @ a2_tF


[ 5 of 17] Compiling Engine.Core.Util ( Engine/Core/Util.hs, Engine/Core/Util.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 185, types: 253, coercions: 45}

Engine.Core.Util.toRadians_$stoRadians
  :: GHC.Types.Float -> GHC.Types.Float
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (eta_B1 [Occ=Once!] :: GHC.Types.Float) ->
                 case eta_B1 of _ { GHC.Types.F# x_a3Uw [Occ=Once] ->
                 GHC.Types.F# (GHC.Prim.timesFloat# x_a3Uw (__float 1.7453292e-2))
                 }}]
Engine.Core.Util.toRadians_$stoRadians =
  \ (eta_B1 :: GHC.Types.Float) ->
    case eta_B1 of _ { GHC.Types.F# x_a3Uw ->
    GHC.Types.F# (GHC.Prim.timesFloat# x_a3Uw (__float 1.7453292e-2))
    }

Engine.Core.Util.toRadians1 :: GHC.Integer.Type.Integer
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
Engine.Core.Util.toRadians1 = __integer 180

Engine.Core.Util.$wtoRadians
  :: forall a_aezU.
     GHC.Real.Fractional a_aezU =>
     a_aezU -> a_aezU -> a_aezU
[GblId,
 Arity=3,
 Str=DmdType SLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [20 0 0] 100 0}]
Engine.Core.Util.$wtoRadians =
  \ (@ a_aezU)
    (ww_seGi :: GHC.Real.Fractional a_aezU)
    (ww1_seGj :: a_aezU)
    (w_seGC :: a_aezU) ->
    case ww_seGi
    of _ { GHC.Real.D:Fractional ww2_seG0 ww3_seG1 ww4_seG2 ww5_seG3 ->
    case ww2_seG0
    of _
    { GHC.Num.D:Num ww6_seG6
                    ww7_seG7
                    ww8_seG8
                    ww9_seG9
                    ww10_seGa
                    ww11_seGb
                    ww12_seGc ->
    ww7_seG7
      w_seGC (ww3_seG1 ww1_seGj (ww12_seGc Engine.Core.Util.toRadians1))
    }
    }

Engine.Core.Util.toRadians [InlPrag=INLINE[0]]
  :: forall a_aezU. GHC.Float.Floating a_aezU => a_aezU -> a_aezU
[GblId,
 Arity=2,
 Str=DmdType U(SLAAAAAAAAAAAAAAAAA)L,
 Unf=Unf{Src=Worker=Engine.Core.Util.$wtoRadians, TopLvl=True,
         Arity=2, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_aezU)
                 (w_seGg [Occ=Once!] :: GHC.Float.Floating a_aezU)
                 (w1_seGC [Occ=Once] :: a_aezU) ->
                 case w_seGg
                 of _
                 { GHC.Float.D:Floating ww_seGi [Occ=Once]
                                        ww1_seGj [Occ=Once]
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _
                                        _ ->
                 Engine.Core.Util.$wtoRadians @ a_aezU ww_seGi ww1_seGj w1_seGC
                 }}]
Engine.Core.Util.toRadians =
  \ (@ a_aezU)
    (w_seGg :: GHC.Float.Floating a_aezU)
    (w1_seGC :: a_aezU) ->
    case w_seGg
    of _
    { GHC.Float.D:Floating ww_seGi
                           ww1_seGj
                           ww2_seGk
                           ww3_seGl
                           ww4_seGm
                           ww5_seGn
                           ww6_seGo
                           ww7_seGp
                           ww8_seGq
                           ww9_seGr
                           ww10_seGs
                           ww11_seGt
                           ww12_seGu
                           ww13_seGv
                           ww14_seGw
                           ww15_seGx
                           ww16_seGy
                           ww17_seGz
                           ww18_seGA ->
    Engine.Core.Util.$wtoRadians @ a_aezU ww_seGi ww1_seGj w1_seGC
    }

Engine.Core.Util.$wa
  :: GHC.Prim.Int#
     -> GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 81 30}]
Engine.Core.Util.$wa =
  \ (ww_seGJ :: GHC.Prim.Int#)
    (ww1_seGN :: GHC.Prim.Addr#)
    (w_seGP :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glBufferData
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLsizeiptr
               -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat
               -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CPtrdiff>
                    -> <GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
                    -> <Foreign.C.Types.NTCo:CUInt>
                    -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CPtrdiff
                       -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> Foreign.C.Types.CUInt
                       -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Word.Word32
                       -> GHC.Int.Int64
                       -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       -> GHC.Word.Word32
                       -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds6_aeCU ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aeDt
           ds6_aeCU
           (__word 34962)
           (GHC.Prim.*# ww_seGJ 4)
           ww1_seGN
           (__word 35044)
           w_seGP
    of _ { (# ds16_aeDg #) ->
    (# ds16_aeDg, GHC.Tuple.() #)
    }
    }

Engine.Core.Util.fillNewBuffer2 [InlPrag=INLINE[0]]
  :: GHC.Types.Int
     -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=DmdType U(L)U(L)L,
 Unf=Unf{Src=Worker=Engine.Core.Util.$wa, TopLvl=True, Arity=3,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_seGH [Occ=Once!] :: GHC.Types.Int)
                 (w1_seGL [Occ=Once!]
                    :: GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (w2_seGP [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_seGH of _ { GHC.Types.I# ww_seGJ [Occ=Once] ->
                 case w1_seGL of _ { GHC.Ptr.Ptr ww1_seGN [Occ=Once] ->
                 Engine.Core.Util.$wa ww_seGJ ww1_seGN w2_seGP
                 }
                 }}]
Engine.Core.Util.fillNewBuffer2 =
  \ (w_seGH :: GHC.Types.Int)
    (w1_seGL
       :: GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (w2_seGP :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_seGH of _ { GHC.Types.I# ww_seGJ ->
    case w1_seGL of _ { GHC.Ptr.Ptr ww1_seGN ->
    Engine.Core.Util.$wa ww_seGJ ww1_seGN w2_seGP
    }
    }

Engine.Core.Util.fillNewBuffer1
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Graphics.Rendering.OpenGL.Raw.Types.GLuint #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 198 30}]
Engine.Core.Util.fillNewBuffer1 =
  \ (list_aezV :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.newAlignedPinnedByteArray#
           @ GHC.Prim.RealWorld 4 4 eta_B1
    of _ { (# ipv_acnC, ipv1_acnD #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ GHC.Prim.RealWorld ipv1_acnD ipv_acnC
    of _ { (# ipv2_acnH, ipv3_acnI #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glGenBuffers
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLsizei
               -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLuint
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CInt>
                    -> GHC.Ptr.Ptr <(Foreign.C.Types.NTCo:CUInt)> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CInt
                       -> GHC.Ptr.Ptr Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Int.Int32 -> GHC.Ptr.Ptr GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds4_aeCt ->
    let {
      a_scok [Dmd=Just L] :: GHC.Prim.Addr#
      [LclId, Str=DmdType]
      a_scok = GHC.Prim.byteArrayContents# ipv3_acnI } in
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Int#
                -> GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aeCC
           ds4_aeCt 1 a_scok ipv2_acnH
    of _ { (# ds10_aeCH #) ->
    case GHC.Prim.readWord32OffAddr#
           @ GHC.Prim.RealWorld a_scok 0 ds10_aeCH
    of _ { (# ipv4_aeEU, ipv5_aeEV #) ->
    case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv3_acnI ipv4_aeEU
    of s4_acnP { __DEFAULT ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glBindBuffer
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Word.Word32 -> GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds7_acjT ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_ack2
           ds7_acjT (__word 34962) ipv5_aeEV s4_acnP
    of _ { (# ds8_ack7 #) ->
    case ((Foreign.Marshal.Array.withArrayLen
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             @ ()
             Foreign.C.Types.$fStorableCFloat
             list_aezV
             (Engine.Core.Util.fillNewBuffer2
              `cast` (<GHC.Types.Int>
                      -> <GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
                      -> Sym <(GHC.Types.NTCo:IO <()>)>
                      :: (GHC.Types.Int
                          -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                           ~#
                         (GHC.Types.Int
                          -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                          -> GHC.Types.IO ()))))
          `cast` (<GHC.Types.NTCo:IO <()>>
                  :: GHC.Types.IO ()
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))))
           ds8_ack7
    of _ { (# ipv6_X3V7, _ #) ->
    (# ipv6_X3V7,
       (GHC.Word.W32# ipv5_aeEV)
       `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
               :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt) #)
    }
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Core.Util.fillNewBuffer
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.Util.fillNewBuffer =
  Engine.Core.Util.fillNewBuffer1
  `cast` (<[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>
          -> Sym
               <(GHC.Types.NTCo:IO <Graphics.Rendering.OpenGL.Raw.Types.GLuint>)>
          :: ([Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint #))
               ~#
             ([Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
              -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint))

Engine.Core.Util.cosDeg :: GHC.Types.Float -> GHC.Types.Float
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a3uM [Occ=Once!] :: GHC.Types.Float) ->
                 case x_a3uM of _ { GHC.Types.F# x1_a3Uw [Occ=Once] ->
                 GHC.Types.F#
                   (GHC.Prim.cosFloat#
                      (GHC.Prim.timesFloat# x1_a3Uw (__float 1.7453292e-2)))
                 }}]
Engine.Core.Util.cosDeg =
  \ (x_a3uM :: GHC.Types.Float) ->
    case x_a3uM of _ { GHC.Types.F# x1_a3Uw ->
    GHC.Types.F#
      (GHC.Prim.cosFloat#
         (GHC.Prim.timesFloat# x1_a3Uw (__float 1.7453292e-2)))
    }

Engine.Core.Util.sinDeg :: GHC.Types.Float -> GHC.Types.Float
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a3uM [Occ=Once!] :: GHC.Types.Float) ->
                 case x_a3uM of _ { GHC.Types.F# x1_a3Uw [Occ=Once] ->
                 GHC.Types.F#
                   (GHC.Prim.sinFloat#
                      (GHC.Prim.timesFloat# x1_a3Uw (__float 1.7453292e-2)))
                 }}]
Engine.Core.Util.sinDeg =
  \ (x_a3uM :: GHC.Types.Float) ->
    case x_a3uM of _ { GHC.Types.F# x1_a3Uw ->
    GHC.Types.F#
      (GHC.Prim.sinFloat#
         (GHC.Prim.timesFloat# x1_a3Uw (__float 1.7453292e-2)))
    }


------ Local rules for imported ids --------
"SPEC Engine.Core.Util.toRadians [GHC.Types.Float]" [ALWAYS]
    forall ($dFloating_seBX :: GHC.Float.Floating GHC.Types.Float).
      Engine.Core.Util.toRadians @ GHC.Types.Float $dFloating_seBX
      = Engine.Core.Util.toRadians_$stoRadians


[ 6 of 17] Compiling Engine.Model.AABB ( Engine/Model/AABB.hs, Engine/Model/AABB.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 1,452, types: 1,97, coercions: 208}

Rec {
Engine.Model.AABB.getXs [Occ=LoopBreaker]
  :: forall a_aeSU. [a_aeSU] -> [a_aeSU]
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType S]
Engine.Model.AABB.getXs =
  \ (@ a_q) (ds_deYv :: [a_q]) ->
    case ds_deYv of _ {
      [] -> GHC.Types.[] @ a_q;
      : x_aeVD ds1_deYw ->
        case ds1_deYw of _ {
          [] -> GHC.Types.[] @ a_q;
          : ds2_deYx ds3_deYy ->
            case ds3_deYy of _ {
              [] -> GHC.Types.[] @ a_q;
              : ds4_deYz rest_aeVE ->
                GHC.Types.: @ a_q x_aeVD (Engine.Model.AABB.getXs @ a_q rest_aeVE)
            }
        }
    }
end Rec }

Rec {
Engine.Model.AABB.getYs [Occ=LoopBreaker]
  :: forall a_aeST. [a_aeST] -> [a_aeST]
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType S]
Engine.Model.AABB.getYs =
  \ (@ a_o) (ds_deYl :: [a_o]) ->
    case ds_deYl of _ {
      [] -> GHC.Types.[] @ a_o;
      : ds1_deYm ds2_deYn ->
        case ds2_deYn of _ {
          [] -> GHC.Types.[] @ a_o;
          : y_aeVF ds3_deYo ->
            case ds3_deYo of _ {
              [] -> GHC.Types.[] @ a_o;
              : ds4_deYp rest_aeVG ->
                GHC.Types.: @ a_o y_aeVF (Engine.Model.AABB.getYs @ a_o rest_aeVG)
            }
        }
    }
end Rec }

Rec {
Engine.Model.AABB.getZs [Occ=LoopBreaker]
  :: forall a_aeSS. [a_aeSS] -> [a_aeSS]
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType S]
Engine.Model.AABB.getZs =
  \ (@ a_m) (ds_deYb :: [a_m]) ->
    case ds_deYb of _ {
      [] -> GHC.Types.[] @ a_m;
      : ds1_deYc ds2_deYd ->
        case ds2_deYd of _ {
          [] -> GHC.Types.[] @ a_m;
          : ds3_deYe ds4_deYf ->
            case ds4_deYf of _ {
              [] -> GHC.Types.[] @ a_m;
              : z_aeVH rest_aeVI ->
                GHC.Types.: @ a_m z_aeVH (Engine.Model.AABB.getZs @ a_m rest_aeVI)
            }
        }
    }
end Rec }

Engine.Model.AABB.max3_$smax3 [InlPrag=INLINE (sat-args=3)]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(L)U(L)U(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (eta_B3 [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (eta1_B2 [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (eta2_B1 [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 Foreign.C.Types.$fOrdCFloat_$cmax
                   eta2_B1 (Foreign.C.Types.$fOrdCFloat_$cmax eta_B3 eta1_B2)}]
Engine.Model.AABB.max3_$smax3 =
  \ (eta_B3 :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (eta1_B2 :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (eta2_B1 :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case eta2_B1
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of wild_af5R { GHC.Types.F# x1_af5T ->
    case eta_B3
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of wild1_Xf7j { GHC.Types.F# x2_Xf7m ->
    case eta1_B2
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of wild2_af5V { GHC.Types.F# y1_af5X ->
    case GHC.Prim.leFloat# x2_Xf7m y1_af5X of _ {
      GHC.Types.False ->
        case GHC.Prim.leFloat# x1_af5T x2_Xf7m of _ {
          GHC.Types.False ->
            wild_af5R
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat);
          GHC.Types.True ->
            wild1_Xf7j
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
        };
      GHC.Types.True ->
        case GHC.Prim.leFloat# x1_af5T y1_af5X of _ {
          GHC.Types.False ->
            wild_af5R
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat);
          GHC.Types.True ->
            wild2_af5V
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
        }
    }
    }
    }
    }

Engine.Model.AABB.max3 [InlPrag=INLINE (sat-args=3)]
  :: forall a_aeSQ.
     GHC.Classes.Ord a_aeSQ =>
     a_aeSQ -> a_aeSQ -> a_aeSQ -> a_aeSQ
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=DmdType U(AAAAAASA)LLL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_h)
                 ($dOrd_aeVX :: GHC.Classes.Ord a_h)
                 (a2_aeVM [Occ=Once] :: a_h)
                 (b_aeVN [Occ=Once] :: a_h)
                 (c_aeVO [Occ=Once] :: a_h) ->
                 GHC.Classes.max
                   @ a_h
                   $dOrd_aeVX
                   c_aeVO
                   (GHC.Classes.max @ a_h $dOrd_aeVX a2_aeVM b_aeVN)}]
Engine.Model.AABB.max3 =
  \ (@ a_h)
    ($dOrd_aeVX :: GHC.Classes.Ord a_h)
    (eta_B3 :: a_h)
    (eta1_B2 :: a_h)
    (eta2_B1 :: a_h) ->
    GHC.Classes.max
      @ a_h
      $dOrd_aeVX
      eta2_B1
      (GHC.Classes.max @ a_h $dOrd_aeVX eta_B3 eta1_B2)

Engine.Model.AABB.min3_$smin3 [InlPrag=INLINE (sat-args=3)]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType U(L)U(L)U(L)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (eta_B3 [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (eta1_B2 [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (eta2_B1 [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 Foreign.C.Types.$fOrdCFloat_$cmin
                   eta2_B1 (Foreign.C.Types.$fOrdCFloat_$cmin eta_B3 eta1_B2)}]
Engine.Model.AABB.min3_$smin3 =
  \ (eta_B3 :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (eta1_B2 :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (eta2_B1 :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case eta2_B1
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of wild_af6i { GHC.Types.F# x1_af6k ->
    case eta_B3
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of wild1_Xf7N { GHC.Types.F# x2_Xf7Q ->
    case eta1_B2
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of wild2_af6m { GHC.Types.F# y1_af6o ->
    case GHC.Prim.leFloat# x2_Xf7Q y1_af6o of _ {
      GHC.Types.False ->
        case GHC.Prim.leFloat# x1_af6k y1_af6o of _ {
          GHC.Types.False ->
            wild2_af6m
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat);
          GHC.Types.True ->
            wild_af6i
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
        };
      GHC.Types.True ->
        case GHC.Prim.leFloat# x1_af6k x2_Xf7Q of _ {
          GHC.Types.False ->
            wild1_Xf7N
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat);
          GHC.Types.True ->
            wild_af6i
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
        }
    }
    }
    }
    }

Engine.Model.AABB.min3 [InlPrag=INLINE (sat-args=3)]
  :: forall a_aeSR.
     GHC.Classes.Ord a_aeSR =>
     a_aeSR -> a_aeSR -> a_aeSR -> a_aeSR
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=DmdType U(AAAAAAAS)LLL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_k)
                 ($dOrd_aeW2 :: GHC.Classes.Ord a_k)
                 (a2_aeVJ [Occ=Once] :: a_k)
                 (b_aeVK [Occ=Once] :: a_k)
                 (c_aeVL [Occ=Once] :: a_k) ->
                 GHC.Classes.min
                   @ a_k
                   $dOrd_aeW2
                   c_aeVL
                   (GHC.Classes.min @ a_k $dOrd_aeW2 a2_aeVJ b_aeVK)}]
Engine.Model.AABB.min3 =
  \ (@ a_k)
    ($dOrd_aeW2 :: GHC.Classes.Ord a_k)
    (eta_B3 :: a_k)
    (eta1_B2 :: a_k)
    (eta2_B1 :: a_k) ->
    GHC.Classes.min
      @ a_k
      $dOrd_aeW2
      eta2_B1
      (GHC.Classes.min @ a_k $dOrd_aeW2 eta_B3 eta1_B2)

lvl_rg7K :: [GHC.Types.Char]
[GblId]
lvl_rg7K =
  GHC.CString.unpackCString#
    "AABB.aabbByFace: given list is not formatted properly."

lvl1_rg7L :: [Engine.Model.AABB.AABB]
[GblId, Str=DmdType b]
lvl1_rg7L = GHC.Err.error @ [Engine.Model.AABB.AABB] lvl_rg7K

Rec {
Engine.Model.AABB.aabbByFace [Occ=LoopBreaker]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Engine.Model.AABB.AABB]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.AABB.aabbByFace =
  \ (ds_deZc :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case ds_deZc of _ {
      [] -> GHC.Types.[] @ Engine.Model.AABB.AABB;
      : x1_aeV5 ds1_deZd ->
        case ds1_deZd of _ {
          [] -> lvl1_rg7L;
          : y1_aeV6 ds2_deZe ->
            case ds2_deZe of _ {
              [] -> lvl1_rg7L;
              : z1_aeV7 ds3_deZf ->
                case ds3_deZf of _ {
                  [] -> lvl1_rg7L;
                  : x2_aeV8 ds4_deZg ->
                    case ds4_deZg of _ {
                      [] -> lvl1_rg7L;
                      : y2_aeV9 ds5_deZh ->
                        case ds5_deZh of _ {
                          [] -> lvl1_rg7L;
                          : z2_aeVa ds6_deZi ->
                            case ds6_deZi of _ {
                              [] -> lvl1_rg7L;
                              : x3_aeVb ds7_deZj ->
                                case ds7_deZj of _ {
                                  [] -> lvl1_rg7L;
                                  : y3_aeVc ds8_deZk ->
                                    case ds8_deZk of _ {
                                      [] -> lvl1_rg7L;
                                      : z3_aeVd rest_aeVe ->
                                        GHC.Types.:
                                          @ Engine.Model.AABB.AABB
                                          (Engine.Model.AABB.AABB
                                             (case x3_aeVb
                                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                           :: Foreign.C.Types.CFloat
                                                                ~#
                                                              GHC.Types.Float)
                                              of wild9_af6i { GHC.Types.F# x4_af6k ->
                                              case x1_aeV5
                                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                           :: Foreign.C.Types.CFloat
                                                                ~#
                                                              GHC.Types.Float)
                                              of wild10_Xf8I { GHC.Types.F# x5_Xf8L ->
                                              case x2_aeV8
                                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                           :: Foreign.C.Types.CFloat
                                                                ~#
                                                              GHC.Types.Float)
                                              of wild11_af6m { GHC.Types.F# y4_af6o ->
                                              let {
                                                $w$j_sfF6
                                                  :: GHC.Prim.Float#
                                                     -> GHC.Types.Float
                                                     -> (# Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
                                                           Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
                                                           Graphics.Rendering.OpenGL.Raw.Types.GLfloat #)
                                                [LclId, Arity=2, Str=DmdType LL]
                                                $w$j_sfF6 =
                                                  \ (w_sfDg :: GHC.Prim.Float#)
                                                    (w1_sfDh :: GHC.Types.Float) ->
                                                    case case GHC.Prim.leFloat# x4_af6k w_sfDg
                                                         of _ {
                                                           GHC.Types.False -> w1_sfDh;
                                                           GHC.Types.True -> wild9_af6i
                                                         }
                                                    of nt_sf6Z { GHC.Types.F# ipv_sf70 ->
                                                    case y3_aeVc
                                                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                 :: Foreign.C.Types.CFloat
                                                                      ~#
                                                                    GHC.Types.Float)
                                                    of wild12_Xfby { GHC.Types.F# x6_Xf8Y ->
                                                    case y1_aeV6
                                                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                 :: Foreign.C.Types.CFloat
                                                                      ~#
                                                                    GHC.Types.Float)
                                                    of wild13_Xfee { GHC.Types.F# x7_XfbF ->
                                                    case case GHC.Prim.leFloat# x6_Xf8Y x7_XfbF
                                                         of _ {
                                                           GHC.Types.False -> wild13_Xfee;
                                                           GHC.Types.True -> wild12_Xfby
                                                         }
                                                    of nt1_sfV4 { GHC.Types.F# ipv1_sfV3 ->
                                                    case y2_aeV9
                                                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                 :: Foreign.C.Types.CFloat
                                                                      ~#
                                                                    GHC.Types.Float)
                                                    of wild14_Xf92 { GHC.Types.F# y5_Xf95 ->
                                                    case case GHC.Prim.leFloat# x6_Xf8Y y5_Xf95
                                                         of _ {
                                                           GHC.Types.False -> wild14_Xf92;
                                                           GHC.Types.True -> wild12_Xfby
                                                         }
                                                    of nt2_sfUS { GHC.Types.F# ipv2_sfUR ->
                                                    case GHC.Prim.leFloat# x7_XfbF y5_Xf95 of _ {
                                                      GHC.Types.False ->
                                                        case z3_aeVd
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild16_Xfc4 { GHC.Types.F# x8_Xf9e ->
                                                        case z1_aeV7
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild17_Xff0 { GHC.Types.F# x9_Xfcb ->
                                                        case case GHC.Prim.leFloat# x8_Xf9e x9_Xfcb
                                                             of _ {
                                                               GHC.Types.False -> wild17_Xff0;
                                                               GHC.Types.True -> wild16_Xfc4
                                                             }
                                                        of nt3_sfV0 { GHC.Types.F# ipv3_sfUZ ->
                                                        case z2_aeVa
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild18_Xf9i { GHC.Types.F# y6_Xf9l ->
                                                        case case GHC.Prim.leFloat# x8_Xf9e y6_Xf9l
                                                             of _ {
                                                               GHC.Types.False -> wild18_Xf9i;
                                                               GHC.Types.True -> wild16_Xfc4
                                                             }
                                                        of nt4_sfUW { GHC.Types.F# ipv4_sfUV ->
                                                        case GHC.Prim.leFloat# x9_Xfcb y6_Xf9l
                                                        of _ {
                                                          GHC.Types.False ->
                                                            (# nt_sf6Z
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt2_sfUS
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt4_sfUW
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat) #);
                                                          GHC.Types.True ->
                                                            (# nt_sf6Z
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt2_sfUS
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt3_sfV0
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat) #)
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        };
                                                      GHC.Types.True ->
                                                        case z3_aeVd
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild16_Xfc4 { GHC.Types.F# x8_Xf9e ->
                                                        case z1_aeV7
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild17_Xff0 { GHC.Types.F# x9_Xfcb ->
                                                        case case GHC.Prim.leFloat# x8_Xf9e x9_Xfcb
                                                             of _ {
                                                               GHC.Types.False -> wild17_Xff0;
                                                               GHC.Types.True -> wild16_Xfc4
                                                             }
                                                        of nt3_sfVc { GHC.Types.F# ipv3_sfVb ->
                                                        case z2_aeVa
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild18_Xf9i { GHC.Types.F# y6_Xf9l ->
                                                        case case GHC.Prim.leFloat# x8_Xf9e y6_Xf9l
                                                             of _ {
                                                               GHC.Types.False -> wild18_Xf9i;
                                                               GHC.Types.True -> wild16_Xfc4
                                                             }
                                                        of nt4_sfV8 { GHC.Types.F# ipv4_sfV7 ->
                                                        case GHC.Prim.leFloat# x9_Xfcb y6_Xf9l
                                                        of _ {
                                                          GHC.Types.False ->
                                                            (# nt_sf6Z
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt1_sfV4
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt4_sfV8
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat) #);
                                                          GHC.Types.True ->
                                                            (# nt_sf6Z
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt1_sfV4
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt3_sfVc
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat) #)
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    } } in
                                              case GHC.Prim.leFloat# x5_Xf8L y4_af6o of _ {
                                                GHC.Types.False ->
                                                  case $w$j_sfF6 y4_af6o wild11_af6m
                                                  of _ { (# ww1_sfF9, ww2_sfFa, ww3_sfFb #) ->
                                                  Engine.Core.Vec.Vec3
                                                    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                                    ww1_sfF9
                                                    ww2_sfFa
                                                    ww3_sfFb
                                                  };
                                                GHC.Types.True ->
                                                  case $w$j_sfF6 x5_Xf8L wild10_Xf8I
                                                  of _ { (# ww1_sfF9, ww2_sfFa, ww3_sfFb #) ->
                                                  Engine.Core.Vec.Vec3
                                                    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                                    ww1_sfF9
                                                    ww2_sfFa
                                                    ww3_sfFb
                                                  }
                                              }
                                              }
                                              }
                                              })
                                             (case x3_aeVb
                                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                           :: Foreign.C.Types.CFloat
                                                                ~#
                                                              GHC.Types.Float)
                                              of wild9_af5R { GHC.Types.F# x4_af5T ->
                                              case x1_aeV5
                                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                           :: Foreign.C.Types.CFloat
                                                                ~#
                                                              GHC.Types.Float)
                                              of wild10_Xf8h { GHC.Types.F# x5_Xf8k ->
                                              case x2_aeV8
                                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                           :: Foreign.C.Types.CFloat
                                                                ~#
                                                              GHC.Types.Float)
                                              of wild11_af5V { GHC.Types.F# y4_af5X ->
                                              let {
                                                $w$j_sfFk
                                                  :: GHC.Prim.Float#
                                                     -> GHC.Types.Float
                                                     -> (# Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
                                                           Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
                                                           Graphics.Rendering.OpenGL.Raw.Types.GLfloat #)
                                                [LclId, Arity=2, Str=DmdType LL]
                                                $w$j_sfFk =
                                                  \ (w_sfDs :: GHC.Prim.Float#)
                                                    (w1_sfDt :: GHC.Types.Float) ->
                                                    case case GHC.Prim.leFloat# x4_af5T w_sfDs
                                                         of _ {
                                                           GHC.Types.False -> wild9_af5R;
                                                           GHC.Types.True -> w1_sfDt
                                                         }
                                                    of nt_sf7M { GHC.Types.F# ipv_sf7N ->
                                                    case y3_aeVc
                                                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                 :: Foreign.C.Types.CFloat
                                                                      ~#
                                                                    GHC.Types.Float)
                                                    of wild12_Xfb7 { GHC.Types.F# x6_Xf8x ->
                                                    case y1_aeV6
                                                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                 :: Foreign.C.Types.CFloat
                                                                      ~#
                                                                    GHC.Types.Float)
                                                    of wild13_XfdN { GHC.Types.F# x7_Xfbe ->
                                                    case case GHC.Prim.leFloat# x6_Xf8x x7_Xfbe
                                                         of _ {
                                                           GHC.Types.False -> wild12_Xfb7;
                                                           GHC.Types.True -> wild13_XfdN
                                                         }
                                                    of nt1_sfVg { GHC.Types.F# ipv1_sfVf ->
                                                    case y2_aeV9
                                                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                 :: Foreign.C.Types.CFloat
                                                                      ~#
                                                                    GHC.Types.Float)
                                                    of wild14_Xf8B { GHC.Types.F# y5_Xf8E ->
                                                    case case GHC.Prim.leFloat# x6_Xf8x y5_Xf8E
                                                         of _ {
                                                           GHC.Types.False -> wild12_Xfb7;
                                                           GHC.Types.True -> wild14_Xf8B
                                                         }
                                                    of nt2_sfVs { GHC.Types.F# ipv2_sfVr ->
                                                    case GHC.Prim.leFloat# x7_Xfbe y5_Xf8E of _ {
                                                      GHC.Types.False ->
                                                        case z3_aeVd
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild16_XfbD { GHC.Types.F# x8_Xf8N ->
                                                        case z1_aeV7
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild17_Xfez { GHC.Types.F# x9_XfbK ->
                                                        case case GHC.Prim.leFloat# x8_Xf8N x9_XfbK
                                                             of _ {
                                                               GHC.Types.False -> wild16_XfbD;
                                                               GHC.Types.True -> wild17_Xfez
                                                             }
                                                        of nt3_sfVk { GHC.Types.F# ipv3_sfVj ->
                                                        case z2_aeVa
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild18_Xf8R { GHC.Types.F# y6_Xf8U ->
                                                        case case GHC.Prim.leFloat# x8_Xf8N y6_Xf8U
                                                             of _ {
                                                               GHC.Types.False -> wild16_XfbD;
                                                               GHC.Types.True -> wild18_Xf8R
                                                             }
                                                        of nt4_sfVo { GHC.Types.F# ipv4_sfVn ->
                                                        case GHC.Prim.leFloat# x9_XfbK y6_Xf8U
                                                        of _ {
                                                          GHC.Types.False ->
                                                            (# nt_sf7M
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt1_sfVg
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt3_sfVk
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat) #);
                                                          GHC.Types.True ->
                                                            (# nt_sf7M
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt1_sfVg
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt4_sfVo
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat) #)
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        };
                                                      GHC.Types.True ->
                                                        case z3_aeVd
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild16_XfbD { GHC.Types.F# x8_Xf8N ->
                                                        case z1_aeV7
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild17_Xfez { GHC.Types.F# x9_XfbK ->
                                                        case case GHC.Prim.leFloat# x8_Xf8N x9_XfbK
                                                             of _ {
                                                               GHC.Types.False -> wild16_XfbD;
                                                               GHC.Types.True -> wild17_Xfez
                                                             }
                                                        of nt3_sfVw { GHC.Types.F# ipv3_sfVv ->
                                                        case z2_aeVa
                                                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                     :: Foreign.C.Types.CFloat
                                                                          ~#
                                                                        GHC.Types.Float)
                                                        of wild18_Xf8R { GHC.Types.F# y6_Xf8U ->
                                                        case case GHC.Prim.leFloat# x8_Xf8N y6_Xf8U
                                                             of _ {
                                                               GHC.Types.False -> wild16_XfbD;
                                                               GHC.Types.True -> wild18_Xf8R
                                                             }
                                                        of nt4_sfVA { GHC.Types.F# ipv4_sfVz ->
                                                        case GHC.Prim.leFloat# x9_XfbK y6_Xf8U
                                                        of _ {
                                                          GHC.Types.False ->
                                                            (# nt_sf7M
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt2_sfVs
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt3_sfVw
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat) #);
                                                          GHC.Types.True ->
                                                            (# nt_sf7M
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt2_sfVs
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat),
                                                               nt4_sfVA
                                                               `cast` (Sym
                                                                         <(Foreign.C.Types.NTCo:CFloat)>
                                                                       :: GHC.Types.Float
                                                                            ~#
                                                                          Foreign.C.Types.CFloat) #)
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                        }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    }
                                                    } } in
                                              case GHC.Prim.leFloat# x5_Xf8k y4_af5X of _ {
                                                GHC.Types.False ->
                                                  case $w$j_sfFk x5_Xf8k wild10_Xf8h
                                                  of _ { (# ww1_sfFn, ww2_sfFo, ww3_sfFp #) ->
                                                  Engine.Core.Vec.Vec3
                                                    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                                    ww1_sfFn
                                                    ww2_sfFo
                                                    ww3_sfFp
                                                  };
                                                GHC.Types.True ->
                                                  case $w$j_sfFk y4_af5X wild11_af5V
                                                  of _ { (# ww1_sfFn, ww2_sfFo, ww3_sfFp #) ->
                                                  Engine.Core.Vec.Vec3
                                                    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                                    ww1_sfFn
                                                    ww2_sfFo
                                                    ww3_sfFp
                                                  }
                                              }
                                              }
                                              }
                                              }))
                                          (Engine.Model.AABB.aabbByFace rest_aeVe)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
end Rec }

a_rg7M :: GHC.Types.Float
[GblId, Caf=NoCafRefs, Str=DmdType m]
a_rg7M = GHC.Types.F# (__float 0.0)

a1_rg7N
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Caf=NoCafRefs, Str=DmdType m]
a1_rg7N =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (a_rg7M
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (a_rg7M
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (a_rg7M
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Engine.Model.AABB.createAABB [InlPrag=INLINE (sat-args=0)]
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Model.AABB.AABB
[GblId,
 Arity=1,
 Str=DmdType,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=False,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= Engine.Model.AABB.AABB
                 (case (Foreign.C.Types.$fNumCFloat_$cfromInteger (__integer 0))
                       `cast` (<Foreign.C.Types.NTCo:CFloat>
                               :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                  of nt_sf0H { GHC.Types.F# _ ->
                  case (Foreign.C.Types.$fNumCFloat_$cfromInteger (__integer 0))
                       `cast` (<Foreign.C.Types.NTCo:CFloat>
                               :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                  of nt1_sf0M { GHC.Types.F# _ ->
                  case (Foreign.C.Types.$fNumCFloat_$cfromInteger (__integer 0))
                       `cast` (<Foreign.C.Types.NTCo:CFloat>
                               :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                  of nt2_sf0R { GHC.Types.F# _ ->
                  Engine.Core.Vec.Vec3
                    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                    (nt_sf0H
                     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                    (nt1_sf0M
                     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                    (nt2_sf0R
                     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                  }
                  }
                  })}]
Engine.Model.AABB.createAABB = Engine.Model.AABB.AABB a1_rg7N

Engine.Model.AABB.$fShowAABB2 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Model.AABB.$fShowAABB2 = GHC.CString.unpackCString# "AABB "

Engine.Model.AABB.$w$cshowsPrec
  :: GHC.Prim.Int#
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 20 20] 381 120}]
Engine.Model.AABB.$w$cshowsPrec =
  \ (ww_sfDA :: GHC.Prim.Int#)
    (ww1_sfDE
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (ww2_sfDF
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    let {
      g_X3wS [Dmd=Just L] :: GHC.Base.String -> GHC.Base.String
      [LclId, Str=DmdType]
      g_X3wS =
        case ww2_sfDF
        of _ { Engine.Core.Vec.Vec3 ww3_s9Pw ww4_s9Px ww5_s9Py ->
        Engine.Core.Vec.$w$cshowsPrec1
          @ Foreign.C.Types.CFloat
          Foreign.C.Types.$fShowCFloat
          11
          ww3_s9Pw
          ww4_s9Px
          ww5_s9Py
        } } in
    let {
      f_X3wN [Dmd=Just L] :: GHC.Base.String -> GHC.Base.String
      [LclId, Str=DmdType]
      f_X3wN =
        case ww1_sfDE
        of _ { Engine.Core.Vec.Vec3 ww3_s9Pw ww4_s9Px ww5_s9Py ->
        Engine.Core.Vec.$w$cshowsPrec1
          @ Foreign.C.Types.CFloat
          Foreign.C.Types.$fShowCFloat
          11
          ww3_s9Pw
          ww4_s9Px
          ww5_s9Py
        } } in
    case GHC.Prim.>=# ww_sfDA 11 of _ {
      GHC.Types.False ->
        \ (x_X3wX :: GHC.Base.String) ->
          GHC.Base.++
            @ GHC.Types.Char
            Engine.Model.AABB.$fShowAABB2
            (f_X3wN
               (GHC.Types.:
                  @ GHC.Types.Char GHC.Show.showSpace1 (g_X3wS x_X3wX)));
      GHC.Types.True ->
        \ (x_a8Oo :: GHC.Base.String) ->
          GHC.Types.:
            @ GHC.Types.Char
            GHC.Show.shows11
            (GHC.Base.++
               @ GHC.Types.Char
               Engine.Model.AABB.$fShowAABB2
               (f_X3wN
                  (GHC.Types.:
                     @ GHC.Types.Char
                     GHC.Show.showSpace1
                     (g_X3wS (GHC.Types.: @ GHC.Types.Char GHC.Show.shows10 x_a8Oo)))))
    }

Engine.Model.AABB.$fShowAABB_$cshowsPrec [InlPrag=INLINE[0]]
  :: GHC.Types.Int -> Engine.Model.AABB.AABB -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=DmdType U(L)U(LL),
 Unf=Unf{Src=Worker=Engine.Model.AABB.$w$cshowsPrec, TopLvl=True,
         Arity=2, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sfDy [Occ=Once!] :: GHC.Types.Int)
                 (w1_sfDC [Occ=Once!] :: Engine.Model.AABB.AABB) ->
                 case w_sfDy of _ { GHC.Types.I# ww_sfDA [Occ=Once] ->
                 case w1_sfDC
                 of _
                 { Engine.Model.AABB.AABB ww1_sfDE [Occ=Once] ww2_sfDF [Occ=Once] ->
                 Engine.Model.AABB.$w$cshowsPrec ww_sfDA ww1_sfDE ww2_sfDF
                 }
                 }}]
Engine.Model.AABB.$fShowAABB_$cshowsPrec =
  \ (w_sfDy :: GHC.Types.Int) (w1_sfDC :: Engine.Model.AABB.AABB) ->
    case w_sfDy of _ { GHC.Types.I# ww_sfDA ->
    case w1_sfDC of _ { Engine.Model.AABB.AABB ww1_sfDE ww2_sfDF ->
    Engine.Model.AABB.$w$cshowsPrec ww_sfDA ww1_sfDE ww2_sfDF
    }
    }

Engine.Model.AABB.$fShowAABB1
  :: Engine.Model.AABB.AABB -> GHC.Show.ShowS
[GblId,
 Arity=1,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [20] 50 0}]
Engine.Model.AABB.$fShowAABB1 =
  \ (w_sfDC :: Engine.Model.AABB.AABB) ->
    case w_sfDC of _ { Engine.Model.AABB.AABB ww_sfDE ww1_sfDF ->
    Engine.Model.AABB.$w$cshowsPrec 0 ww_sfDE ww1_sfDF
    }

Engine.Model.AABB.$fShowAABB_$cshowList
  :: [Engine.Model.AABB.AABB] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 60}]
Engine.Model.AABB.$fShowAABB_$cshowList =
  GHC.Show.showList__
    @ Engine.Model.AABB.AABB Engine.Model.AABB.$fShowAABB1

Engine.Model.AABB.$fShowAABB_$cshow
  :: Engine.Model.AABB.AABB -> GHC.Base.String
[GblId,
 Arity=1,
 Str=DmdType U(LL),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a8Qm [Occ=Once] :: Engine.Model.AABB.AABB) ->
                 Engine.Model.AABB.$fShowAABB_$cshowsPrec
                   GHC.Show.shows26 x_a8Qm (GHC.Types.[] @ GHC.Types.Char)}]
Engine.Model.AABB.$fShowAABB_$cshow =
  \ (x_a8Qm :: Engine.Model.AABB.AABB) ->
    case x_a8Qm of _ { Engine.Model.AABB.AABB ww_sfDE ww1_sfDF ->
    Engine.Model.AABB.$w$cshowsPrec
      0 ww_sfDE ww1_sfDF (GHC.Types.[] @ GHC.Types.Char)
    }

Engine.Model.AABB.$fShowAABB [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Show.Show Engine.Model.AABB.AABB
[GblId[DFunId],
 Str=DmdType m,
 Unf=DFun(arity=0) GHC.Show.D:Show [{Engine.Model.AABB.$fShowAABB_$cshowsPrec},
                                    {Engine.Model.AABB.$fShowAABB_$cshow},
                                    {Engine.Model.AABB.$fShowAABB_$cshowList}]]
Engine.Model.AABB.$fShowAABB =
  GHC.Show.D:Show
    @ Engine.Model.AABB.AABB
    Engine.Model.AABB.$fShowAABB_$cshowsPrec
    Engine.Model.AABB.$fShowAABB_$cshow
    Engine.Model.AABB.$fShowAABB_$cshowList

Rec {
$wlgo_rg7O
  :: GHC.Prim.Float#
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] -> GHC.Prim.Float#
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LS]
$wlgo_rg7O =
  \ (ww_sfEF :: GHC.Prim.Float#)
    (w_sfEH :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_sfEH of _ {
      [] -> ww_sfEF;
      : x_af8V xs_af8W ->
        case x_af8V
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_af6o ->
        case GHC.Prim.leFloat# ww_sfEF y1_af6o of _ {
          GHC.Types.False -> $wlgo_rg7O y1_af6o xs_af8W;
          GHC.Types.True -> $wlgo_rg7O ww_sfEF xs_af8W
        }
        }
    }
end Rec }

Rec {
$wlgo1_rg7P
  :: GHC.Prim.Float#
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] -> GHC.Prim.Float#
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LS]
$wlgo1_rg7P =
  \ (ww_sfEu :: GHC.Prim.Float#)
    (w_sfEw :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_sfEw of _ {
      [] -> ww_sfEu;
      : x_af8V xs_af8W ->
        case x_af8V
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_af6o ->
        case GHC.Prim.leFloat# ww_sfEu y1_af6o of _ {
          GHC.Types.False -> $wlgo1_rg7P y1_af6o xs_af8W;
          GHC.Types.True -> $wlgo1_rg7P ww_sfEu xs_af8W
        }
        }
    }
end Rec }

Rec {
$wlgo2_rg7Q
  :: GHC.Prim.Float#
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] -> GHC.Prim.Float#
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LS]
$wlgo2_rg7Q =
  \ (ww_sfEj :: GHC.Prim.Float#)
    (w_sfEl :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_sfEl of _ {
      [] -> ww_sfEj;
      : x_af8V xs_af8W ->
        case x_af8V
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_af6o ->
        case GHC.Prim.leFloat# ww_sfEj y1_af6o of _ {
          GHC.Types.False -> $wlgo2_rg7Q y1_af6o xs_af8W;
          GHC.Types.True -> $wlgo2_rg7Q ww_sfEj xs_af8W
        }
        }
    }
end Rec }

Rec {
$wlgo3_rg7R
  :: GHC.Prim.Float#
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] -> GHC.Prim.Float#
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LS]
$wlgo3_rg7R =
  \ (ww_sfE8 :: GHC.Prim.Float#)
    (w_sfEa :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_sfEa of _ {
      [] -> ww_sfE8;
      : x_af8V xs_af8W ->
        case x_af8V
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_af6o ->
        case GHC.Prim.leFloat# ww_sfE8 y1_af6o of _ {
          GHC.Types.False -> $wlgo3_rg7R y1_af6o xs_af8W;
          GHC.Types.True -> $wlgo3_rg7R ww_sfE8 xs_af8W
        }
        }
    }
end Rec }

Rec {
$wlgo4_rg7S
  :: GHC.Prim.Float#
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] -> GHC.Prim.Float#
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LS]
$wlgo4_rg7S =
  \ (ww_sfDX :: GHC.Prim.Float#)
    (w_sfDZ :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_sfDZ of _ {
      [] -> ww_sfDX;
      : x_af8V xs_af8W ->
        case x_af8V
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_af6o ->
        case GHC.Prim.leFloat# ww_sfDX y1_af6o of _ {
          GHC.Types.False -> $wlgo4_rg7S y1_af6o xs_af8W;
          GHC.Types.True -> $wlgo4_rg7S ww_sfDX xs_af8W
        }
        }
    }
end Rec }

Rec {
$wlgo5_rg7T
  :: GHC.Prim.Float#
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] -> GHC.Prim.Float#
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LS]
$wlgo5_rg7T =
  \ (ww_sfDM :: GHC.Prim.Float#)
    (w_sfDO :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_sfDO of _ {
      [] -> ww_sfDM;
      : x_af8V xs_af8W ->
        case x_af8V
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_af6o ->
        case GHC.Prim.leFloat# ww_sfDM y1_af6o of _ {
          GHC.Types.False -> $wlgo5_rg7T y1_af6o xs_af8W;
          GHC.Types.True -> $wlgo5_rg7T ww_sfDM xs_af8W
        }
        }
    }
end Rec }

Rec {
Engine.Model.AABB.$waabbsFromPointsGrouped [Occ=LoopBreaker]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> GHC.Prim.Int# -> [Engine.Model.AABB.AABB]
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.AABB.$waabbsFromPointsGrouped =
  \ (w_sfEO :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (ww_sfER :: GHC.Prim.Int#) ->
    case GHC.List.$wlen
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat w_sfEO 0
    of ww1_adam { __DEFAULT ->
    case GHC.Prim.>=# ww1_adam ww_sfER of _ {
      GHC.Types.False -> GHC.Types.[] @ Engine.Model.AABB.AABB;
      GHC.Types.True ->
        let {
          ds_sf3U [Dmd=Just D(SS)]
            :: ([Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
          [LclId, Str=DmdType]
          ds_sf3U =
            let {
              n#_a3mu [Dmd=Just L] :: GHC.Prim.Int#
              [LclId, Str=DmdType]
              n#_a3mu = GHC.Prim.*# ww_sfER 3 } in
            case GHC.Prim.<# n#_a3mu 0 of _ {
              GHC.Types.False ->
                case GHC.List.$wsplitAt#
                       @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat n#_a3mu w_sfEO
                of _ { (# ww3_a4UT, ww4_a4UU #) ->
                (ww3_a4UT, ww4_a4UU)
                };
              GHC.Types.True ->
                (GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
                 w_sfEO)
            } } in
        GHC.Types.:
          @ Engine.Model.AABB.AABB
          (let {
             cur_sf3T [Dmd=Just L]
               :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
             [LclId, Str=DmdType]
             cur_sf3T =
               case ds_sf3U of _ { (cur1_XeXB, rest_XeXc) -> cur1_XeXB } } in
           let {
             xs_sf3S [Dmd=Just L]
               :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
             [LclId, Str=DmdType]
             xs_sf3S =
               Engine.Model.AABB.getXs
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat cur_sf3T } in
           let {
             ys_sf3R [Dmd=Just L]
               :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
             [LclId, Str=DmdType]
             ys_sf3R =
               Engine.Model.AABB.getYs
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat cur_sf3T } in
           let {
             zs_sf3Q [Dmd=Just L]
               :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
             [LclId, Str=DmdType]
             zs_sf3Q =
               Engine.Model.AABB.getZs
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat cur_sf3T } in
           Engine.Model.AABB.AABB
             (case xs_sf3S of _ {
                [] -> case Data.List.minimum2 of wild2_00 { };
                : ipv_af1b ipv1_af1c ->
                  case ipv_af1b
                       `cast` (<Foreign.C.Types.NTCo:CFloat>
                               :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                  of _ { GHC.Types.F# ww2_sfDM ->
                  case $wlgo5_rg7T ww2_sfDM ipv1_af1c of ww3_sfDR { __DEFAULT ->
                  case ys_sf3R of _ {
                    [] -> case Data.List.minimum2 of wild3_00 { };
                    : ipv2_Xf3F ipv3_Xf3H ->
                      case ipv2_Xf3F
                           `cast` (<Foreign.C.Types.NTCo:CFloat>
                                   :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                      of _ { GHC.Types.F# ww4_sfDX ->
                      case $wlgo4_rg7S ww4_sfDX ipv3_Xf3H of ww5_sfE2 { __DEFAULT ->
                      case zs_sf3Q of _ {
                        [] -> case Data.List.minimum2 of wild4_00 { };
                        : ipv4_Xf3N ipv5_Xf3P ->
                          case ipv4_Xf3N
                               `cast` (<Foreign.C.Types.NTCo:CFloat>
                                       :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                          of _ { GHC.Types.F# ww6_sfE8 ->
                          case $wlgo3_rg7R ww6_sfE8 ipv5_Xf3P of ww7_sfEd { __DEFAULT ->
                          Engine.Core.Vec.Vec3
                            @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                            ((GHC.Types.F# ww3_sfDR)
                             `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                     :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                            ((GHC.Types.F# ww5_sfE2)
                             `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                     :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                            ((GHC.Types.F# ww7_sfEd)
                             `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                     :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                          }
                          }
                      }
                      }
                      }
                  }
                  }
                  }
              })
             (case xs_sf3S of _ {
                [] -> case Data.List.minimum2 of wild2_00 { };
                : ipv_af1b ipv1_af1c ->
                  case ipv_af1b
                       `cast` (<Foreign.C.Types.NTCo:CFloat>
                               :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                  of _ { GHC.Types.F# ww2_sfEj ->
                  case $wlgo2_rg7Q ww2_sfEj ipv1_af1c of ww3_sfEo { __DEFAULT ->
                  case ys_sf3R of _ {
                    [] -> case Data.List.minimum2 of wild3_00 { };
                    : ipv2_Xf3F ipv3_Xf3H ->
                      case ipv2_Xf3F
                           `cast` (<Foreign.C.Types.NTCo:CFloat>
                                   :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                      of _ { GHC.Types.F# ww4_sfEu ->
                      case $wlgo1_rg7P ww4_sfEu ipv3_Xf3H of ww5_sfEz { __DEFAULT ->
                      case zs_sf3Q of _ {
                        [] -> case Data.List.minimum2 of wild4_00 { };
                        : ipv4_Xf3N ipv5_Xf3P ->
                          case ipv4_Xf3N
                               `cast` (<Foreign.C.Types.NTCo:CFloat>
                                       :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                          of _ { GHC.Types.F# ww6_sfEF ->
                          case $wlgo_rg7O ww6_sfEF ipv5_Xf3P of ww7_sfEK { __DEFAULT ->
                          Engine.Core.Vec.Vec3
                            @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                            ((GHC.Types.F# ww3_sfEo)
                             `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                     :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                            ((GHC.Types.F# ww5_sfEz)
                             `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                     :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                            ((GHC.Types.F# ww7_sfEK)
                             `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                     :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                          }
                          }
                      }
                      }
                      }
                  }
                  }
                  }
              }))
          (case ds_sf3U of _ { (cur_XeXF, rest_XeXB) ->
           Engine.Model.AABB.$waabbsFromPointsGrouped rest_XeXB ww_sfER
           })
    }
    }
end Rec }

Engine.Model.AABB.aabbsFromPointsGrouped [InlPrag=INLINE[0]]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> GHC.Types.Int -> [Engine.Model.AABB.AABB]
[GblId,
 Arity=2,
 Str=DmdType SU(L),
 Unf=Unf{Src=Worker=Engine.Model.AABB.$waabbsFromPointsGrouped,
         TopLvl=True, Arity=2, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sfEO [Occ=Once]
                    :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
                 (w1_sfEP [Occ=Once!] :: GHC.Types.Int) ->
                 case w1_sfEP of _ { GHC.Types.I# ww_sfER [Occ=Once] ->
                 Engine.Model.AABB.$waabbsFromPointsGrouped w_sfEO ww_sfER
                 }}]
Engine.Model.AABB.aabbsFromPointsGrouped =
  \ (w_sfEO :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (w1_sfEP :: GHC.Types.Int) ->
    case w1_sfEP of _ { GHC.Types.I# ww_sfER ->
    Engine.Model.AABB.$waabbsFromPointsGrouped w_sfEO ww_sfER
    }

Engine.Model.AABB.moveAABB [InlPrag=INLINE (sat-args=2)]
  :: Engine.Model.AABB.AABB
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Model.AABB.AABB
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(LL)Lm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_deZa [Occ=Once!] :: Engine.Model.AABB.AABB)
                 (deltaMovement_aeVj
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 case ds_deZa
                 of _
                 { Engine.Model.AABB.AABB origMin_aeVh [Occ=Once]
                                          origMax_aeVi [Occ=Once] ->
                 Engine.Model.AABB.AABB
                   (Engine.Core.Vec.$fNumVec3_$c+
                      @ Foreign.C.Types.CFloat
                      Foreign.C.Types.$fNumCFloat
                      origMin_aeVh
                      deltaMovement_aeVj)
                   (Engine.Core.Vec.$fNumVec3_$c+
                      @ Foreign.C.Types.CFloat
                      Foreign.C.Types.$fNumCFloat
                      origMax_aeVi
                      deltaMovement_aeVj)
                 }}]
Engine.Model.AABB.moveAABB =
  \ (eta_B2 :: Engine.Model.AABB.AABB)
    (eta1_B1
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case eta_B2
    of _ { Engine.Model.AABB.AABB origMin_aeVh origMax_aeVi ->
    Engine.Model.AABB.AABB
      (case origMin_aeVh
       of _ { Engine.Core.Vec.Vec3 ww7_s9N0 ww8_s9N1 ww9_s9N2 ->
       case ww7_s9N0
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# x_sfVP ->
       case ww8_s9N1
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# x1_sfVX ->
       case ww9_s9N2
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# x2_sfW5 ->
       case eta1_B1
       of _ { Engine.Core.Vec.Vec3 ww10_s9N6 ww11_s9N7 ww12_s9N8 ->
       case ww10_s9N6
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# y_sfVT ->
       case ww11_s9N7
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# y1_sfW1 ->
       case ww12_s9N8
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# y2_sfW9 ->
       Engine.Core.Vec.Vec3
         @ Foreign.C.Types.CFloat
         ((GHC.Types.F# (GHC.Prim.plusFloat# x_sfVP y_sfVT))
          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
         ((GHC.Types.F# (GHC.Prim.plusFloat# x1_sfVX y1_sfW1))
          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
         ((GHC.Types.F# (GHC.Prim.plusFloat# x2_sfW5 y2_sfW9))
          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
       }
       }
       }
       }
       }
       }
       }
       })
      (case origMax_aeVi
       of _ { Engine.Core.Vec.Vec3 ww7_s9N0 ww8_s9N1 ww9_s9N2 ->
       case ww7_s9N0
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# x_sfWd ->
       case ww8_s9N1
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# x1_sfWl ->
       case ww9_s9N2
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# x2_sfWt ->
       case eta1_B1
       of _ { Engine.Core.Vec.Vec3 ww10_s9N6 ww11_s9N7 ww12_s9N8 ->
       case ww10_s9N6
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# y_sfWh ->
       case ww11_s9N7
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# y1_sfWp ->
       case ww12_s9N8
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# y2_sfWx ->
       Engine.Core.Vec.Vec3
         @ Foreign.C.Types.CFloat
         ((GHC.Types.F# (GHC.Prim.plusFloat# x_sfWd y_sfWh))
          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
         ((GHC.Types.F# (GHC.Prim.plusFloat# x1_sfWl y1_sfWp))
          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
         ((GHC.Types.F# (GHC.Prim.plusFloat# x2_sfWt y2_sfWx))
          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
       }
       }
       }
       }
       }
       }
       }
       })
    }

Engine.Model.AABB.aabbDimensions [InlPrag=INLINE (sat-args=1)]
  :: Engine.Model.AABB.AABB
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(U(U(L)U(L)U(L))U(U(L)U(L)U(L)))m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_deZ8 [Occ=Once!] :: Engine.Model.AABB.AABB) ->
                 case ds_deZ8
                 of _
                 { Engine.Model.AABB.AABB left_aeVk [Occ=Once]
                                          right_aeVl [Occ=Once] ->
                 Engine.Core.Vec.$fNumVec3_$c-
                   @ Foreign.C.Types.CFloat
                   Foreign.C.Types.$fNumCFloat
                   right_aeVl
                   left_aeVk
                 }}]
Engine.Model.AABB.aabbDimensions =
  \ (eta_B1 :: Engine.Model.AABB.AABB) ->
    case eta_B1 of _ { Engine.Model.AABB.AABB left_aeVk right_aeVl ->
    case right_aeVl
    of _ { Engine.Core.Vec.Vec3 ww7_s9M8 ww8_s9M9 ww9_s9Ma ->
    case ww7_s9M8
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x_sfWB ->
    case ww8_s9M9
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x1_sfWJ ->
    case ww9_s9Ma
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x2_sfWR ->
    case left_aeVk
    of _ { Engine.Core.Vec.Vec3 ww10_s9Me ww11_s9Mf ww12_s9Mg ->
    case ww10_s9Me
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y_sfWF ->
    case ww11_s9Mf
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y1_sfWN ->
    case ww12_s9Mg
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y2_sfWV ->
    Engine.Core.Vec.Vec3
      @ Foreign.C.Types.CFloat
      ((GHC.Types.F# (GHC.Prim.minusFloat# x_sfWB y_sfWF))
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      ((GHC.Types.F# (GHC.Prim.minusFloat# x1_sfWJ y1_sfWN))
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      ((GHC.Types.F# (GHC.Prim.minusFloat# x2_sfWR y2_sfWV))
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    }
    }
    }
    }
    }
    }
    }
    }
    }

Rec {
Engine.Model.AABB.$waabbFromPointsAccum [Occ=LoopBreaker]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> (# Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat #)
[GblId, Arity=3, Caf=NoCafRefs, Str=DmdType SLL]
Engine.Model.AABB.$waabbFromPointsAccum =
  \ (w_sfEX :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (w1_sfEY
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (w2_sfEZ
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case w_sfEX of _ {
      [] -> (# w1_sfEY, w2_sfEZ #);
      : x_aeUT ds_deZA ->
        case ds_deZA of _ {
          [] -> (# w1_sfEY, w2_sfEZ #);
          : y_aeUU ds1_deZB ->
            case ds1_deZB of _ {
              [] -> (# w1_sfEY, w2_sfEZ #);
              : z_aeUV rest_aeUW ->
                case w1_sfEY
                of _ { Engine.Core.Vec.Vec3 miX_aeUX miY_aeUY miZ_aeUZ ->
                case miX_aeUX
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of wild4_sfX0 { GHC.Types.F# x1_sfWZ ->
                case miY_aeUY
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of wild5_sfX4 { GHC.Types.F# x2_sfX3 ->
                case miZ_aeUZ
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of wild6_sfX8 { GHC.Types.F# x3_sfX7 ->
                case w2_sfEZ
                of _ { Engine.Core.Vec.Vec3 maX_aeV0 maY_aeV1 maZ_aeV2 ->
                case maX_aeV0
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of wild8_sfXc { GHC.Types.F# x4_sfXb ->
                case maY_aeV1
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of wild9_sfXg { GHC.Types.F# x5_sfXf ->
                case maZ_aeV2
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of wild10_sfXk { GHC.Types.F# x6_sfXj ->
                Engine.Model.AABB.$waabbFromPointsAccum
                  rest_aeUW
                  (case x_aeUT
                        `cast` (<Foreign.C.Types.NTCo:CFloat>
                                :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                   of wild11_af6m { GHC.Types.F# y1_af6o ->
                   case case GHC.Prim.leFloat# x1_sfWZ y1_af6o of _ {
                          GHC.Types.False -> wild11_af6m;
                          GHC.Types.True -> wild4_sfX0
                        }
                   of nt_sf9M { GHC.Types.F# ipv_sf9N ->
                   case y_aeUU
                        `cast` (<Foreign.C.Types.NTCo:CFloat>
                                :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                   of wild12_Xf9d { GHC.Types.F# y2_Xf9g ->
                   case case GHC.Prim.leFloat# x2_sfX3 y2_Xf9g of _ {
                          GHC.Types.False -> wild12_Xf9d;
                          GHC.Types.True -> wild5_sfX4
                        }
                   of nt1_sf9U { GHC.Types.F# ipv1_sf9V ->
                   case z_aeUV
                        `cast` (<Foreign.C.Types.NTCo:CFloat>
                                :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                   of wild13_Xf9m { GHC.Types.F# y3_Xf9p ->
                   case case GHC.Prim.leFloat# x3_sfX7 y3_Xf9p of _ {
                          GHC.Types.False -> wild13_Xf9m;
                          GHC.Types.True -> wild6_sfX8
                        }
                   of nt2_sfa2 { GHC.Types.F# ipv2_sfa3 ->
                   Engine.Core.Vec.Vec3
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                     (nt_sf9M
                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                     (nt1_sf9U
                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                     (nt2_sfa2
                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                   }
                   }
                   }
                   }
                   }
                   })
                  (case x_aeUT
                        `cast` (<Foreign.C.Types.NTCo:CFloat>
                                :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                   of wild11_af5V { GHC.Types.F# y1_af5X ->
                   case case GHC.Prim.leFloat# x4_sfXb y1_af5X of _ {
                          GHC.Types.False -> wild8_sfXc;
                          GHC.Types.True -> wild11_af5V
                        }
                   of nt_sfaa { GHC.Types.F# ipv_sfab ->
                   case y_aeUU
                        `cast` (<Foreign.C.Types.NTCo:CFloat>
                                :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                   of wild12_Xf8M { GHC.Types.F# y2_Xf8P ->
                   case case GHC.Prim.leFloat# x5_sfXf y2_Xf8P of _ {
                          GHC.Types.False -> wild9_sfXg;
                          GHC.Types.True -> wild12_Xf8M
                        }
                   of nt1_sfai { GHC.Types.F# ipv1_sfaj ->
                   case z_aeUV
                        `cast` (<Foreign.C.Types.NTCo:CFloat>
                                :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                   of wild13_Xf8V { GHC.Types.F# y3_Xf8Y ->
                   case case GHC.Prim.leFloat# x6_sfXj y3_Xf8Y of _ {
                          GHC.Types.False -> wild10_sfXk;
                          GHC.Types.True -> wild13_Xf8V
                        }
                   of nt2_sfaq { GHC.Types.F# ipv2_sfar ->
                   Engine.Core.Vec.Vec3
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                     (nt_sfaa
                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                     (nt1_sfai
                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                     (nt2_sfaq
                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                   }
                   }
                   }
                   }
                   }
                   })
                }
                }
                }
                }
                }
                }
                }
                }
            }
        }
    }
end Rec }

Engine.Model.AABB.aabbFromPointsAccum [InlPrag=INLINE[0]]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Model.AABB.AABB
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType SLLm,
 Unf=Unf{Src=Worker=Engine.Model.AABB.$waabbFromPointsAccum,
         TopLvl=True, Arity=3, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sfEX [Occ=Once]
                    :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
                 (w1_sfEY [Occ=Once]
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (w2_sfEZ [Occ=Once]
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 case Engine.Model.AABB.$waabbFromPointsAccum w_sfEX w1_sfEY w2_sfEZ
                 of _ { (# ww1_sfFJ [Occ=Once], ww2_sfFK [Occ=Once] #) ->
                 Engine.Model.AABB.AABB ww1_sfFJ ww2_sfFK
                 }}]
Engine.Model.AABB.aabbFromPointsAccum =
  \ (w_sfEX :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (w1_sfEY
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (w2_sfEZ
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case Engine.Model.AABB.$waabbFromPointsAccum w_sfEX w1_sfEY w2_sfEZ
    of _ { (# ww1_sfFJ, ww2_sfFK #) ->
    Engine.Model.AABB.AABB ww1_sfFJ ww2_sfFK
    }

lvl2_rg7U :: [GHC.Types.Char]
[GblId]
lvl2_rg7U =
  GHC.CString.unpackCString#
    "AABB.aabbFromPoints: given list is too short."

Engine.Model.AABB.aabbFromPoints1 :: Engine.Model.AABB.AABB
[GblId, Str=DmdType b]
Engine.Model.AABB.aabbFromPoints1 =
  GHC.Err.error @ Engine.Model.AABB.AABB lvl2_rg7U

Engine.Model.AABB.$waabbFromPoints
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> (# Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat #)
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30] 180 0}]
Engine.Model.AABB.$waabbFromPoints =
  \ (w_sfF3 :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_sfF3 of wild_XJ {
      [] -> case Engine.Model.AABB.aabbFromPoints1 of wild1_00 { };
      : x_aeUQ ds_deZJ ->
        case ds_deZJ of _ {
          [] -> case Engine.Model.AABB.aabbFromPoints1 of wild2_00 { };
          : y_aeUR ds1_deZK ->
            case ds1_deZK of _ {
              [] -> case Engine.Model.AABB.aabbFromPoints1 of wild3_00 { };
              : z_aeUS ds2_deZL ->
                Engine.Model.AABB.$waabbFromPointsAccum
                  wild_XJ
                  (Engine.Core.Vec.$WVec3
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat x_aeUQ y_aeUR z_aeUS)
                  (Engine.Core.Vec.$WVec3
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat x_aeUQ y_aeUR z_aeUS)
            }
        }
    }

Engine.Model.AABB.aabbFromPoints [InlPrag=INLINE[0]]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> Engine.Model.AABB.AABB
[GblId,
 Arity=1,
 Str=DmdType Sm,
 Unf=Unf{Src=Worker=Engine.Model.AABB.$waabbFromPoints, TopLvl=True,
         Arity=1, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sfF3 [Occ=Once]
                    :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
                 case Engine.Model.AABB.$waabbFromPoints w_sfF3
                 of _ { (# ww1_sfFP [Occ=Once], ww2_sfFQ [Occ=Once] #) ->
                 Engine.Model.AABB.AABB ww1_sfFP ww2_sfFQ
                 }}]
Engine.Model.AABB.aabbFromPoints =
  \ (w_sfF3 :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case Engine.Model.AABB.$waabbFromPoints w_sfF3
    of _ { (# ww1_sfFP, ww2_sfFQ #) ->
    Engine.Model.AABB.AABB ww1_sfFP ww2_sfFQ
    }

Engine.Model.AABB.intersecting [InlPrag=INLINE (sat-args=2)]
  :: Engine.Model.AABB.AABB
     -> Engine.Model.AABB.AABB -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(U(U(L)U(L)U(L))U(U(L)U(L)U(L)))U(U(U(L)U(L)U(L))S(U(L)U(L)U(L))),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds_deYF [Occ=Once!] :: Engine.Model.AABB.AABB)
                 (ds1_deYG [Occ=Once!] :: Engine.Model.AABB.AABB) ->
                 case ds_deYF
                 of _
                 { Engine.Model.AABB.AABB ds2_deYH [Occ=Once!]
                                          ds3_deYI [Occ=Once!] ->
                 case ds2_deYH
                 of _
                 { Engine.Core.Vec.Vec3 min1x_aeVr [Occ=Once]
                                        min1y_aeVs [Occ=Once]
                                        min1z_aeVt [Occ=Once] ->
                 case ds3_deYI
                 of _
                 { Engine.Core.Vec.Vec3 max1x_aeVu [Occ=Once]
                                        max1y_aeVv [Occ=Once]
                                        max1z_aeVw [Occ=Once] ->
                 case ds1_deYG
                 of _
                 { Engine.Model.AABB.AABB ds4_deYJ [Occ=Once!]
                                          ds5_deYK [Occ=Once!] ->
                 case ds4_deYJ
                 of _
                 { Engine.Core.Vec.Vec3 min2x_aeVx [Occ=Once]
                                        min2y_aeVy [Occ=Once]
                                        min2z_aeVz [Occ=Once] ->
                 case ds5_deYK
                 of _
                 { Engine.Core.Vec.Vec3 max2x_aeVA [Occ=Once]
                                        max2y_aeVB [Occ=Once]
                                        max2z_aeVC [Occ=Once] ->
                 GHC.Classes.&&
                   (Foreign.C.Types.$fOrdCFloat_$c> max1x_aeVu min2x_aeVx)
                   (GHC.Classes.&&
                      (Foreign.C.Types.$fOrdCFloat_$c< min1x_aeVr max2x_aeVA)
                      (GHC.Classes.&&
                         (Foreign.C.Types.$fOrdCFloat_$c> max1y_aeVv min2y_aeVy)
                         (GHC.Classes.&&
                            (Foreign.C.Types.$fOrdCFloat_$c< min1y_aeVs max2y_aeVB)
                            (GHC.Classes.&&
                               (Foreign.C.Types.$fOrdCFloat_$c> max1z_aeVw min2z_aeVz)
                               (Foreign.C.Types.$fOrdCFloat_$c< min1z_aeVt max2z_aeVC)))))
                 }
                 }
                 }
                 }
                 }
                 }}]
Engine.Model.AABB.intersecting =
  \ (eta_B2 :: Engine.Model.AABB.AABB)
    (eta1_B1 :: Engine.Model.AABB.AABB) ->
    case eta_B2 of _ { Engine.Model.AABB.AABB ds_deYH ds1_deYI ->
    case ds_deYH
    of _ { Engine.Core.Vec.Vec3 min1x_aeVr min1y_aeVs min1z_aeVt ->
    case min1x_aeVr
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x_sfXw ->
    case min1y_aeVs
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x1_sfXM ->
    case min1z_aeVt
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x2_sfY2 ->
    case ds1_deYI
    of _ { Engine.Core.Vec.Vec3 max1x_aeVu max1y_aeVv max1z_aeVw ->
    case max1x_aeVu
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x3_sfXo ->
    case max1y_aeVv
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x4_sfXE ->
    case max1z_aeVw
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# x5_sfXU ->
    case eta1_B1 of _ { Engine.Model.AABB.AABB ds2_deYJ ds3_deYK ->
    case ds2_deYJ
    of _ { Engine.Core.Vec.Vec3 min2x_aeVx min2y_aeVy min2z_aeVz ->
    case min2x_aeVx
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y_sfXs ->
    case min2y_aeVy
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y1_sfXI ->
    case min2z_aeVz
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y2_sfXY ->
    case ds3_deYK
    of _ { Engine.Core.Vec.Vec3 max2x_aeVA max2y_aeVB max2z_aeVC ->
    case max2x_aeVA
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y3_sfXA ->
    case max2y_aeVB
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y4_sfXQ ->
    case max2z_aeVC
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# y5_sfY6 ->
    case GHC.Prim.gtFloat# x3_sfXo y_sfXs of _ {
      GHC.Types.False -> GHC.Types.False;
      GHC.Types.True ->
        case GHC.Prim.ltFloat# x_sfXw y3_sfXA of _ {
          GHC.Types.False -> GHC.Types.False;
          GHC.Types.True ->
            case GHC.Prim.gtFloat# x4_sfXE y1_sfXI of _ {
              GHC.Types.False -> GHC.Types.False;
              GHC.Types.True ->
                case GHC.Prim.ltFloat# x1_sfXM y4_sfXQ of _ {
                  GHC.Types.False -> GHC.Types.False;
                  GHC.Types.True ->
                    case GHC.Prim.gtFloat# x5_sfXU y2_sfXY of _ {
                      GHC.Types.False -> GHC.Types.False;
                      GHC.Types.True -> GHC.Prim.ltFloat# x2_sfY2 y5_sfY6
                    }
                }
            }
        }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Model.AABB.mIntersecting
  :: Data.Maybe.Maybe Engine.Model.AABB.AABB
     -> Data.Maybe.Maybe Engine.Model.AABB.AABB -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType SS,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [50 60] 90 30}]
Engine.Model.AABB.mIntersecting =
  \ (ds_deYV :: Data.Maybe.Maybe Engine.Model.AABB.AABB)
    (ds1_deYW :: Data.Maybe.Maybe Engine.Model.AABB.AABB) ->
    case ds_deYV of _ {
      Data.Maybe.Nothing ->
        case ds1_deYW of _ {
          Data.Maybe.Nothing -> GHC.Types.False;
          Data.Maybe.Just ipv_sf1K -> GHC.Types.False
        };
      Data.Maybe.Just left_aeVm ->
        case ds1_deYW of _ {
          Data.Maybe.Nothing -> GHC.Types.False;
          Data.Maybe.Just right_aeVn ->
            Engine.Model.AABB.intersecting left_aeVm right_aeVn
        }
    }

Rec {
Engine.Model.AABB.anyIntersect [Occ=LoopBreaker]
  :: Engine.Model.AABB.AABB
     -> [Engine.Model.AABB.AABB] -> GHC.Types.Bool
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LS]
Engine.Model.AABB.anyIntersect =
  \ (l_aeVo :: Engine.Model.AABB.AABB)
    (ds_deYR :: [Engine.Model.AABB.AABB]) ->
    case ds_deYR of _ {
      [] -> GHC.Types.False;
      : r_aeVp rs_aeVq ->
        case l_aeVo
        of wild1_XJ { Engine.Model.AABB.AABB ds1_deYH ds2_deYI ->
        case ds1_deYH
        of _ { Engine.Core.Vec.Vec3 min1x_aeVr min1y_aeVs min1z_aeVt ->
        case min1x_aeVr
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x_sfYi ->
        case min1y_aeVs
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_sfYy ->
        case min1z_aeVt
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_sfYO ->
        case ds2_deYI
        of _ { Engine.Core.Vec.Vec3 max1x_aeVu max1y_aeVv max1z_aeVw ->
        case max1x_aeVu
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x3_sfYa ->
        case max1y_aeVv
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x4_sfYq ->
        case max1z_aeVw
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x5_sfYG ->
        case r_aeVp of _ { Engine.Model.AABB.AABB ds3_deYJ ds4_deYK ->
        case ds3_deYJ
        of _ { Engine.Core.Vec.Vec3 min2x_aeVx min2y_aeVy min2z_aeVz ->
        case min2x_aeVx
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y_sfYe ->
        case min2y_aeVy
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_sfYu ->
        case min2z_aeVz
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y2_sfYK ->
        case ds4_deYK
        of _ { Engine.Core.Vec.Vec3 max2x_aeVA max2y_aeVB max2z_aeVC ->
        case max2x_aeVA
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y3_sfYm ->
        case max2y_aeVB
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y4_sfYC ->
        case max2z_aeVC
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y5_sfYS ->
        case GHC.Prim.gtFloat# x3_sfYa y_sfYe of _ {
          GHC.Types.False -> Engine.Model.AABB.anyIntersect wild1_XJ rs_aeVq;
          GHC.Types.True ->
            case GHC.Prim.ltFloat# x_sfYi y3_sfYm of _ {
              GHC.Types.False -> Engine.Model.AABB.anyIntersect wild1_XJ rs_aeVq;
              GHC.Types.True ->
                case GHC.Prim.gtFloat# x4_sfYq y1_sfYu of _ {
                  GHC.Types.False -> Engine.Model.AABB.anyIntersect wild1_XJ rs_aeVq;
                  GHC.Types.True ->
                    case GHC.Prim.ltFloat# x1_sfYy y4_sfYC of _ {
                      GHC.Types.False -> Engine.Model.AABB.anyIntersect wild1_XJ rs_aeVq;
                      GHC.Types.True ->
                        case GHC.Prim.gtFloat# x5_sfYG y2_sfYK of _ {
                          GHC.Types.False -> Engine.Model.AABB.anyIntersect wild1_XJ rs_aeVq;
                          GHC.Types.True ->
                            case GHC.Prim.ltFloat# x2_sfYO y5_sfYS of _ {
                              GHC.Types.False -> Engine.Model.AABB.anyIntersect wild1_XJ rs_aeVq;
                              GHC.Types.True -> GHC.Types.True
                            }
                        }
                    }
                }
            }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
    }
end Rec }


------ Local rules for imported ids --------
"SPEC Engine.Model.AABB.max3 [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]" [ALWAYS]
    forall ($dOrd_sf57
              :: GHC.Classes.Ord Graphics.Rendering.OpenGL.Raw.Types.GLfloat).
      Engine.Model.AABB.max3 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             $dOrd_sf57
      = Engine.Model.AABB.max3_$smax3
"SPEC Engine.Model.AABB.min3 [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]" [ALWAYS]
    forall ($dOrd_sf58
              :: GHC.Classes.Ord Graphics.Rendering.OpenGL.Raw.Types.GLfloat).
      Engine.Model.AABB.min3 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             $dOrd_sf58
      = Engine.Model.AABB.min3_$smin3


[ 7 of 17] Compiling Engine.Model.Model ( Engine/Model/Model.hs, Engine/Model/Model.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 621, types: 817, coercions: 90}

Engine.Model.Model.$WModel [InlPrag=INLINE]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> [Engine.Graphics.Shaders.ShaderAttrib]
     -> [Engine.Graphics.Textures.Texture]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLint
     -> Data.Maybe.Maybe [Engine.Model.AABB.AABB]
     -> Data.Maybe.Maybe Engine.Model.AABB.AABB
     -> Engine.Model.Model.Model
[GblId[DataConWrapper],
 Arity=6,
 Caf=NoCafRefs,
 Str=DmdType SSSSSSm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=6, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (tpl_B1 [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                 (tpl_B2 [Occ=Once] :: [Engine.Graphics.Shaders.ShaderAttrib])
                 (tpl_B3 [Occ=Once] :: [Engine.Graphics.Textures.Texture])
                 (tpl_B4 [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLint)
                 (tpl_B5 [Occ=Once] :: Data.Maybe.Maybe [Engine.Model.AABB.AABB])
                 (tpl_B6 [Occ=Once] :: Data.Maybe.Maybe Engine.Model.AABB.AABB) ->
                 case tpl_B1 of tpl_X8 { __DEFAULT ->
                 case tpl_B2 of tpl_Xa { __DEFAULT ->
                 case tpl_B3 of tpl_Xc { __DEFAULT ->
                 case tpl_B4 of tpl_Xe { __DEFAULT ->
                 case tpl_B5 of tpl_Xg { __DEFAULT ->
                 case tpl_B6 of tpl_Xi { __DEFAULT ->
                 Engine.Model.Model.Model tpl_X8 tpl_Xa tpl_Xc tpl_Xe tpl_Xg tpl_Xi
                 }
                 }
                 }
                 }
                 }
                 }}]
Engine.Model.Model.$WModel =
  \ (tpl_B1 [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (tpl_B2 [Occ=Once] :: [Engine.Graphics.Shaders.ShaderAttrib])
    (tpl_B3 [Occ=Once] :: [Engine.Graphics.Textures.Texture])
    (tpl_B4 [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLint)
    (tpl_B5 [Occ=Once] :: Data.Maybe.Maybe [Engine.Model.AABB.AABB])
    (tpl_B6 [Occ=Once] :: Data.Maybe.Maybe Engine.Model.AABB.AABB) ->
    case tpl_B1 of tpl_X8 { __DEFAULT ->
    case tpl_B2 of tpl_Xa { __DEFAULT ->
    case tpl_B3 of tpl_Xc { __DEFAULT ->
    case tpl_B4 of tpl_Xe { __DEFAULT ->
    case tpl_B5 of tpl_Xg { __DEFAULT ->
    case tpl_B6 of tpl_Xi { __DEFAULT ->
    Engine.Model.Model.Model tpl_X8 tpl_Xa tpl_Xc tpl_Xe tpl_Xg tpl_Xi
    }
    }
    }
    }
    }
    }

lvl_riVu :: [GHC.Types.Char]
[GblId]
lvl_riVu =
  GHC.CString.unpackCString#
    "Model.createShaderAttribs: given lists are not the same length."

$wfail_riVv :: [Engine.Graphics.Shaders.ShaderAttrib]
[GblId, Str=DmdType b]
$wfail_riVv =
  GHC.Err.error @ [Engine.Graphics.Shaders.ShaderAttrib] lvl_riVu

Rec {
Engine.Model.Model.createShaderAttribs [Occ=LoopBreaker]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> [Engine.Graphics.Shaders.ShaderAttrib]
[GblId, Arity=3, Str=DmdType SSS]
Engine.Model.Model.createShaderAttribs =
  \ (ds_diAh :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint])
    (ds1_diAi :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint])
    (ds2_diAj :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]) ->
    case ds_diAh of _ {
      [] ->
        case ds1_diAi of _ {
          [] ->
            case ds2_diAj of _ {
              [] -> GHC.Types.[] @ Engine.Graphics.Shaders.ShaderAttrib;
              : ipv_siBs ipv1_siBt -> $wfail_riVv
            };
          : ipv_siBv ipv1_siBw -> $wfail_riVv
        };
      : attr_ahT6 attrs_ahT7 ->
        case ds1_diAi of _ {
          [] -> $wfail_riVv;
          : buff_ahT8 buffs_ahT9 ->
            case ds2_diAj of _ {
              [] -> $wfail_riVv;
              : size_ahTa sizes_ahTb ->
                GHC.Types.:
                  @ Engine.Graphics.Shaders.ShaderAttrib
                  (Engine.Core.Vec.$WVec3
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                     attr_ahT6
                     buff_ahT8
                     size_ahTa)
                  (Engine.Model.Model.createShaderAttribs
                     attrs_ahT7 buffs_ahT9 sizes_ahTb)
            }
        }
    }
end Rec }

Engine.Model.Model.modelAABBs
  :: Engine.Model.Model.Model
     -> Data.Maybe.Maybe [Engine.Model.AABB.AABB]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(UUUUSU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_diB7 [Occ=Once!] :: Engine.Model.Model.Model) ->
                 case ds_diB7
                 of _ { Engine.Model.Model.Model _ _ _ _ ds5_diBc [Occ=Once] _ ->
                 ds5_diBc
                 }}]
Engine.Model.Model.modelAABBs =
  \ (ds_diB7 :: Engine.Model.Model.Model) ->
    case ds_diB7
    of _
    { Engine.Model.Model.Model ds1_diB8
                               ds2_diB9
                               ds3_diBa
                               ds4_diBb
                               ds5_diBc
                               ds6_diBd ->
    ds5_diBc
    }

Engine.Model.Model.modelShader
  :: Engine.Model.Model.Model
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SUUUUU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_diAB [Occ=Once!] :: Engine.Model.Model.Model) ->
                 case ds_diAB
                 of _ { Engine.Model.Model.Model ds1_diAC [Occ=Once] _ _ _ _ _ ->
                 ds1_diAC
                 }}]
Engine.Model.Model.modelShader =
  \ (ds_diAB :: Engine.Model.Model.Model) ->
    case ds_diAB
    of _
    { Engine.Model.Model.Model ds1_diAC
                               ds2_diAD
                               ds3_diAE
                               ds4_diAF
                               ds5_diAG
                               ds6_diAH ->
    ds1_diAC
    }

Engine.Model.Model.modelShaderVars
  :: Engine.Model.Model.Model
     -> [Engine.Graphics.Shaders.ShaderAttrib]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(USUUUU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_diAJ [Occ=Once!] :: Engine.Model.Model.Model) ->
                 case ds_diAJ
                 of _ { Engine.Model.Model.Model _ ds2_diAL [Occ=Once] _ _ _ _ ->
                 ds2_diAL
                 }}]
Engine.Model.Model.modelShaderVars =
  \ (ds_diAJ :: Engine.Model.Model.Model) ->
    case ds_diAJ
    of _
    { Engine.Model.Model.Model ds1_diAK
                               ds2_diAL
                               ds3_diAM
                               ds4_diAN
                               ds5_diAO
                               ds6_diAP ->
    ds2_diAL
    }

Engine.Model.Model.modelTextures
  :: Engine.Model.Model.Model -> [Engine.Graphics.Textures.Texture]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(UUSUUU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_diAR [Occ=Once!] :: Engine.Model.Model.Model) ->
                 case ds_diAR
                 of _ { Engine.Model.Model.Model _ _ ds3_diAU [Occ=Once] _ _ _ ->
                 ds3_diAU
                 }}]
Engine.Model.Model.modelTextures =
  \ (ds_diAR :: Engine.Model.Model.Model) ->
    case ds_diAR
    of _
    { Engine.Model.Model.Model ds1_diAS
                               ds2_diAT
                               ds3_diAU
                               ds4_diAV
                               ds5_diAW
                               ds6_diAX ->
    ds3_diAU
    }

Engine.Model.Model.modelVertCount
  :: Engine.Model.Model.Model
     -> Graphics.Rendering.OpenGL.Raw.Types.GLint
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(UUUSUU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_diAZ [Occ=Once!] :: Engine.Model.Model.Model) ->
                 case ds_diAZ
                 of _ { Engine.Model.Model.Model _ _ _ ds4_diB3 [Occ=Once] _ _ ->
                 ds4_diB3
                 }}]
Engine.Model.Model.modelVertCount =
  \ (ds_diAZ :: Engine.Model.Model.Model) ->
    case ds_diAZ
    of _
    { Engine.Model.Model.Model ds1_diB0
                               ds2_diB1
                               ds3_diB2
                               ds4_diB3
                               ds5_diB4
                               ds6_diB5 ->
    ds4_diB3
    }

Engine.Model.Model.modelWholeAABB
  :: Engine.Model.Model.Model
     -> Data.Maybe.Maybe Engine.Model.AABB.AABB
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(UUUUUS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_diBf [Occ=Once!] :: Engine.Model.Model.Model) ->
                 case ds_diBf
                 of _ { Engine.Model.Model.Model _ _ _ _ _ ds6_diBl [Occ=Once] ->
                 ds6_diBl
                 }}]
Engine.Model.Model.modelWholeAABB =
  \ (ds_diBf :: Engine.Model.Model.Model) ->
    case ds_diBf
    of _
    { Engine.Model.Model.Model ds1_diBg
                               ds2_diBh
                               ds3_diBi
                               ds4_diBj
                               ds5_diBk
                               ds6_diBl ->
    ds6_diBl
    }

Rec {
Engine.Model.Model.$wsplitData [Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType LS]
Engine.Model.Model.$wsplitData =
  \ (ww_siQH :: GHC.Prim.Int#)
    (w_siQJ :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case GHC.List.$wlen
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat w_siQJ 0
    of ww1_adam { __DEFAULT ->
    case GHC.Prim.>=# ww1_adam ww_siQH of _ {
      GHC.Types.False ->
        GHC.Types.[] @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat];
      GHC.Types.True ->
        let {
          ds_siD0 [Dmd=Just D(SS)]
            :: ([Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
          [LclId, Str=DmdType]
          ds_siD0 =
            case GHC.Prim.<# ww_siQH 0 of _ {
              GHC.Types.False ->
                case GHC.List.$wsplitAt#
                       @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat ww_siQH w_siQJ
                of _ { (# ww3_a4UT, ww4_a4UU #) ->
                (ww3_a4UT, ww4_a4UU)
                };
              GHC.Types.True ->
                (GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
                 w_siQJ)
            } } in
        GHC.Types.:
          @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
          (case ds_siD0 of _ { (cur_XizI, rest_Xizr) -> cur_XizI })
          (case ds_siD0 of _ { (cur_aiza, rest_XizI) ->
           Engine.Model.Model.$wsplitData ww_siQH rest_XizI
           })
    }
    }
end Rec }

Engine.Model.Model.splitData [InlPrag=INLINE[0]]
  :: GHC.Types.Int
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(L)S,
 Unf=Unf{Src=Worker=Engine.Model.Model.$wsplitData, TopLvl=True,
         Arity=2, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_siQF [Occ=Once!] :: GHC.Types.Int)
                 (w1_siQJ [Occ=Once]
                    :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
                 case w_siQF of _ { GHC.Types.I# ww_siQH [Occ=Once] ->
                 Engine.Model.Model.$wsplitData ww_siQH w1_siQJ
                 }}]
Engine.Model.Model.splitData =
  \ (w_siQF :: GHC.Types.Int)
    (w1_siQJ :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_siQF of _ { GHC.Types.I# ww_siQH ->
    Engine.Model.Model.$wsplitData ww_siQH w1_siQJ
    }

Engine.Model.Model.splitAllData
  :: GHC.Types.Int
     -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> [[[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType LS,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 50 0}]
Engine.Model.Model.splitAllData =
  \ (x_a3uM :: GHC.Types.Int)
    (eta_B1 :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]) ->
    GHC.Base.map
      @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
      @ [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
      (Engine.Model.Model.splitData x_a3uM)
      eta_B1

Engine.Model.Model.bufferId1
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Graphics.Rendering.OpenGL.Raw.Types.GLuint #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 157 0}]
Engine.Model.Model.bufferId1 =
  \ (info_ahTm :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.newAlignedPinnedByteArray#
           @ GHC.Prim.RealWorld 4 4 eta_B1
    of _ { (# ipv_acnC, ipv1_acnD #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ GHC.Prim.RealWorld ipv1_acnD ipv_acnC
    of _ { (# ipv2_acnH, ipv3_acnI #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glGenVertexArrays
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLsizei
               -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLuint
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CInt>
                    -> GHC.Ptr.Ptr <(Foreign.C.Types.NTCo:CUInt)> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CInt
                       -> GHC.Ptr.Ptr Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Int.Int32 -> GHC.Ptr.Ptr GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds4_aiEC ->
    let {
      a_scok [Dmd=Just L] :: GHC.Prim.Addr#
      [LclId, Str=DmdType]
      a_scok = GHC.Prim.byteArrayContents# ipv3_acnI } in
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Int#
                -> GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aiEL
           ds4_aiEC 1 a_scok ipv2_acnH
    of _ { (# ds10_aiEQ #) ->
    case GHC.Prim.readWord32OffAddr#
           @ GHC.Prim.RealWorld a_scok 0 ds10_aiEQ
    of _ { (# ipv4_aeEU, ipv5_aeEV #) ->
    case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv3_acnI ipv4_aeEU
    of s4_acnP { __DEFAULT ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glBindVertexArray
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds7_aiF1 ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aiF6
           ds7_aiF1 ipv5_aeEV s4_acnP
    of _ { (# ds8_aiFb #) ->
    Engine.Core.Util.fillNewBuffer1 info_ahTm ds8_aiFb
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Model.Model.bufferId
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Model.bufferId =
  Engine.Model.Model.bufferId1
  `cast` (<[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>
          -> Sym
               <(GHC.Types.NTCo:IO <Graphics.Rendering.OpenGL.Raw.Types.GLuint>)>
          :: ([Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint #))
               ~#
             ([Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
              -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLuint))

Rec {
Engine.Model.Model.idAll1 [Occ=LoopBreaker]
  :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Graphics.Rendering.OpenGL.Raw.Types.GLuint] #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.Model.idAll1 =
  \ (ds_diAe :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_diAe of _ {
      [] ->
        (# eta_B1,
           GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLuint #);
      : cur_ahTc others_ahTd ->
        case Engine.Model.Model.bufferId1 cur_ahTc eta_B1
        of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
        case Engine.Model.Model.idAll1 others_ahTd ipv_a3Ui
        of _ { (# ipv2_X3VC, ipv3_X3VE #) ->
        (# ipv2_X3VC,
           GHC.Types.:
             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint ipv1_a3Uj ipv3_X3VE #)
        }
        }
    }
end Rec }

Engine.Model.Model.idAll
  :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> GHC.Types.IO [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Model.idAll =
  Engine.Model.Model.idAll1
  `cast` (<[[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <[Graphics.Rendering.OpenGL.Raw.Types.GLuint]>)>
          :: ([[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Graphics.Rendering.OpenGL.Raw.Types.GLuint] #))
               ~#
             ([[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
              -> GHC.Types.IO [Graphics.Rendering.OpenGL.Raw.Types.GLuint]))

Rec {
Engine.Model.Model.createAttribs1 [Occ=LoopBreaker]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> [GHC.Base.String]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Graphics.Rendering.OpenGL.Raw.Types.GLuint] #)
[GblId, Arity=3, Str=DmdType LSL]
Engine.Model.Model.createAttribs1 =
  \ (prog_ahTg :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (ds_diAb :: [GHC.Base.String])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_diAb of _ {
      [] ->
        (# eta_B1,
           GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLuint #);
      : attrName_ahTh xs_ahTi ->
        case GHC.IO.Encoding.getForeignEncoding1
        of _ { (getForeignEncoding4_acep, setForeignEncoding1_aceq) ->
        case (getForeignEncoding4_acep
              `cast` (<GHC.Types.NTCo:IO <GHC.IO.Encoding.Types.TextEncoding>>
                      :: GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding
                           ~#
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                GHC.IO.Encoding.Types.TextEncoding #))))
               eta_B1
        of _ { (# ipv_acek, ipv1_acel #) ->
        case GHC.Foreign.charIsRepresentable3
               @ Graphics.Rendering.OpenGL.Raw.Types.GLint
               ipv1_acel
               attrName_ahTh
               (Graphics.Rendering.OpenGL.Raw.Core31.Functions.dyn_glGetAttribLocation
                  (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glGetAttribLocation
                     @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint
                        -> GHC.Ptr.Ptr Graphics.Rendering.OpenGL.Raw.Types.GLchar
                        -> GHC.Types.IO Graphics.Rendering.OpenGL.Raw.Types.GLint))
                  prog_ahTg)
               ipv_acek
        of _ { (# ipv2_a3Ui, ipv3_a3Uj #) ->
        case Engine.Model.Model.createAttribs1 prog_ahTg xs_ahTi ipv2_a3Ui
        of _ { (# ipv4_X3VP, ipv5_X3VR #) ->
        (# ipv4_X3VP,
           GHC.Types.:
             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
             (case ipv3_a3Uj
                   `cast` (<Foreign.C.Types.NTCo:CInt>
                           :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
              of _ { GHC.Int.I32# x#_ac3v ->
              (GHC.Word.W32#
                 (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# x#_ac3v)))
              `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                      :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt)
              })
             ipv5_X3VR #)
        }
        }
        }
        }
    }
end Rec }

Engine.Model.Model.createAttribs
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> [GHC.Base.String]
     -> GHC.Types.IO [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Model.createAttribs =
  Engine.Model.Model.createAttribs1
  `cast` (<Graphics.Rendering.OpenGL.Raw.Types.GLuint>
          -> <[GHC.Base.String]>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <[Graphics.Rendering.OpenGL.Raw.Types.GLuint]>)>
          :: (Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> [GHC.Base.String]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Graphics.Rendering.OpenGL.Raw.Types.GLuint] #))
               ~#
             (Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> [GHC.Base.String]
              -> GHC.Types.IO [Graphics.Rendering.OpenGL.Raw.Types.GLuint]))

Engine.Model.Model.createModel1
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> [GHC.Base.String]
     -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLint
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Model.Model.Model #)
[GblId, Arity=7, Str=DmdType LLLLLLL]
Engine.Model.Model.createModel1 =
  \ (vert_ahSW :: GHC.IO.FilePath)
    (frag_ahSX :: GHC.IO.FilePath)
    (attrNames_ahSY :: [GHC.Base.String])
    (buffData_ahSZ :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]])
    (valLens_ahT0 :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint])
    (vertCount_ahT1 :: Graphics.Rendering.OpenGL.Raw.Types.GLint)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Graphics.Shaders.loadProgram1
           vert_ahSW frag_ahSX eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Engine.Model.Model.createAttribs1
           ipv1_a3Uj attrNames_ahSY ipv_a3Ui
    of _ { (# ipv2_X3Wb, ipv3_X3Wd #) ->
    case Engine.Model.Model.idAll1 buffData_ahSZ ipv2_X3Wb
    of _ { (# ipv4_X3Wj, ipv5_X3Wl #) ->
    case GHC.IO.Handle.Text.hPutStr2
           GHC.IO.Handle.FD.stdout
           (case GHC.List.$wlen
                   @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] buffData_ahSZ 0
            of ww_adam { __DEFAULT ->
            GHC.Show.$wshowSignedInt 0 ww_adam (GHC.Types.[] @ GHC.Types.Char)
            })
           GHC.Types.True
           ipv4_X3Wj
    of _ { (# ipv6_X3WA, _ #) ->
    case GHC.IO.Handle.Text.hPutStr2
           GHC.IO.Handle.FD.stdout
           (case GHC.List.$wlen
                   @ Graphics.Rendering.OpenGL.Raw.Types.GLuint ipv3_X3Wd 0
            of ww_adam { __DEFAULT ->
            GHC.Show.$wshowSignedInt 0 ww_adam (GHC.Types.[] @ GHC.Types.Char)
            })
           GHC.Types.True
           ipv6_X3WA
    of _ { (# ipv8_X3Wz, _ #) ->
    case GHC.IO.Handle.Text.hPutStr2
           GHC.IO.Handle.FD.stdout
           (case GHC.List.$wlen
                   @ Graphics.Rendering.OpenGL.Raw.Types.GLuint valLens_ahT0 0
            of ww_adam { __DEFAULT ->
            GHC.Show.$wshowSignedInt 0 ww_adam (GHC.Types.[] @ GHC.Types.Char)
            })
           GHC.Types.True
           ipv8_X3Wz
    of _ { (# ipv10_X3YX, _ #) ->
    case GHC.IO.Handle.Text.hPutStr2
           GHC.IO.Handle.FD.stdout
           (case GHC.List.$wlen
                   @ Graphics.Rendering.OpenGL.Raw.Types.GLuint ipv5_X3Wl 0
            of ww_adam { __DEFAULT ->
            GHC.Show.$wshowSignedInt 0 ww_adam (GHC.Types.[] @ GHC.Types.Char)
            })
           GHC.Types.True
           ipv10_X3YX
    of _ { (# ipv12_X3Wv, _ #) ->
    (# ipv12_X3Wv,
       case ipv1_a3Uj
            `cast` (<Foreign.C.Types.NTCo:CUInt>
                    :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
       of nt_siGg { GHC.Word.W32# ipv14_siGh ->
       case Engine.Model.Model.createShaderAttribs
              ipv3_X3Wd ipv5_X3Wl valLens_ahT0
       of tpl_Xa { __DEFAULT ->
       case vertCount_ahT1
            `cast` (<Foreign.C.Types.NTCo:CInt>
                    :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
       of nt1_siGm { GHC.Int.I32# ipv15_siGn ->
       Engine.Model.Model.Model
         (nt_siGg
          `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                  :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
         tpl_Xa
         (GHC.Types.[] @ Engine.Graphics.Textures.Texture)
         (nt1_siGm
          `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                  :: GHC.Int.Int32 ~# Foreign.C.Types.CInt))
         (Data.Maybe.Just
            @ [Engine.Model.AABB.AABB]
            (case buffData_ahSZ of _ {
               [] -> case GHC.List.badHead of wild1_00 { };
               : x_ac7a ds8_ac7b -> Engine.Model.AABB.aabbByFace x_ac7a
             }))
         (Data.Maybe.Just
            @ Engine.Model.AABB.AABB
            (case buffData_ahSZ of _ {
               [] -> case GHC.List.badHead of wild1_00 { };
               : x_ac7a ds8_ac7b -> Engine.Model.AABB.aabbFromPoints x_ac7a
             }))
       }
       }
       } #)
    }
    }
    }
    }
    }
    }
    }

Engine.Model.Model.createModel
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> [GHC.Base.String]
     -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLint
     -> GHC.Types.IO Engine.Model.Model.Model
[GblId,
 Arity=7,
 Str=DmdType LLLLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Model.createModel =
  Engine.Model.Model.createModel1
  `cast` (<GHC.IO.FilePath>
          -> <GHC.IO.FilePath>
          -> <[GHC.Base.String]>
          -> <[[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]>
          -> <[Graphics.Rendering.OpenGL.Raw.Types.GLuint]>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLint>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Model.Model.Model>)>
          :: (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> [GHC.Base.String]
              -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
              -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
              -> Graphics.Rendering.OpenGL.Raw.Types.GLint
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Model.Model.Model #))
               ~#
             (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> [GHC.Base.String]
              -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
              -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
              -> Graphics.Rendering.OpenGL.Raw.Types.GLint
              -> GHC.Types.IO Engine.Model.Model.Model))

Engine.Model.Model.createModelSplit1
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> [GHC.Base.String]
     -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Model.Model.Model] #)
[GblId, Arity=7, Str=DmdType LLLLLLL]
Engine.Model.Model.createModelSplit1 =
  \ (vert_ahSJ :: GHC.IO.FilePath)
    (frag_ahSK :: GHC.IO.FilePath)
    (attrNames_ahSL :: [GHC.Base.String])
    (buffData_ahSM :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]])
    (valLens_ahSN :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint])
    (splits_ahSO :: GHC.Types.Int)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Text.hPutStr2
           GHC.IO.Handle.FD.stdout
           (case GHC.List.$wlen
                   @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] buffData_ahSM 0
            of ww_adam { __DEFAULT ->
            GHC.Show.$wshowSignedInt 0 ww_adam (GHC.Types.[] @ GHC.Types.Char)
            })
           GHC.Types.True
           eta_B1
    of _ { (# ipv_a3Ui, _ #) ->
    case GHC.IO.Handle.Text.hPutStr2
           GHC.IO.Handle.FD.stdout
           (case buffData_ahSM of _ {
              [] -> case GHC.List.badHead of wild1_00 { };
              : x_ac7a ds2_ac7b ->
                case GHC.List.$wlen
                       @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat x_ac7a 0
                of ww_adam { __DEFAULT ->
                GHC.Show.$wshowSignedInt 0 ww_adam (GHC.Types.[] @ GHC.Types.Char)
                }
            })
           GHC.Types.True
           ipv_a3Ui
    of _ { (# ipv2_X3Vp, _ #) ->
    let {
      splitUp_siCW :: [[[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]]
      [LclId, Str=DmdType]
      splitUp_siCW =
        GHC.Base.map
          @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
          @ [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
          (let {
             w_siQF :: GHC.Types.Int
             [LclId]
             w_siQF =
               case splits_ahSO of _ { GHC.Types.I# x_a4ci ->
               GHC.Types.I# (GHC.Prim.*# x_a4ci 3)
               } } in
           \ (w1_siQJ :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
             case w_siQF of _ { GHC.Types.I# ww_siQH ->
             Engine.Model.Model.$wsplitData ww_siQH w1_siQJ
             })
          buffData_ahSM } in
    case GHC.IO.Handle.Text.hPutStr2
           GHC.IO.Handle.FD.stdout
           (case GHC.List.$wlen
                   @ [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]] splitUp_siCW 0
            of ww_adam { __DEFAULT ->
            GHC.Show.$wshowSignedInt 0 ww_adam (GHC.Types.[] @ GHC.Types.Char)
            })
           GHC.Types.True
           ipv2_X3Vp
    of _ { (# ipv4_X3Vt, _ #) ->
    case GHC.IO.Handle.Text.hPutStr2
           GHC.IO.Handle.FD.stdout
           (case splitUp_siCW of _ {
              [] -> case GHC.List.badHead of wild1_00 { };
              : x_ac7a ds4_ac7b ->
                case GHC.List.$wlen
                       @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] x_ac7a 0
                of ww_adam { __DEFAULT ->
                GHC.Show.$wshowSignedInt 0 ww_adam (GHC.Types.[] @ GHC.Types.Char)
                }
            })
           GHC.Types.True
           ipv4_X3Vt
    of _ { (# ipv6_X3Vx, _ #) ->
    letrec {
      a_siOf [Occ=LoopBreaker]
        :: [[[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]]
           -> GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                 [Engine.Model.Model.Model] #)
      [LclId, Arity=2, Str=DmdType SL]
      a_siOf =
        \ (ds_a3qq :: [[[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]])
          (eta1_X1h :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case ds_a3qq of _ {
            [] -> (# eta1_X1h, GHC.Types.[] @ Engine.Model.Model.Model #);
            : y_a3qv ys_a3qw ->
              case Engine.Model.Model.createModel1
                     vert_ahSJ
                     frag_ahSK
                     attrNames_ahSL
                     y_a3qv
                     valLens_ahSN
                     (case GHC.List.$wlen
                             @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] y_a3qv 0
                      of ww_adam { __DEFAULT ->
                      case GHC.Classes.divInt# ww_adam 3 of ww1_aiMd { __DEFAULT ->
                      (GHC.Int.I32# (GHC.Prim.narrow32Int# ww1_aiMd))
                      `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                              :: GHC.Int.Int32 ~# Foreign.C.Types.CInt)
                      }
                      })
                     eta1_X1h
              of _ { (# ipv8_X3VE, ipv9_X3VG #) ->
              case a_siOf ys_a3qw ipv8_X3VE
              of _ { (# ipv10_X3Ww, ipv11_X3Wy #) ->
              (# ipv10_X3Ww,
                 GHC.Types.: @ Engine.Model.Model.Model ipv9_X3VG ipv11_X3Wy #)
              }
              }
          }; } in
    a_siOf splitUp_siCW ipv6_X3Vx
    }
    }
    }
    }

Engine.Model.Model.createModelSplit
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> [GHC.Base.String]
     -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> GHC.Types.Int
     -> GHC.Types.IO [Engine.Model.Model.Model]
[GblId,
 Arity=7,
 Str=DmdType LLLLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Model.createModelSplit =
  Engine.Model.Model.createModelSplit1
  `cast` (<GHC.IO.FilePath>
          -> <GHC.IO.FilePath>
          -> <[GHC.Base.String]>
          -> <[[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]>
          -> <[Graphics.Rendering.OpenGL.Raw.Types.GLuint]>
          -> <GHC.Types.Int>
          -> Sym <(GHC.Types.NTCo:IO <[Engine.Model.Model.Model]>)>
          :: (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> [GHC.Base.String]
              -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
              -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
              -> GHC.Types.Int
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Model.Model.Model] #))
               ~#
             (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> [GHC.Base.String]
              -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
              -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
              -> GHC.Types.Int
              -> GHC.Types.IO [Engine.Model.Model.Model]))

Engine.Model.Model.$wa
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] -> GHC.Prim.Word#
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 81 0}]
Engine.Model.Model.$wa =
  \ (w_siQM :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case GHC.List.$wlen
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat w_siQM 0
    of ww_adam { __DEFAULT ->
    case GHC.Classes.divInt# ww_adam 3 of ww1_aiMd { __DEFAULT ->
    GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ww1_aiMd)
    }
    }

Engine.Model.Model.lengthAll1 [InlPrag=INLINE[0]]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType Sm,
 Unf=Unf{Src=Worker=Engine.Model.Model.$wa, TopLvl=True, Arity=1,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_siQM [Occ=Once]
                    :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
                 case Engine.Model.Model.$wa w_siQM of ww_siQP { __DEFAULT ->
                 (GHC.Word.W32# ww_siQP)
                 `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                         :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt)
                 }}]
Engine.Model.Model.lengthAll1 =
  \ (w_siQM :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case Engine.Model.Model.$wa w_siQM of ww_siQP { __DEFAULT ->
    (GHC.Word.W32# ww_siQP)
    `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
            :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt)
    }

Engine.Model.Model.lengthAll
  :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Arity=1,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 60}]
Engine.Model.Model.lengthAll =
  GHC.Base.map
    @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    Engine.Model.Model.lengthAll1



[ 8 of 17] Compiling Engine.Core.World ( Engine/Core/World.hs, Engine/Core/World.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 543, types: 935, coercions: 51}

Engine.Core.World.$WWorldState [InlPrag=INLINE]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> Data.Time.Clock.UTC.UTCTime
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.World.WorldState
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType SSSm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (tpl_B1 [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                 (tpl_B2 [Occ=Once] :: Data.Time.Clock.UTC.UTCTime)
                 (tpl_B3 [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 case tpl_B1 of tpl_X5 { __DEFAULT ->
                 case tpl_B2 of tpl_X7 { __DEFAULT ->
                 case tpl_B3 of tpl_X9 { __DEFAULT ->
                 Engine.Core.World.WorldState tpl_X5 tpl_X7 tpl_X9
                 }
                 }
                 }}]
Engine.Core.World.$WWorldState =
  \ (tpl_B1 [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (tpl_B2 [Occ=Once] :: Data.Time.Clock.UTC.UTCTime)
    (tpl_B3 [Occ=Once]
       :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case tpl_B1 of tpl_X5 { __DEFAULT ->
    case tpl_B2 of tpl_X7 { __DEFAULT ->
    case tpl_B3 of tpl_X9 { __DEFAULT ->
    Engine.Core.World.WorldState tpl_X5 tpl_X7 tpl_X9
    }
    }
    }

Engine.Core.World.$WWorld [InlPrag=INLINE]
  :: forall t_akyo.
     GHC.IORef.IORef (Engine.Core.World.GameObject t_akyo)
     -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_akyo)]
     -> [Engine.Graphics.Shaders.ShaderUniform]
     -> GHC.IORef.IORef Engine.Core.World.WorldState
     -> Engine.Core.World.World t_akyo
[GblId[DataConWrapper],
 Arity=4,
 Caf=NoCafRefs,
 Str=DmdType SSSSm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ t_akyo)
                 (tpl_B1 [Occ=Once]
                    :: GHC.IORef.IORef (Engine.Core.World.GameObject t_akyo))
                 (tpl_B2 [Occ=Once]
                    :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_akyo)])
                 (tpl_B3 [Occ=Once] :: [Engine.Graphics.Shaders.ShaderUniform])
                 (tpl_B4 [Occ=Once]
                    :: GHC.IORef.IORef Engine.Core.World.WorldState) ->
                 case tpl_B1 of tpl_X7 { __DEFAULT ->
                 case tpl_B2 of tpl_X9 { __DEFAULT ->
                 case tpl_B3 of tpl_Xb { __DEFAULT ->
                 case tpl_B4 of tpl_Xd { __DEFAULT ->
                 Engine.Core.World.World @ t_akyo tpl_X7 tpl_X9 tpl_Xb tpl_Xd
                 }
                 }
                 }
                 }}]
Engine.Core.World.$WWorld =
  \ (@ t_akyo)
    (tpl_B1 [Occ=Once]
       :: GHC.IORef.IORef (Engine.Core.World.GameObject t_akyo))
    (tpl_B2 [Occ=Once]
       :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_akyo)])
    (tpl_B3 [Occ=Once] :: [Engine.Graphics.Shaders.ShaderUniform])
    (tpl_B4 [Occ=Once]
       :: GHC.IORef.IORef Engine.Core.World.WorldState) ->
    case tpl_B1 of tpl_X7 { __DEFAULT ->
    case tpl_B2 of tpl_X9 { __DEFAULT ->
    case tpl_B3 of tpl_Xb { __DEFAULT ->
    case tpl_B4 of tpl_Xd { __DEFAULT ->
    Engine.Core.World.World @ t_akyo tpl_X7 tpl_X9 tpl_Xb tpl_Xd
    }
    }
    }
    }

Engine.Core.World.$WInput [InlPrag=INLINE]
  :: forall t_ajHY.
     [(Graphics.UI.GLFW.Types.Key,
       GHC.Types.Bool,
       Engine.Core.World.World t_ajHY
       -> Engine.Core.World.GameObject t_ajHY
       -> GHC.Types.IO (Engine.Core.World.GameObject t_ajHY))]
     -> Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.World.Input t_ajHY
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType SSSm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ t_ajHY)
                 (tpl_B1 [Occ=Once]
                    :: [(Graphics.UI.GLFW.Types.Key,
                         GHC.Types.Bool,
                         Engine.Core.World.World t_ajHY
                         -> Engine.Core.World.GameObject t_ajHY
                         -> GHC.Types.IO (Engine.Core.World.GameObject t_ajHY))])
                 (tpl_B2 [Occ=Once]
                    :: Engine.Core.Vec.Vec2
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (tpl_B3 [Occ=Once]
                    :: Engine.Core.Vec.Vec2
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 case tpl_B1 of tpl_X6 { __DEFAULT ->
                 case tpl_B2 of tpl_X8 { __DEFAULT ->
                 case tpl_B3 of tpl_Xa { __DEFAULT ->
                 Engine.Core.World.Input @ t_ajHY tpl_X6 tpl_X8 tpl_Xa
                 }
                 }
                 }}]
Engine.Core.World.$WInput =
  \ (@ t_ajHY)
    (tpl_B1 [Occ=Once]
       :: [(Graphics.UI.GLFW.Types.Key,
            GHC.Types.Bool,
            Engine.Core.World.World t_ajHY
            -> Engine.Core.World.GameObject t_ajHY
            -> GHC.Types.IO (Engine.Core.World.GameObject t_ajHY))])
    (tpl_B2 [Occ=Once]
       :: Engine.Core.Vec.Vec2
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (tpl_B3 [Occ=Once]
       :: Engine.Core.Vec.Vec2
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case tpl_B1 of tpl_X6 { __DEFAULT ->
    case tpl_B2 of tpl_X8 { __DEFAULT ->
    case tpl_B3 of tpl_Xa { __DEFAULT ->
    Engine.Core.World.Input @ t_ajHY tpl_X6 tpl_X8 tpl_Xa
    }
    }
    }

Engine.Core.World.$WPlayer [InlPrag=INLINE]
  :: forall t_akyn.
     Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> (Engine.Core.World.World t_akyn
         -> GHC.Types.IO (Engine.Core.World.GameObject t_akyn))
     -> Engine.Core.World.Input t_akyn
     -> Engine.Core.World.GameObject t_akyn
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=DmdType SSSLS,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ t_akyn)
                 (tpl_B1 [Occ=Once]
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (tpl_B2 [Occ=Once]
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (tpl_B3 [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (tpl_B4 [Occ=Once]
                    :: Engine.Core.World.World t_akyn
                       -> GHC.Types.IO (Engine.Core.World.GameObject t_akyn))
                 (tpl_B5 [Occ=Once] :: Engine.Core.World.Input t_akyn) ->
                 case tpl_B1 of tpl_X8 { __DEFAULT ->
                 case tpl_B2 of tpl_Xa { __DEFAULT ->
                 case tpl_B3 of tpl_Xc { __DEFAULT ->
                 case tpl_B5 of tpl_Xf { __DEFAULT ->
                 Engine.Core.World.Player
                   @ t_akyn tpl_X8 tpl_Xa tpl_Xc tpl_B4 tpl_Xf
                 }
                 }
                 }
                 }}]
Engine.Core.World.$WPlayer =
  \ (@ t_akyn)
    (tpl_B1 [Occ=Once]
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (tpl_B2 [Occ=Once]
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (tpl_B3 [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (tpl_B4 [Occ=Once]
       :: Engine.Core.World.World t_akyn
          -> GHC.Types.IO (Engine.Core.World.GameObject t_akyn))
    (tpl_B5 [Occ=Once] :: Engine.Core.World.Input t_akyn) ->
    case tpl_B1 of tpl_X8 { __DEFAULT ->
    case tpl_B2 of tpl_Xa { __DEFAULT ->
    case tpl_B3 of tpl_Xc { __DEFAULT ->
    case tpl_B5 of tpl_Xf { __DEFAULT ->
    Engine.Core.World.Player
      @ t_akyn tpl_X8 tpl_Xa tpl_Xc tpl_B4 tpl_Xf
    }
    }
    }
    }

Engine.Core.World.$WPureEntity [InlPrag=INLINE]
  :: forall t_akyn.
     Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> (Engine.Core.World.GameObject t_akyn
         -> Engine.Core.World.GameObject t_akyn)
     -> Engine.Model.Model.Model
     -> t_akyn
     -> Engine.Core.World.GameObject t_akyn
[GblId[DataConWrapper],
 Arity=4,
 Caf=NoCafRefs,
 Str=DmdType SSSS,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ t_akyn)
                 (tpl_B1 [Occ=Once]
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (tpl_B2 [Occ=Once]
                    :: Engine.Core.World.GameObject t_akyn
                       -> Engine.Core.World.GameObject t_akyn)
                 (tpl_B3 [Occ=Once] :: Engine.Model.Model.Model)
                 (tpl_B4 [Occ=Once] :: t_akyn) ->
                 case tpl_B1 of tpl_X7 { __DEFAULT ->
                 case tpl_B2 of tpl_X9 { __DEFAULT ->
                 case tpl_B3 of tpl_Xb { __DEFAULT ->
                 case tpl_B4 of tpl_Xd { __DEFAULT ->
                 Engine.Core.World.PureEntity @ t_akyn tpl_X7 tpl_X9 tpl_Xb tpl_Xd
                 }
                 }
                 }
                 }}]
Engine.Core.World.$WPureEntity =
  \ (@ t_akyn)
    (tpl_B1 [Occ=Once]
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (tpl_B2 [Occ=Once]
       :: Engine.Core.World.GameObject t_akyn
          -> Engine.Core.World.GameObject t_akyn)
    (tpl_B3 [Occ=Once] :: Engine.Model.Model.Model)
    (tpl_B4 [Occ=Once] :: t_akyn) ->
    case tpl_B1 of tpl_X7 { __DEFAULT ->
    case tpl_B2 of tpl_X9 { __DEFAULT ->
    case tpl_B3 of tpl_Xb { __DEFAULT ->
    case tpl_B4 of tpl_Xd { __DEFAULT ->
    Engine.Core.World.PureEntity @ t_akyn tpl_X7 tpl_X9 tpl_Xb tpl_Xd
    }
    }
    }
    }

Engine.Core.World.$WEffectfulEntity [InlPrag=INLINE]
  :: forall t_akyn.
     Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> (Engine.Core.World.World t_akyn
         -> Engine.Core.World.GameObject t_akyn
         -> GHC.Types.IO (Engine.Core.World.GameObject t_akyn))
     -> Engine.Model.Model.Model
     -> t_akyn
     -> Engine.Core.World.GameObject t_akyn
[GblId[DataConWrapper],
 Arity=4,
 Caf=NoCafRefs,
 Str=DmdType SLSS,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ t_akyn)
                 (tpl_B1 [Occ=Once]
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (tpl_B2 [Occ=Once]
                    :: Engine.Core.World.World t_akyn
                       -> Engine.Core.World.GameObject t_akyn
                       -> GHC.Types.IO (Engine.Core.World.GameObject t_akyn))
                 (tpl_B3 [Occ=Once] :: Engine.Model.Model.Model)
                 (tpl_B4 [Occ=Once] :: t_akyn) ->
                 case tpl_B1 of tpl_X7 { __DEFAULT ->
                 case tpl_B3 of tpl_Xa { __DEFAULT ->
                 case tpl_B4 of tpl_Xc { __DEFAULT ->
                 Engine.Core.World.EffectfulEntity
                   @ t_akyn tpl_X7 tpl_B2 tpl_Xa tpl_Xc
                 }
                 }
                 }}]
Engine.Core.World.$WEffectfulEntity =
  \ (@ t_akyn)
    (tpl_B1 [Occ=Once]
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (tpl_B2 [Occ=Once]
       :: Engine.Core.World.World t_akyn
          -> Engine.Core.World.GameObject t_akyn
          -> GHC.Types.IO (Engine.Core.World.GameObject t_akyn))
    (tpl_B3 [Occ=Once] :: Engine.Model.Model.Model)
    (tpl_B4 [Occ=Once] :: t_akyn) ->
    case tpl_B1 of tpl_X7 { __DEFAULT ->
    case tpl_B3 of tpl_Xa { __DEFAULT ->
    case tpl_B4 of tpl_Xc { __DEFAULT ->
    Engine.Core.World.EffectfulEntity
      @ t_akyn tpl_X7 tpl_B2 tpl_Xa tpl_Xc
    }
    }
    }

Engine.Core.World.getWorldTime
  :: GHC.Types.IO Data.Time.Clock.UTC.UTCTime
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.getWorldTime =
  Data.Time.Clock.getCurrentTime1
  `cast` (Sym <(GHC.Types.NTCo:IO <Data.Time.Clock.UTC.UTCTime>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Data.Time.Clock.UTC.UTCTime #))
               ~#
             GHC.Types.IO Data.Time.Clock.UTC.UTCTime)

Engine.Core.World.eentityAttribute1 :: forall t_t17. t_t17
[GblId, Str=DmdType b]
Engine.Core.World.eentityAttribute1 =
  \ (@ t_t17) ->
    Control.Exception.Base.recSelError @ t_t17 "eentityAttribute"

Engine.Core.World.eentityAttribute
  :: forall t_akyn. Engine.Core.World.GameObject t_akyn -> t_akyn
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.eentityAttribute =
  \ (@ t_t17) (ds_dl31 :: Engine.Core.World.GameObject t_t17) ->
    case ds_dl31 of _ {
      __DEFAULT -> Engine.Core.World.eentityAttribute1 @ t_t17;
      Engine.Core.World.EffectfulEntity ds1_dl32
                                        ds2_dl33
                                        ds3_dl34
                                        ds4_dl35 ->
        ds4_dl35
    }

Engine.Core.World.eentityModel1 :: Engine.Model.Model.Model
[GblId, Str=DmdType b]
Engine.Core.World.eentityModel1 =
  Control.Exception.Base.recSelError
    @ Engine.Model.Model.Model "eentityModel"

Engine.Core.World.eentityModel
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn -> Engine.Model.Model.Model
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.eentityModel =
  \ (@ t_t16) (ds_dl2T :: Engine.Core.World.GameObject t_t16) ->
    case ds_dl2T of _ {
      __DEFAULT -> Engine.Core.World.eentityModel1;
      Engine.Core.World.EffectfulEntity ds1_dl2U
                                        ds2_dl2V
                                        ds3_dl2W
                                        ds4_dl2X ->
        ds3_dl2W
    }

Engine.Core.World.eentityPosition1
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Core.World.eentityPosition1 =
  Control.Exception.Base.recSelError
    @ (Engine.Core.Vec.Vec3
         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    "eentityPosition"

Engine.Core.World.eentityPosition
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.eentityPosition =
  \ (@ t_t14) (ds_dl2D :: Engine.Core.World.GameObject t_t14) ->
    case ds_dl2D of _ {
      __DEFAULT -> Engine.Core.World.eentityPosition1;
      Engine.Core.World.EffectfulEntity ds1_dl2E
                                        ds2_dl2F
                                        ds3_dl2G
                                        ds4_dl2H ->
        ds1_dl2E
    }

Engine.Core.World.eentityUpdate1
  :: forall t_t15.
     Engine.Core.World.World t_t15
     -> Engine.Core.World.GameObject t_t15
     -> GHC.Types.IO (Engine.Core.World.GameObject t_t15)
[GblId, Str=DmdType b]
Engine.Core.World.eentityUpdate1 =
  \ (@ t_t15) ->
    Control.Exception.Base.recSelError
      @ (Engine.Core.World.World t_t15
         -> Engine.Core.World.GameObject t_t15
         -> GHC.Types.IO (Engine.Core.World.GameObject t_t15))
      "eentityUpdate"

Engine.Core.World.eentityUpdate
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Engine.Core.World.World t_akyn
     -> Engine.Core.World.GameObject t_akyn
     -> GHC.Types.IO (Engine.Core.World.GameObject t_akyn)
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.eentityUpdate =
  \ (@ t_t15) (ds_dl2L :: Engine.Core.World.GameObject t_t15) ->
    case ds_dl2L of _ {
      __DEFAULT -> Engine.Core.World.eentityUpdate1 @ t_t15;
      Engine.Core.World.EffectfulEntity ds1_dl2M
                                        ds2_dl2N
                                        ds3_dl2O
                                        ds4_dl2P ->
        ds2_dl2N
    }

Engine.Core.World.pentityAttribute1 :: forall t_t13. t_t13
[GblId, Str=DmdType b]
Engine.Core.World.pentityAttribute1 =
  \ (@ t_t13) ->
    Control.Exception.Base.recSelError @ t_t13 "pentityAttribute"

Engine.Core.World.pentityAttribute
  :: forall t_akyn. Engine.Core.World.GameObject t_akyn -> t_akyn
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.pentityAttribute =
  \ (@ t_t13) (ds_dl2v :: Engine.Core.World.GameObject t_t13) ->
    case ds_dl2v of _ {
      __DEFAULT -> Engine.Core.World.pentityAttribute1 @ t_t13;
      Engine.Core.World.PureEntity ds1_dl2w ds2_dl2x ds3_dl2y ds4_dl2z ->
        ds4_dl2z
    }

Engine.Core.World.pentityModel1 :: Engine.Model.Model.Model
[GblId, Str=DmdType b]
Engine.Core.World.pentityModel1 =
  Control.Exception.Base.recSelError
    @ Engine.Model.Model.Model "pentityModel"

Engine.Core.World.pentityModel
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn -> Engine.Model.Model.Model
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.pentityModel =
  \ (@ t_t12) (ds_dl2n :: Engine.Core.World.GameObject t_t12) ->
    case ds_dl2n of _ {
      __DEFAULT -> Engine.Core.World.pentityModel1;
      Engine.Core.World.PureEntity ds1_dl2o ds2_dl2p ds3_dl2q ds4_dl2r ->
        ds3_dl2q
    }

Engine.Core.World.pentityPosition1
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Core.World.pentityPosition1 =
  Control.Exception.Base.recSelError
    @ (Engine.Core.Vec.Vec3
         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    "pentityPosition"

Engine.Core.World.pentityPosition
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.pentityPosition =
  \ (@ t_t10) (ds_dl27 :: Engine.Core.World.GameObject t_t10) ->
    case ds_dl27 of _ {
      __DEFAULT -> Engine.Core.World.pentityPosition1;
      Engine.Core.World.PureEntity ds1_dl28 ds2_dl29 ds3_dl2a ds4_dl2b ->
        ds1_dl28
    }

Engine.Core.World.pentityUpdate1
  :: forall t_t11.
     Engine.Core.World.GameObject t_t11
     -> Engine.Core.World.GameObject t_t11
[GblId, Str=DmdType b]
Engine.Core.World.pentityUpdate1 =
  \ (@ t_t11) ->
    Control.Exception.Base.recSelError
      @ (Engine.Core.World.GameObject t_t11
         -> Engine.Core.World.GameObject t_t11)
      "pentityUpdate"

Engine.Core.World.pentityUpdate
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Engine.Core.World.GameObject t_akyn
     -> Engine.Core.World.GameObject t_akyn
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.pentityUpdate =
  \ (@ t_t11) (ds_dl2f :: Engine.Core.World.GameObject t_t11) ->
    case ds_dl2f of _ {
      __DEFAULT -> Engine.Core.World.pentityUpdate1 @ t_t11;
      Engine.Core.World.PureEntity ds1_dl2g ds2_dl2h ds3_dl2i ds4_dl2j ->
        ds2_dl2h
    }

Engine.Core.World.playerInput1
  :: forall t_tZ. Engine.Core.World.Input t_tZ
[GblId, Str=DmdType b]
Engine.Core.World.playerInput1 =
  \ (@ t_tZ) ->
    Control.Exception.Base.recSelError
      @ (Engine.Core.World.Input t_tZ) "playerInput"

Engine.Core.World.playerInput
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Engine.Core.World.Input t_akyn
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.playerInput =
  \ (@ t_tZ) (ds_dl1Y :: Engine.Core.World.GameObject t_tZ) ->
    case ds_dl1Y of _ {
      __DEFAULT -> Engine.Core.World.playerInput1 @ t_tZ;
      Engine.Core.World.Player ds1_dl1Z
                               ds2_dl20
                               ds3_dl21
                               ds4_dl22
                               ds5_dl23 ->
        ds5_dl23
    }

Engine.Core.World.playerPosition1
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Core.World.playerPosition1 =
  Control.Exception.Base.recSelError
    @ (Engine.Core.Vec.Vec3
         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    "playerPosition"

Engine.Core.World.playerPosition
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.playerPosition =
  \ (@ t_tV) (ds_dl1o :: Engine.Core.World.GameObject t_tV) ->
    case ds_dl1o of _ {
      __DEFAULT -> Engine.Core.World.playerPosition1;
      Engine.Core.World.Player ds1_dl1p
                               ds2_dl1q
                               ds3_dl1r
                               ds4_dl1s
                               ds5_dl1t ->
        ds1_dl1p
    }

Engine.Core.World.playerRotation1
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Core.World.playerRotation1 =
  Control.Exception.Base.recSelError
    @ (Engine.Core.Vec.Vec3
         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    "playerRotation"

Engine.Core.World.playerRotation
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.playerRotation =
  \ (@ t_tW) (ds_dl1x :: Engine.Core.World.GameObject t_tW) ->
    case ds_dl1x of _ {
      __DEFAULT -> Engine.Core.World.playerRotation1;
      Engine.Core.World.Player ds1_dl1y
                               ds2_dl1z
                               ds3_dl1A
                               ds4_dl1B
                               ds5_dl1C ->
        ds2_dl1z
    }

Engine.Core.World.playerSpeed1
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Core.World.playerSpeed1 =
  Control.Exception.Base.recSelError
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat "playerSpeed"

Engine.Core.World.playerSpeed
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.playerSpeed =
  \ (@ t_tX) (ds_dl1G :: Engine.Core.World.GameObject t_tX) ->
    case ds_dl1G of _ {
      __DEFAULT -> Engine.Core.World.playerSpeed1;
      Engine.Core.World.Player ds1_dl1H
                               ds2_dl1I
                               ds3_dl1J
                               ds4_dl1K
                               ds5_dl1L ->
        ds3_dl1J
    }

Engine.Core.World.playerUpdate1
  :: forall t_tY.
     Engine.Core.World.World t_tY
     -> GHC.Types.IO (Engine.Core.World.GameObject t_tY)
[GblId, Str=DmdType b]
Engine.Core.World.playerUpdate1 =
  \ (@ t_tY) ->
    Control.Exception.Base.recSelError
      @ (Engine.Core.World.World t_tY
         -> GHC.Types.IO (Engine.Core.World.GameObject t_tY))
      "playerUpdate"

Engine.Core.World.playerUpdate
  :: forall t_akyn.
     Engine.Core.World.GameObject t_akyn
     -> Engine.Core.World.World t_akyn
     -> GHC.Types.IO (Engine.Core.World.GameObject t_akyn)
[GblId[[RecSel]],
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.playerUpdate =
  \ (@ t_tY) (ds_dl1P :: Engine.Core.World.GameObject t_tY) ->
    case ds_dl1P of _ {
      __DEFAULT -> Engine.Core.World.playerUpdate1 @ t_tY;
      Engine.Core.World.Player ds1_dl1Q
                               ds2_dl1R
                               ds3_dl1S
                               ds4_dl1T
                               ds5_dl1U ->
        ds4_dl1T
    }

Engine.Core.World.inputKeys
  :: forall t_ajHY.
     Engine.Core.World.Input t_ajHY
     -> [(Graphics.UI.GLFW.Types.Key,
          GHC.Types.Bool,
          Engine.Core.World.World t_ajHY
          -> Engine.Core.World.GameObject t_ajHY
          -> GHC.Types.IO (Engine.Core.World.GameObject t_ajHY))]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SUU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_t18)
                 (ds_dl39 [Occ=Once!] :: Engine.Core.World.Input t_t18) ->
                 case ds_dl39
                 of _ { Engine.Core.World.Input ds1_dl3a [Occ=Once] _ _ ->
                 ds1_dl3a
                 }}]
Engine.Core.World.inputKeys =
  \ (@ t_t18) (ds_dl39 :: Engine.Core.World.Input t_t18) ->
    case ds_dl39
    of _ { Engine.Core.World.Input ds1_dl3a ds2_dl3b ds3_dl3c ->
    ds1_dl3a
    }

Engine.Core.World.inputLastMousePos
  :: forall t_ajHY.
     Engine.Core.World.Input t_ajHY
     -> Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(UUS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_t1a)
                 (ds_dl3j [Occ=Once!] :: Engine.Core.World.Input t_t1a) ->
                 case ds_dl3j
                 of _ { Engine.Core.World.Input _ _ ds3_dl3m [Occ=Once] ->
                 ds3_dl3m
                 }}]
Engine.Core.World.inputLastMousePos =
  \ (@ t_t1a) (ds_dl3j :: Engine.Core.World.Input t_t1a) ->
    case ds_dl3j
    of _ { Engine.Core.World.Input ds1_dl3k ds2_dl3l ds3_dl3m ->
    ds3_dl3m
    }

Engine.Core.World.inputMouseDelta
  :: forall t_ajHY.
     Engine.Core.World.Input t_ajHY
     -> Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(USU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_t19)
                 (ds_dl3e [Occ=Once!] :: Engine.Core.World.Input t_t19) ->
                 case ds_dl3e
                 of _ { Engine.Core.World.Input _ ds2_dl3g [Occ=Once] _ ->
                 ds2_dl3g
                 }}]
Engine.Core.World.inputMouseDelta =
  \ (@ t_t19) (ds_dl3e :: Engine.Core.World.Input t_t19) ->
    case ds_dl3e
    of _ { Engine.Core.World.Input ds1_dl3f ds2_dl3g ds3_dl3h ->
    ds2_dl3g
    }

Engine.Core.World.worldEntities
  :: forall t_akyo.
     Engine.Core.World.World t_akyo
     -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_akyo)]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(USUU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_tS)
                 (ds_dl16 [Occ=Once!] :: Engine.Core.World.World t_tS) ->
                 case ds_dl16
                 of _ { Engine.Core.World.World _ ds2_dl18 [Occ=Once] _ _ ->
                 ds2_dl18
                 }}]
Engine.Core.World.worldEntities =
  \ (@ t_tS) (ds_dl16 :: Engine.Core.World.World t_tS) ->
    case ds_dl16
    of _
    { Engine.Core.World.World ds1_dl17 ds2_dl18 ds3_dl19 ds4_dl1a ->
    ds2_dl18
    }

Engine.Core.World.worldPlayer
  :: forall t_akyo.
     Engine.Core.World.World t_akyo
     -> GHC.IORef.IORef (Engine.Core.World.GameObject t_akyo)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SUUU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_tR)
                 (ds_dl10 [Occ=Once!] :: Engine.Core.World.World t_tR) ->
                 case ds_dl10
                 of _ { Engine.Core.World.World ds1_dl11 [Occ=Once] _ _ _ ->
                 ds1_dl11
                 }}]
Engine.Core.World.worldPlayer =
  \ (@ t_tR) (ds_dl10 :: Engine.Core.World.World t_tR) ->
    case ds_dl10
    of _
    { Engine.Core.World.World ds1_dl11 ds2_dl12 ds3_dl13 ds4_dl14 ->
    ds1_dl11
    }

Engine.Core.World.worldState
  :: forall t_akyo.
     Engine.Core.World.World t_akyo
     -> GHC.IORef.IORef Engine.Core.World.WorldState
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(UUUS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_tU)
                 (ds_dl1i [Occ=Once!] :: Engine.Core.World.World t_tU) ->
                 case ds_dl1i
                 of _ { Engine.Core.World.World _ _ _ ds4_dl1m [Occ=Once] ->
                 ds4_dl1m
                 }}]
Engine.Core.World.worldState =
  \ (@ t_tU) (ds_dl1i :: Engine.Core.World.World t_tU) ->
    case ds_dl1i
    of _
    { Engine.Core.World.World ds1_dl1j ds2_dl1k ds3_dl1l ds4_dl1m ->
    ds4_dl1m
    }

Engine.Core.World.worldUniforms
  :: forall t_akyo.
     Engine.Core.World.World t_akyo
     -> [Engine.Graphics.Shaders.ShaderUniform]
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(UUSU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_tT)
                 (ds_dl1c [Occ=Once!] :: Engine.Core.World.World t_tT) ->
                 case ds_dl1c
                 of _ { Engine.Core.World.World _ _ ds3_dl1f [Occ=Once] _ ->
                 ds3_dl1f
                 }}]
Engine.Core.World.worldUniforms =
  \ (@ t_tT) (ds_dl1c :: Engine.Core.World.World t_tT) ->
    case ds_dl1c
    of _
    { Engine.Core.World.World ds1_dl1d ds2_dl1e ds3_dl1f ds4_dl1g ->
    ds3_dl1f
    }

Engine.Core.World.bindWorldUniforms1
  :: forall t_t1t.
     Engine.Core.World.World t_t1t
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=DmdType U(UUSU)LL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_t1t)
                 (world_akyq [Occ=Once!] :: Engine.Core.World.World t_t1t)
                 (shader_akyr [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                 (eta_B1 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case world_akyq
                 of _ { Engine.Core.World.World _ _ ds2_dl1f [Occ=Once] _ ->
                 Engine.Graphics.Shaders.bindUniforms1 shader_akyr ds2_dl1f eta_B1
                 }}]
Engine.Core.World.bindWorldUniforms1 =
  \ (@ t_t1t)
    (world_akyq :: Engine.Core.World.World t_t1t)
    (shader_akyr :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case world_akyq
    of _
    { Engine.Core.World.World ds_dl1d ds1_dl1e ds2_dl1f ds3_dl1g ->
    Engine.Graphics.Shaders.bindUniforms1 shader_akyr ds2_dl1f eta_B1
    }

Engine.Core.World.bindWorldUniforms
  :: forall t_akyp.
     Engine.Core.World.World t_akyp
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=DmdType U(UUSU)LL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Core.World.bindWorldUniforms1
               `cast` (forall t_t1t.
                       <Engine.Core.World.World t_t1t>
                       -> <Graphics.Rendering.OpenGL.Raw.Types.GLuint>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (forall t_t1t.
                           Engine.Core.World.World t_t1t
                           -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (forall t_t1t.
                           Engine.Core.World.World t_t1t
                           -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
                           -> GHC.Types.IO ()))}]
Engine.Core.World.bindWorldUniforms =
  Engine.Core.World.bindWorldUniforms1
  `cast` (forall t_t1t.
          <Engine.Core.World.World t_t1t>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLuint>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_t1t.
              Engine.Core.World.World t_t1t
              -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_t1t.
              Engine.Core.World.World t_t1t
              -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))

Engine.Core.World.stateDelta
  :: Engine.Core.World.WorldState
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(UUS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dl3y [Occ=Once!] :: Engine.Core.World.WorldState) ->
                 case ds_dl3y
                 of _ { Engine.Core.World.WorldState _ _ ds3_dl3B [Occ=Once] ->
                 ds3_dl3B
                 }}]
Engine.Core.World.stateDelta =
  \ (ds_dl3y :: Engine.Core.World.WorldState) ->
    case ds_dl3y
    of _ { Engine.Core.World.WorldState ds1_dl3z ds2_dl3A ds3_dl3B ->
    ds3_dl3B
    }

Engine.Core.World.stateTextureCount
  :: Engine.Core.World.WorldState
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SUU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dl3o [Occ=Once!] :: Engine.Core.World.WorldState) ->
                 case ds_dl3o
                 of _ { Engine.Core.World.WorldState ds1_dl3p [Occ=Once] _ _ ->
                 ds1_dl3p
                 }}]
Engine.Core.World.stateTextureCount =
  \ (ds_dl3o :: Engine.Core.World.WorldState) ->
    case ds_dl3o
    of _ { Engine.Core.World.WorldState ds1_dl3p ds2_dl3q ds3_dl3r ->
    ds1_dl3p
    }

Engine.Core.World.stateTime
  :: Engine.Core.World.WorldState -> Data.Time.Clock.UTC.UTCTime
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(USU),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dl3t [Occ=Once!] :: Engine.Core.World.WorldState) ->
                 case ds_dl3t
                 of _ { Engine.Core.World.WorldState _ ds2_dl3v [Occ=Once] _ ->
                 ds2_dl3v
                 }}]
Engine.Core.World.stateTime =
  \ (ds_dl3t :: Engine.Core.World.WorldState) ->
    case ds_dl3t
    of _ { Engine.Core.World.WorldState ds1_dl3u ds2_dl3v ds3_dl3w ->
    ds2_dl3v
    }

Engine.Core.World.playerAABB5 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Core.World.playerAABB5 = GHC.Types.F# (__float -1.0)

Engine.Core.World.playerAABB4 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Core.World.playerAABB4 = GHC.Types.F# (__float -2.0)

Engine.Core.World.playerAABB3
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Core.World.playerAABB3 =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (Engine.Core.World.playerAABB5
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Core.World.playerAABB4
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Core.World.playerAABB5
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Engine.Core.World.playerAABB2 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Core.World.playerAABB2 = GHC.Types.F# (__float 1.0)

Engine.Core.World.playerAABB1
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Core.World.playerAABB1 =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (Engine.Core.World.playerAABB2
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Core.World.playerAABB2
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Core.World.playerAABB2
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Engine.Core.World.playerAABB :: Engine.Model.AABB.AABB
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Core.World.playerAABB =
  Engine.Model.AABB.AABB
    Engine.Core.World.playerAABB3 Engine.Core.World.playerAABB1

Engine.Core.World.loadWorldTexture5
  :: Graphics.Rendering.OpenGL.GL.StateVar.StateVar
       (Data.Maybe.Maybe
          Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 30}]
Engine.Core.World.loadWorldTexture5 =
  case Graphics.Rendering.OpenGL.GL.Texturing.Objects.$wtextureBinding
         @ Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D
         Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.$fBindableTextureTargetTextureTarget2D
         Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.Texture2D
  of _ { (# ww1_alOD, ww2_alOE #) ->
  Graphics.Rendering.OpenGL.GL.StateVar.StateVar
    @ (Data.Maybe.Maybe
         Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
    ww1_alOD
    ww2_alOE
  }

Engine.Core.World.loadWorldTexture4
  :: (Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter,
      Data.Maybe.Maybe
        Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Core.World.loadWorldTexture4 =
  (Graphics.Rendering.OpenGL.GL.Texturing.Filter.Nearest,
   Data.Maybe.Nothing
     @ Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter)

Engine.Core.World.loadWorldTexture3
  :: ((Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter,
       Data.Maybe.Maybe
         Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter),
      Graphics.Rendering.OpenGL.GL.Texturing.Filter.TextureFilter)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Core.World.loadWorldTexture3 =
  (Engine.Core.World.loadWorldTexture4,
   Graphics.Rendering.OpenGL.GL.Texturing.Filter.Nearest)

Engine.Core.World.loadWorldTexture2 :: GHC.Types.IO ()
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 41 0}]
Engine.Core.World.loadWorldTexture2 =
  case Graphics.Rendering.OpenGL.GL.Texturing.Parameters.$wtextureFilter
         @ Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D
         Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.$fParameterizedTextureTargetTextureTarget2D
         Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.Texture2D
  of _ { (# _, ww2_alRK #) ->
  (ww2_alRK
   `cast` (<Graphics.Rendering.OpenGL.GL.StateVar.NTCo:SettableStateVar
              <(Graphics.Rendering.OpenGL.GL.Texturing.Filter.MinificationFilter,
                Graphics.Rendering.OpenGL.GL.Texturing.Filter.MagnificationFilter)>>
           :: Graphics.Rendering.OpenGL.GL.StateVar.SettableStateVar
                (Graphics.Rendering.OpenGL.GL.Texturing.Filter.MinificationFilter,
                 Graphics.Rendering.OpenGL.GL.Texturing.Filter.MagnificationFilter)
                ~#
              ((Graphics.Rendering.OpenGL.GL.Texturing.Filter.MinificationFilter,
                Graphics.Rendering.OpenGL.GL.Texturing.Filter.MagnificationFilter)
               -> GHC.Types.IO ())))
    Engine.Core.World.loadWorldTexture3
  }

Engine.Core.World.loadWorldTexture6 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Core.World.loadWorldTexture6 = GHC.Types.I# 1

Engine.Core.World.loadWorldTexture1
  :: Engine.Core.World.WorldState
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject #)
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [20 0 0] 325 30}]
Engine.Core.World.loadWorldTexture1 =
  \ (wState_akys :: Engine.Core.World.WorldState)
    (file_akyt :: GHC.IO.FilePath)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Graphics.Textures.juicyLoadImage1 file_akyt eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj
    of _ { Engine.Graphics.Textures.Image ds_dl0X pd_akyw ->
    case ds_dl0X
    of _
    { Graphics.Rendering.OpenGL.GL.CoordTrans.Size w_akyu h_akyv ->
    case w_akyu
         `cast` (<Foreign.C.Types.NTCo:CInt>
                 :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
    of _ { GHC.Int.I32# ww1_slX0 ->
    case h_akyv
         `cast` (<Foreign.C.Types.NTCo:CInt>
                 :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
    of _ { GHC.Int.I32# ww3_slX4 ->
    case ((Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.$fGeneratableObjectNameTextureObject_$cgenObjectNames
             Engine.Core.World.loadWorldTexture6)
          `cast` (<GHC.Types.NTCo:IO
                     <[Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]>>
                  :: GHC.Types.IO
                       [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject]
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                            [Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject] #))))
           ipv_a3Ui
    of _ { (# ipv2_X3X4, ipv3_X3X6 #) ->
    case Engine.Core.World.loadWorldTexture5
    of _
    { Graphics.Rendering.OpenGL.GL.StateVar.StateVar ds3_alLD s_alLE ->
    let {
      texName_akyG [Dmd=Just L]
        :: Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
      [LclId, Str=DmdType]
      texName_akyG =
        case ipv3_X3X6 of _ {
          [] ->
            GHC.List.badHead
              @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject;
          : x_ac7a ds4_ac7b -> x_ac7a
        } } in
    case (((s_alLE
            `cast` (<Graphics.Rendering.OpenGL.GL.StateVar.NTCo:SettableStateVar
                       <Data.Maybe.Maybe
                          Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject>>
                    :: Graphics.Rendering.OpenGL.GL.StateVar.SettableStateVar
                         (Data.Maybe.Maybe
                            Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
                         ~#
                       (Data.Maybe.Maybe
                          Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                        -> GHC.Types.IO ())))
             (Data.Maybe.Just
                @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                texName_akyG))
          `cast` (<GHC.Types.NTCo:IO <()>>
                  :: GHC.Types.IO ()
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))))
           ipv2_X3X4
    of _ { (# ipv4_X3Xq, _ #) ->
    case (Engine.Core.World.loadWorldTexture2
          `cast` (<GHC.Types.NTCo:IO <()>>
                  :: GHC.Types.IO ()
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))))
           ipv4_X3Xq
    of _ { (# ipv6_X3Xk, _ #) ->
    case wState_akys
    of _ { Engine.Core.World.WorldState ds6_dl3p ds7_dl3q ds8_dl3r ->
    case ds6_dl3p
         `cast` (<Foreign.C.Types.NTCo:CUInt>
                 :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
    of _ { GHC.Word.W32# x#_slWW ->
    case Graphics.Rendering.OpenGL.GL.Texturing.Specification.$wa13
           @ Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D
           @ GHC.Word.Word8
           (Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.$fTwoDimensionalTextureTargetTextureTarget2D_$cmarshalTwoDimensionalTextureTarget
            `cast` (Sym
                      <(Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.NTCo:TwoDimensionalTextureTarget
                          <Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D>)>
                    :: (Graphics.Rendering.OpenGL.GL.PixelRectangles.ColorTable.Proxy
                        -> Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D
                        -> Graphics.Rendering.OpenGL.Raw.Types.GLenum)
                         ~#
                       Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TwoDimensionalTextureTarget
                         Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.TextureTarget2D))
           Graphics.Rendering.OpenGL.GL.Texturing.TextureTarget.Texture2D
           Graphics.Rendering.OpenGL.GL.PixelRectangles.ColorTable.NoProxy
           (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# x#_slWW))
           Graphics.Rendering.OpenGL.GL.Texturing.PixelInternalFormat.RGB'
           ww1_slX0
           ww3_slX4
           0
           pd_akyw
           ipv6_X3Xk
    of _ { (# ipv8_X3Xi, _ #) ->
    (# ipv8_X3Xi, texName_akyG #)
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Core.World.loadWorldTexture
  :: Engine.Core.World.WorldState
     -> GHC.IO.FilePath
     -> GHC.Types.IO
          Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Core.World.loadWorldTexture =
  Engine.Core.World.loadWorldTexture1
  `cast` (<Engine.Core.World.WorldState>
          -> <GHC.IO.FilePath>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject>)>
          :: (Engine.Core.World.WorldState
              -> GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject #))
               ~#
             (Engine.Core.World.WorldState
              -> GHC.IO.FilePath
              -> GHC.Types.IO
                   Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject))



[ 9 of 17] Compiling Engine.Terrain.Generator ( Engine/Terrain/Generator.hs, Engine/Terrain/Generator.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 734, types: 534, coercions: 184}

Engine.Terrain.Generator.repeatList
  :: forall a_amDu. GHC.Types.Int -> [a_amDu] -> [a_amDu]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType U(L)L,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_b)
                 (i_amEE [Occ=Once] :: GHC.Types.Int)
                 (arr_amEF [Occ=Once] :: [a_b]) ->
                 GHC.List.concat_go
                   @ a_b (GHC.List.replicate @ [a_b] i_amEE arr_amEF)}]
Engine.Terrain.Generator.repeatList =
  \ (@ a_b) (i_amEE :: GHC.Types.Int) (arr_amEF :: [a_b]) ->
    GHC.List.concat_go
      @ a_b (GHC.List.replicate @ [a_b] i_amEE arr_amEF)

Rec {
Engine.Terrain.Generator.calculateNormals [Occ=LoopBreaker]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType S]
Engine.Terrain.Generator.calculateNormals =
  \ (ds_dmHU :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case ds_dmHU of _ {
      [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : x1_amEd ds1_dmHV ->
        case ds1_dmHV of _ {
          [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
          : y1_amEe ds2_dmHW ->
            case ds2_dmHW of _ {
              [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
              : z1_amEf ds3_dmHX ->
                case ds3_dmHX of _ {
                  [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
                  : x2_amEg ds4_dmHY ->
                    case ds4_dmHY of _ {
                      [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
                      : y2_amEh ds5_dmHZ ->
                        case ds5_dmHZ of _ {
                          [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
                          : z2_amEi ds6_dmI0 ->
                            case ds6_dmI0 of _ {
                              [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
                              : x3_amEj ds7_dmI1 ->
                                case ds7_dmI1 of _ {
                                  [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
                                  : y3_amEk ds8_dmI2 ->
                                    case ds8_dmI2 of _ {
                                      [] ->
                                        GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
                                      : z3_amEl rest_amEm ->
                                        let {
                                          a_smKH [Dmd=Just D(L)] :: Foreign.C.Types.CFloat
                                          [LclId, Str=DmdType]
                                          a_smKH =
                                            case z3_amEl
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_afu7 ->
                                            case z1_amEf
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_afub ->
                                            (GHC.Types.F# (GHC.Prim.minusFloat# x_afu7 y_afub))
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                            }
                                            } } in
                                        let {
                                          a1_smKE [Dmd=Just D(L)] :: Foreign.C.Types.CFloat
                                          [LclId, Str=DmdType]
                                          a1_smKE =
                                            case z2_amEi
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_afu7 ->
                                            case z1_amEf
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_afub ->
                                            (GHC.Types.F# (GHC.Prim.minusFloat# x_afu7 y_afub))
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                            }
                                            } } in
                                        let {
                                          a2_smKI [Dmd=Just D(L)] :: Foreign.C.Types.CFloat
                                          [LclId, Str=DmdType]
                                          a2_smKI =
                                            case y3_amEk
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_afu7 ->
                                            case y1_amEe
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_afub ->
                                            (GHC.Types.F# (GHC.Prim.minusFloat# x_afu7 y_afub))
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                            }
                                            } } in
                                        let {
                                          a3_smKF [Dmd=Just D(L)] :: Foreign.C.Types.CFloat
                                          [LclId, Str=DmdType]
                                          a3_smKF =
                                            case y2_amEh
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_afu7 ->
                                            case y1_amEe
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_afub ->
                                            (GHC.Types.F# (GHC.Prim.minusFloat# x_afu7 y_afub))
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                            }
                                            } } in
                                        let {
                                          a4_smXu [Dmd=Just L]
                                            :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                          [LclId, Str=DmdType]
                                          a4_smXu =
                                            case a3_smKF
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_a3Uw ->
                                            case a_smKH
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_a3UA ->
                                            case a1_smKE
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x4_X3XE ->
                                            case a2_smKI
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y4_X3XL ->
                                            (GHC.Types.F#
                                               (GHC.Prim.minusFloat#
                                                  (GHC.Prim.timesFloat# x_a3Uw y_a3UA)
                                                  (GHC.Prim.timesFloat# x4_X3XE y4_X3XL)))
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                            }
                                            }
                                            }
                                            } } in
                                        let {
                                          a5_smKJ [Dmd=Just D(L)] :: Foreign.C.Types.CFloat
                                          [LclId, Str=DmdType]
                                          a5_smKJ =
                                            case x3_amEj
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_afu7 ->
                                            case x1_amEd
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_afub ->
                                            (GHC.Types.F# (GHC.Prim.minusFloat# x_afu7 y_afub))
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                            }
                                            } } in
                                        let {
                                          a6_smKG [Dmd=Just D(L)] :: Foreign.C.Types.CFloat
                                          [LclId, Str=DmdType]
                                          a6_smKG =
                                            case x2_amEg
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_afu7 ->
                                            case x1_amEd
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_afub ->
                                            (GHC.Types.F# (GHC.Prim.minusFloat# x_afu7 y_afub))
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                            }
                                            } } in
                                        let {
                                          a7_smXx [Dmd=Just L]
                                            :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                          [LclId, Str=DmdType]
                                          a7_smXx =
                                            case a1_smKE
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_a3Uw ->
                                            case a5_smKJ
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_a3UA ->
                                            case a6_smKG
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x4_X3Xp ->
                                            case a_smKH
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y4_X3Xw ->
                                            let {
                                              x5_afaG [Dmd=Just L] :: GHC.Prim.Float#
                                              [LclId, Str=DmdType]
                                              x5_afaG =
                                                GHC.Prim.minusFloat#
                                                  (GHC.Prim.timesFloat# x_a3Uw y_a3UA)
                                                  (GHC.Prim.timesFloat# x4_X3Xp y4_X3Xw) } in
                                            case GHC.Prim.gtFloat# x5_afaG (__float 0.0) of _ {
                                              GHC.Types.False ->
                                                (GHC.Types.F# (GHC.Prim.negateFloat# x5_afaG))
                                                `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                        :: GHC.Types.Float
                                                             ~#
                                                           Foreign.C.Types.CFloat);
                                              GHC.Types.True ->
                                                (GHC.Types.F# x5_afaG)
                                                `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                        :: GHC.Types.Float
                                                             ~#
                                                           Foreign.C.Types.CFloat)
                                            }
                                            }
                                            }
                                            }
                                            } } in
                                        let {
                                          a8_smXA [Dmd=Just L]
                                            :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                          [LclId, Str=DmdType]
                                          a8_smXA =
                                            case a6_smKG
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x_a3Uw ->
                                            case a2_smKI
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y_a3UA ->
                                            case a3_smKF
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# x4_X3XE ->
                                            case a5_smKJ
                                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                         :: Foreign.C.Types.CFloat
                                                              ~#
                                                            GHC.Types.Float)
                                            of _ { GHC.Types.F# y4_X3XL ->
                                            (GHC.Types.F#
                                               (GHC.Prim.minusFloat#
                                                  (GHC.Prim.timesFloat# x_a3Uw y_a3UA)
                                                  (GHC.Prim.timesFloat# x4_X3XE y4_X3XL)))
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                            }
                                            }
                                            }
                                            } } in
                                        let {
                                          a9_smXB :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                                          [LclId, Str=DmdType]
                                          a9_smXB =
                                            GHC.Types.:
                                              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                              a8_smXA
                                              (GHC.Types.[]
                                                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat) } in
                                        let {
                                          a10_smXC :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                                          [LclId, Str=DmdType]
                                          a10_smXC =
                                            GHC.Types.:
                                              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                              a7_smXx
                                              a9_smXB } in
                                        let {
                                          x_a3SM :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                                          [LclId, Str=DmdType]
                                          x_a3SM =
                                            GHC.Types.:
                                              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                              a4_smXu
                                              a10_smXC } in
                                        let {
                                          lvl4_sn6m
                                            :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
                                          [LclId]
                                          lvl4_sn6m =
                                            GHC.Types.:
                                              @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                                              x_a3SM
                                              (GHC.Types.[]
                                                 @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) } in
                                        letrec {
                                          xs_a3SH [Occ=LoopBreaker]
                                            :: GHC.Prim.Int#
                                               -> [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
                                          [LclId, Arity=1, Str=DmdType L]
                                          xs_a3SH =
                                            \ (m_a3SO :: GHC.Prim.Int#) ->
                                              case GHC.Prim.<=# m_a3SO 1 of _ {
                                                GHC.Types.False ->
                                                  GHC.Types.:
                                                    @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                                                    x_a3SM
                                                    (xs_a3SH (GHC.Prim.-# m_a3SO 1));
                                                GHC.Types.True -> lvl4_sn6m
                                              }; } in
                                        GHC.Base.++
                                          @ Foreign.C.Types.CFloat
                                          (GHC.List.concat_go
                                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                             (xs_a3SH 3))
                                          (Engine.Terrain.Generator.calculateNormals rest_amEm)
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
end Rec }

lvl_rn9g :: GHC.Integer.Type.Integer
[GblId, Str=DmdType]
lvl_rn9g = __integer 2000

lvl1_rn9h :: GHC.Integer.Type.Integer
[GblId, Str=DmdType]
lvl1_rn9h = __integer 6283

lvl2_rn9i :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType]
lvl2_rn9i =
  case GHC.Float.$w$cfromRational1 lvl1_rn9h lvl_rn9g
  of _ { GHC.Types.F# x_alLe ->
  (GHC.Types.F# (GHC.Prim.negateFloat# x_alLe))
  `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
          :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
  }

Rec {
Engine.Terrain.Generator.findY [Occ=LoopBreaker]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Arity=3, Str=DmdType LLS]
Engine.Terrain.Generator.findY =
  \ (xf_amE7 :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (zf_amE8 :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (ds_dmIe :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case ds_dmIe of _ {
      [] -> lvl2_rn9i;
      : xl_amE9 ds1_dmIf ->
        case ds1_dmIf of _ {
          [] -> lvl2_rn9i;
          : yl_amEa ds2_dmIg ->
            case ds2_dmIg of _ {
              [] -> lvl2_rn9i;
              : zl_amEb heights_amEc ->
                case xf_amE7
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of wild3_amOx { GHC.Types.F# x_amOz ->
                case xl_amE9
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y_amOD ->
                case GHC.Prim.eqFloat# x_amOz y_amOD of _ {
                  GHC.Types.False ->
                    Engine.Terrain.Generator.findY
                      (wild3_amOx
                       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                      zf_amE8
                      heights_amEc;
                  GHC.Types.True ->
                    case zf_amE8
                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                    of wild6_XmQW { GHC.Types.F# x1_XmQZ ->
                    case zl_amEb
                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                    of _ { GHC.Types.F# y1_XmR6 ->
                    case GHC.Prim.eqFloat# x1_XmQZ y1_XmR6 of _ {
                      GHC.Types.False ->
                        Engine.Terrain.Generator.findY
                          (wild3_amOx
                           `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                   :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                          (wild6_XmQW
                           `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                   :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                          heights_amEc;
                      GHC.Types.True -> yl_amEa
                    }
                    }
                    }
                }
                }
                }
            }
        }
    }
end Rec }

lvl3_rn9j :: Foreign.C.Types.CFloat
[GblId, Str=DmdType]
lvl3_rn9j =
  case GHC.Float.$w$cfromRational1 lvl1_rn9h lvl_rn9g
  of _ { GHC.Types.F# x_alLe ->
  (GHC.Types.F# (GHC.Prim.negateFloat# x_alLe))
  `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
          :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
  }

Rec {
Engine.Terrain.Generator.applyHeights [Occ=LoopBreaker]
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId, Arity=2, Str=DmdType SL]
Engine.Terrain.Generator.applyHeights =
  \ (ds_dmIo :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (ref_amE5 :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case ds_dmIo of _ {
      [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : x_amE1 ds1_dmIp ->
        case ds1_dmIp of _ {
          [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
          : y_amE2 ds2_dmIq ->
            case ds2_dmIq of _ {
              [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
              : z_amE3 coords_amE4 ->
                GHC.Types.:
                  @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                  x_amE1
                  (GHC.Types.:
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                     (case (Engine.Terrain.Generator.findY x_amE1 z_amE3 ref_amE5)
                           `cast` (<Foreign.C.Types.NTCo:CFloat>
                                   :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                      of wild3_amOx { GHC.Types.F# x1_amOz ->
                      case lvl3_rn9j
                           `cast` (<Foreign.C.Types.NTCo:CFloat>
                                   :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                      of _ { GHC.Types.F# y1_amOD ->
                      case GHC.Prim.eqFloat# x1_amOz y1_amOD of _ {
                        GHC.Types.False ->
                          wild3_amOx
                          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat);
                        GHC.Types.True -> y_amE2
                      }
                      }
                      })
                     (GHC.Types.:
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                        z_amE3
                        (Engine.Terrain.Generator.applyHeights coords_amE4 ref_amE5)))
            }
        }
    }
end Rec }

Engine.Terrain.Generator.createFlat2 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Generator.createFlat2 = GHC.Types.F# (__float 0.0)

Rec {
Engine.Terrain.Generator.$wcreateStrip [Occ=LoopBreaker]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Prim.Float#
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Prim.Float#
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId, Arity=4, Caf=NoCafRefs, Str=DmdType LLLL]
Engine.Terrain.Generator.$wcreateStrip =
  \ (w_sn1v :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (ww_sn1y :: GHC.Prim.Float#)
    (w1_sn1A :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (ww1_sn1D :: GHC.Prim.Float#) ->
    case GHC.Prim.ltFloat# ww1_sn1D ww_sn1y of _ {
      GHC.Types.False ->
        GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      GHC.Types.True ->
        GHC.Types.:
          @ Foreign.C.Types.CFloat
          w1_sn1A
          (GHC.Types.:
             @ Foreign.C.Types.CFloat
             (Engine.Terrain.Generator.createFlat2
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             (let {
                wild1_afaR :: GHC.Types.Float
                [LclId]
                wild1_afaR = GHC.Types.F# ww1_sn1D } in
              GHC.Types.:
                @ Foreign.C.Types.CFloat
                (wild1_afaR
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                (GHC.Types.:
                   @ Foreign.C.Types.CFloat
                   w1_sn1A
                   (GHC.Types.:
                      @ Foreign.C.Types.CFloat
                      (Engine.Terrain.Generator.createFlat2
                       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                      (GHC.Types.:
                         @ Foreign.C.Types.CFloat
                         (case w_sn1v
                               `cast` (<Foreign.C.Types.NTCo:CFloat>
                                       :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                          of _ { GHC.Types.F# y_aftj ->
                          (GHC.Types.F# (GHC.Prim.plusFloat# ww1_sn1D y_aftj))
                          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                          })
                         (GHC.Types.:
                            @ Foreign.C.Types.CFloat
                            ((GHC.Float.plusFloat
                                (w1_sn1A
                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float))
                                (w_sn1v
                                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)))
                             `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                     :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                            (GHC.Types.:
                               @ Foreign.C.Types.CFloat
                               (Engine.Terrain.Generator.createFlat2
                                `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                        :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                               (GHC.Types.:
                                  @ Foreign.C.Types.CFloat
                                  (wild1_afaR
                                   `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                           :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                                  (GHC.Types.:
                                     @ Foreign.C.Types.CFloat
                                     ((GHC.Float.plusFloat
                                         (w1_sn1A
                                          `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                  :: Foreign.C.Types.CFloat ~# GHC.Types.Float))
                                         (w_sn1v
                                          `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                  :: Foreign.C.Types.CFloat ~# GHC.Types.Float)))
                                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                                     (GHC.Types.:
                                        @ Foreign.C.Types.CFloat
                                        (Engine.Terrain.Generator.createFlat2
                                         `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                 :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                                        (GHC.Types.:
                                           @ Foreign.C.Types.CFloat
                                           (wild1_afaR
                                            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                                           (GHC.Types.:
                                              @ Foreign.C.Types.CFloat
                                              w1_sn1A
                                              (GHC.Types.:
                                                 @ Foreign.C.Types.CFloat
                                                 (Engine.Terrain.Generator.createFlat2
                                                  `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                          :: GHC.Types.Float
                                                               ~#
                                                             Foreign.C.Types.CFloat))
                                                 (GHC.Types.:
                                                    @ Foreign.C.Types.CFloat
                                                    (case w_sn1v
                                                          `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                  :: Foreign.C.Types.CFloat
                                                                       ~#
                                                                     GHC.Types.Float)
                                                     of _ { GHC.Types.F# y_aftj ->
                                                     (GHC.Types.F#
                                                        (GHC.Prim.plusFloat# ww1_sn1D y_aftj))
                                                     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                             :: GHC.Types.Float
                                                                  ~#
                                                                Foreign.C.Types.CFloat)
                                                     })
                                                    (GHC.Types.:
                                                       @ Foreign.C.Types.CFloat
                                                       ((GHC.Float.plusFloat
                                                           (w1_sn1A
                                                            `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                    :: Foreign.C.Types.CFloat
                                                                         ~#
                                                                       GHC.Types.Float))
                                                           (w_sn1v
                                                            `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                    :: Foreign.C.Types.CFloat
                                                                         ~#
                                                                       GHC.Types.Float)))
                                                        `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                                                :: GHC.Types.Float
                                                                     ~#
                                                                   Foreign.C.Types.CFloat))
                                                       (GHC.Types.:
                                                          @ Foreign.C.Types.CFloat
                                                          (Engine.Terrain.Generator.createFlat2
                                                           `cast` (Sym
                                                                     <(Foreign.C.Types.NTCo:CFloat)>
                                                                   :: GHC.Types.Float
                                                                        ~#
                                                                      Foreign.C.Types.CFloat))
                                                          (GHC.Types.:
                                                             @ Foreign.C.Types.CFloat
                                                             (case w_sn1v
                                                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                           :: Foreign.C.Types.CFloat
                                                                                ~#
                                                                              GHC.Types.Float)
                                                              of _ { GHC.Types.F# y_aftj ->
                                                              (GHC.Types.F#
                                                                 (GHC.Prim.plusFloat#
                                                                    ww1_sn1D y_aftj))
                                                              `cast` (Sym
                                                                        <(Foreign.C.Types.NTCo:CFloat)>
                                                                      :: GHC.Types.Float
                                                                           ~#
                                                                         Foreign.C.Types.CFloat)
                                                              })
                                                             (case w_sn1v
                                                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                                                           :: Foreign.C.Types.CFloat
                                                                                ~#
                                                                              GHC.Types.Float)
                                                              of wild2_afth { GHC.Types.F# y_aftj ->
                                                              Engine.Terrain.Generator.$wcreateStrip
                                                                (wild2_afth
                                                                 `cast` (Sym
                                                                           <(Foreign.C.Types.NTCo:CFloat)>
                                                                         :: GHC.Types.Float
                                                                              ~#
                                                                            Foreign.C.Types.CFloat))
                                                                ww_sn1y
                                                                w1_sn1A
                                                                (GHC.Prim.plusFloat#
                                                                   ww1_sn1D y_aftj)
                                                              }))))))))))))))))))
    }
end Rec }

Engine.Terrain.Generator.createStrip [InlPrag=INLINE[0]]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=DmdType LU(L)LU(L),
 Unf=Unf{Src=Worker=Engine.Terrain.Generator.$wcreateStrip,
         TopLvl=True, Arity=4, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sn1v [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (w1_sn1w [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (w2_sn1A [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (w3_sn1B [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 case w1_sn1w
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww_sn1y [Occ=Once] ->
                 case w3_sn1B
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww1_sn1D [Occ=Once] ->
                 Engine.Terrain.Generator.$wcreateStrip
                   w_sn1v ww_sn1y w2_sn1A ww1_sn1D
                 }
                 }}]
Engine.Terrain.Generator.createStrip =
  \ (w_sn1v :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (w1_sn1w :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (w2_sn1A :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (w3_sn1B :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case w1_sn1w
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww_sn1y ->
    case w3_sn1B
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww1_sn1D ->
    Engine.Terrain.Generator.$wcreateStrip
      w_sn1v ww_sn1y w2_sn1A ww1_sn1D
    }
    }

Rec {
Engine.Terrain.Generator.$wcreateFlatRaw [Occ=LoopBreaker]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Prim.Float#
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> [Foreign.C.Types.CFloat]
[GblId, Arity=3, Caf=NoCafRefs, Str=DmdType LLL]
Engine.Terrain.Generator.$wcreateFlatRaw =
  \ (w_sn1J :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (ww_sn1M :: GHC.Prim.Float#)
    (w1_sn1O :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    GHC.Base.++
      @ Foreign.C.Types.CFloat
      (Engine.Terrain.Generator.$wcreateStrip
         w_sn1J ww_sn1M w1_sn1O (__float 0.0))
      (case w1_sn1O
            `cast` (<Foreign.C.Types.NTCo:CFloat>
                    :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
       of _ { GHC.Types.F# x_afaT ->
       case GHC.Prim.ltFloat# x_afaT ww_sn1M of _ {
         GHC.Types.False ->
           GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
         GHC.Types.True ->
           Engine.Terrain.Generator.$wcreateFlatRaw
             w_sn1J
             ww_sn1M
             ((GHC.Types.F# (GHC.Prim.plusFloat# x_afaT (__float 1.0)))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
       }
       })
end Rec }

Engine.Terrain.Generator.createFlat_createFlatRaw [InlPrag=INLINE[0]]
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType LU(L)L,
 Unf=Unf{Src=Worker=Engine.Terrain.Generator.$wcreateFlatRaw,
         TopLvl=True, Arity=3, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sn1J [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (w1_sn1K [Occ=Once] :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (w2_sn1O [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 case w1_sn1K
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww_sn1M [Occ=Once] ->
                 Engine.Terrain.Generator.$wcreateFlatRaw w_sn1J ww_sn1M w2_sn1O
                 }}]
Engine.Terrain.Generator.createFlat_createFlatRaw =
  \ (w_sn1J :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (w1_sn1K :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (w2_sn1O :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case w1_sn1K
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww_sn1M ->
    Engine.Terrain.Generator.$wcreateFlatRaw w_sn1J ww_sn1M w2_sn1O
    }

Engine.Terrain.Generator.createFlat1 :: GHC.Types.Float
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Terrain.Generator.createFlat1 =
  Engine.Terrain.Generator.createFlat2

Engine.Terrain.Generator.createFlat
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType LU(L),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (spacing_amDR [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (width_amDS [Occ=Once]
                    :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 Engine.Terrain.Generator.createFlat_createFlatRaw
                   spacing_amDR
                   width_amDS
                   (Engine.Terrain.Generator.createFlat1
                    `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                            :: GHC.Types.Float ~# Foreign.C.Types.CFloat))}]
Engine.Terrain.Generator.createFlat =
  \ (spacing_amDR :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (width_amDS :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case width_amDS
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww_sn1M ->
    Engine.Terrain.Generator.$wcreateFlatRaw
      spacing_amDR
      ww_sn1M
      (Engine.Terrain.Generator.createFlat2
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    }

Rec {
Engine.Terrain.Generator.heightsToCoords [Occ=LoopBreaker]
  :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId, Arity=3, Caf=NoCafRefs, Str=DmdType SLL]
Engine.Terrain.Generator.heightsToCoords =
  \ (ds_dmHv :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]])
    (z_amEy :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (spacing_amEz :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case ds_dmHv of _ {
      [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : yi_amEw restYs_amEx ->
        letrec {
          completeLine_smKl [Occ=LoopBreaker]
            :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
               -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
               -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
          [LclId, Arity=2, Str=DmdType SL]
          completeLine_smKl =
            \ (ds1_dmHs :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
              (x_amED :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
              case ds1_dmHs of _ {
                [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
                : y_amEB ys_amEC ->
                  GHC.Types.:
                    @ Foreign.C.Types.CFloat
                    x_amED
                    (GHC.Types.:
                       @ Foreign.C.Types.CFloat
                       y_amEB
                       (GHC.Types.:
                          @ Foreign.C.Types.CFloat
                          z_amEy
                          (completeLine_smKl
                             ys_amEC
                             (case x_amED
                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                              of _ { GHC.Types.F# x1_aftf ->
                              case spacing_amEz
                                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                              of _ { GHC.Types.F# y1_aftj ->
                              (GHC.Types.F# (GHC.Prim.plusFloat# x1_aftf y1_aftj))
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                              }
                              }))))
              }; } in
        GHC.Base.++
          @ Foreign.C.Types.CFloat
          (completeLine_smKl
             yi_amEw
             (Engine.Terrain.Generator.createFlat2
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
          (Engine.Terrain.Generator.heightsToCoords
             restYs_amEx
             (case z_amEy
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# x_aftf ->
              case spacing_amEz
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# y_aftj ->
              (GHC.Types.F# (GHC.Prim.plusFloat# x_aftf y_aftj))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
              }
              })
             spacing_amEz)
    }
end Rec }

Engine.Terrain.Generator.genSimplexModel9 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Generator.genSimplexModel9 =
  GHC.Types.F# (__float 1.0)

Engine.Terrain.Generator.genSimplexModel8 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Terrain.Generator.genSimplexModel8 =
  GHC.CString.unpackCString# "position"

Engine.Terrain.Generator.genSimplexModel7 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Terrain.Generator.genSimplexModel7 =
  GHC.CString.unpackCString# "normal"

Engine.Terrain.Generator.genSimplexModelSplit6 :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Generator.genSimplexModelSplit6 =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Terrain.Generator.genSimplexModel7
    (GHC.Types.[] @ GHC.Base.String)

Engine.Terrain.Generator.genSimplexModelSplit5 :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Generator.genSimplexModelSplit5 =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Terrain.Generator.genSimplexModel8
    Engine.Terrain.Generator.genSimplexModelSplit6

Engine.Terrain.Generator.genSimplexModel4 :: GHC.Word.Word32
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Generator.genSimplexModel4 =
  GHC.Word.W32# (__word 3)

Engine.Terrain.Generator.genSimplexModelSplit4
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Generator.genSimplexModelSplit4 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Terrain.Generator.genSimplexModel4
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    (GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLuint)

Engine.Terrain.Generator.genSimplexModelSplit3
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Generator.genSimplexModelSplit3 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Terrain.Generator.genSimplexModel4
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    Engine.Terrain.Generator.genSimplexModelSplit4

Engine.Terrain.Generator.genSimplexModelSplit2 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Terrain.Generator.genSimplexModelSplit2 = GHC.Types.I# 5

Engine.Terrain.Generator.genSimplexModelSplit1
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Types.Int
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Model.Model.Model] #)
[GblId,
 Arity=7,
 Str=DmdType LLLLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=7, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 0 0] 422 0}]
Engine.Terrain.Generator.genSimplexModelSplit1 =
  \ (vert_amDv :: GHC.IO.FilePath)
    (frag_amDw :: GHC.IO.FilePath)
    (w_amDx :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (octaves_amDy :: GHC.Types.Int)
    (wavelength_amDz :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (intensity_amDA :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Terrain.Noise.simplexNoise1
           (case w_amDx
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww_amYN ->
            case GHC.Float.$w$cproperFraction1
                   @ GHC.Types.Int GHC.Real.$fIntegralInt ww_amYN
            of _ { (# ww2_amYS, ww3_amYT #) ->
            case ww3_amYT of _ { GHC.Types.F# x1_amPL ->
            case GHC.Prim.ltFloat# x1_amPL (__float 0.0) of _ {
              GHC.Types.False -> ww2_amYS;
              GHC.Types.True ->
                case ww2_amYS of _ { GHC.Types.I# x_a3tF ->
                GHC.Types.I# (GHC.Prim.-# x_a3tF 1)
                }
            }
            }
            }
            })
           octaves_amDy
           wavelength_amDz
           intensity_amDA
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    Engine.Model.Model.createModelSplit1
      vert_amDv
      frag_amDw
      Engine.Terrain.Generator.genSimplexModelSplit5
      (let {
         vertices_smKj [Dmd=Just L]
           :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
         [LclId, Str=DmdType]
         vertices_smKj =
           case w_amDx
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# ww_sn1M ->
           Engine.Terrain.Generator.applyHeights
             (Engine.Terrain.Generator.$wcreateFlatRaw
                (Engine.Terrain.Generator.genSimplexModel9
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ww_sn1M
                (Engine.Terrain.Generator.createFlat2
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
             (Engine.Terrain.Generator.heightsToCoords
                ipv1_a3Uj
                (Engine.Terrain.Generator.createFlat2
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                (Engine.Terrain.Generator.genSimplexModel9
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
           } } in
       GHC.Types.:
         @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
         vertices_smKj
         (GHC.Types.:
            @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
            (Engine.Terrain.Generator.calculateNormals vertices_smKj)
            (GHC.Types.[] @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])))
      Engine.Terrain.Generator.genSimplexModelSplit3
      Engine.Terrain.Generator.genSimplexModelSplit2
      ipv_a3Ui
    }

Engine.Terrain.Generator.genSimplexModelSplit
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Types.Int
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Types.IO [Engine.Model.Model.Model]
[GblId,
 Arity=7,
 Str=DmdType LLLLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Terrain.Generator.genSimplexModelSplit =
  Engine.Terrain.Generator.genSimplexModelSplit1
  `cast` (<GHC.IO.FilePath>
          -> <GHC.IO.FilePath>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
          -> <GHC.Types.Int>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
          -> Sym <(GHC.Types.NTCo:IO <[Engine.Model.Model.Model]>)>
          :: (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Types.Int
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Model.Model.Model] #))
               ~#
             (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Types.Int
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Types.IO [Engine.Model.Model.Model]))

Engine.Terrain.Generator.genSimplexModel6 :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Generator.genSimplexModel6 =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Terrain.Generator.genSimplexModel7
    (GHC.Types.[] @ GHC.Base.String)

Engine.Terrain.Generator.genSimplexModel5 :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Generator.genSimplexModel5 =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Terrain.Generator.genSimplexModel8
    Engine.Terrain.Generator.genSimplexModel6

Engine.Terrain.Generator.genSimplexModel3
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Generator.genSimplexModel3 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Terrain.Generator.genSimplexModel4
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    (GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLuint)

Engine.Terrain.Generator.genSimplexModel2
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Terrain.Generator.genSimplexModel2 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Terrain.Generator.genSimplexModel4
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    Engine.Terrain.Generator.genSimplexModel3

Engine.Terrain.Generator.genSimplexModel1
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Types.Int
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Model.Model.Model #)
[GblId,
 Arity=7,
 Str=DmdType LLLLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=7, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0 0 0] 513 0}]
Engine.Terrain.Generator.genSimplexModel1 =
  \ (vert_amDG :: GHC.IO.FilePath)
    (frag_amDH :: GHC.IO.FilePath)
    (w_amDI :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (octaves_amDJ :: GHC.Types.Int)
    (wavelength_amDK :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (intensity_amDL :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Terrain.Noise.simplexNoise1
           (case w_amDI
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww_amYN ->
            case GHC.Float.$w$cproperFraction1
                   @ GHC.Types.Int GHC.Real.$fIntegralInt ww_amYN
            of _ { (# ww2_amYS, ww3_amYT #) ->
            case ww3_amYT of _ { GHC.Types.F# x1_amPL ->
            case GHC.Prim.ltFloat# x1_amPL (__float 0.0) of _ {
              GHC.Types.False -> ww2_amYS;
              GHC.Types.True ->
                case ww2_amYS of _ { GHC.Types.I# x_a3tF ->
                GHC.Types.I# (GHC.Prim.-# x_a3tF 1)
                }
            }
            }
            }
            })
           octaves_amDJ
           wavelength_amDK
           intensity_amDL
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    let {
      vertices_smKh [Dmd=Just L]
        :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
      [LclId, Str=DmdType]
      vertices_smKh =
        case w_amDI
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# ww_sn1M ->
        Engine.Terrain.Generator.applyHeights
          (Engine.Terrain.Generator.$wcreateFlatRaw
             (Engine.Terrain.Generator.genSimplexModel9
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ww_sn1M
             (Engine.Terrain.Generator.createFlat2
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
          (Engine.Terrain.Generator.heightsToCoords
             ipv1_a3Uj
             (Engine.Terrain.Generator.createFlat2
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             (Engine.Terrain.Generator.genSimplexModel9
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
        } } in
    Engine.Model.Model.createModel1
      vert_amDG
      frag_amDH
      Engine.Terrain.Generator.genSimplexModel5
      (GHC.Types.:
         @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
         vertices_smKh
         (GHC.Types.:
            @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
            (Engine.Terrain.Generator.calculateNormals vertices_smKh)
            (GHC.Types.[] @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])))
      Engine.Terrain.Generator.genSimplexModel2
      (case GHC.List.$wlen
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat vertices_smKh 0
       of ww_adam { __DEFAULT ->
       case GHC.Classes.divInt# ww_adam 3 of ww1_aiMd { __DEFAULT ->
       (GHC.Int.I32# (GHC.Prim.narrow32Int# ww1_aiMd))
       `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
               :: GHC.Int.Int32 ~# Foreign.C.Types.CInt)
       }
       })
      ipv_a3Ui
    }

Engine.Terrain.Generator.genSimplexModel
  :: GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Types.Int
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> GHC.Types.IO Engine.Model.Model.Model
[GblId,
 Arity=7,
 Str=DmdType LLLLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Terrain.Generator.genSimplexModel =
  Engine.Terrain.Generator.genSimplexModel1
  `cast` (<GHC.IO.FilePath>
          -> <GHC.IO.FilePath>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
          -> <GHC.Types.Int>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLfloat>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Model.Model.Model>)>
          :: (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Types.Int
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Model.Model.Model #))
               ~#
             (GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Types.Int
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              -> GHC.Types.IO Engine.Model.Model.Model))



[10 of 17] Compiling Engine.Model.Material ( Engine/Model/Material.hs, Engine/Model/Material.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 1,37, types: 1,57, coercions: 105}

Engine.Model.Material.applyDefualtMtl5 :: GHC.Integer.Type.Integer
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
Engine.Model.Material.applyDefualtMtl5 = __integer 1

Engine.Model.Material.applyDefualtMtl8 :: GHC.Integer.Type.Integer
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
Engine.Model.Material.applyDefualtMtl8 = __integer 5

Engine.Model.Material.applyDefualtMtl11
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 130 40}]
Engine.Model.Material.applyDefualtMtl11 =
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl5
         Engine.Model.Material.applyDefualtMtl8
  of nt_sopB { GHC.Types.F# ipv_sopC ->
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl5
         Engine.Model.Material.applyDefualtMtl8
  of nt1_sopG { GHC.Types.F# ipv1_sopH ->
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl5
         Engine.Model.Material.applyDefualtMtl8
  of nt2_sopL { GHC.Types.F# ipv2_sopM ->
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (nt_sopB
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (nt1_sopG
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (nt2_sopL
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
  }
  }
  }

Engine.Model.Material.applyDefualtMtl10
  :: Data.Maybe.Maybe
       (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.Material.applyDefualtMtl10 =
  Data.Maybe.Just
    @ (Engine.Core.Vec.Vec3
         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    Engine.Model.Material.applyDefualtMtl11

Engine.Model.Material.applyDefualtMtl9 :: GHC.Integer.Type.Integer
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
Engine.Model.Material.applyDefualtMtl9 = __integer 4

Engine.Model.Material.applyDefualtMtl7
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 130 40}]
Engine.Model.Material.applyDefualtMtl7 =
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl9
         Engine.Model.Material.applyDefualtMtl8
  of nt_sopS { GHC.Types.F# ipv_sopT ->
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl9
         Engine.Model.Material.applyDefualtMtl8
  of nt1_sopX { GHC.Types.F# ipv1_sopY ->
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl9
         Engine.Model.Material.applyDefualtMtl8
  of nt2_soq2 { GHC.Types.F# ipv2_soq3 ->
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (nt_sopS
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (nt1_sopX
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (nt2_soq2
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
  }
  }
  }

Engine.Model.Material.applyDefualtMtl6
  :: Data.Maybe.Maybe
       (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.Material.applyDefualtMtl6 =
  Data.Maybe.Just
    @ (Engine.Core.Vec.Vec3
         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    Engine.Model.Material.applyDefualtMtl7

Engine.Model.Material.applyDefualtMtl4
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 130 40}]
Engine.Model.Material.applyDefualtMtl4 =
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl5
         Engine.Model.Material.applyDefualtMtl5
  of nt_soq9 { GHC.Types.F# ipv_soqa ->
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl5
         Engine.Model.Material.applyDefualtMtl5
  of nt1_soqe { GHC.Types.F# ipv1_soqf ->
  case GHC.Float.$w$cfromRational1
         Engine.Model.Material.applyDefualtMtl5
         Engine.Model.Material.applyDefualtMtl5
  of nt2_soqj { GHC.Types.F# ipv2_soqk ->
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (nt_soq9
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (nt1_soqe
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (nt2_soqj
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
  }
  }
  }

Engine.Model.Material.applyDefualtMtl3
  :: Data.Maybe.Maybe
       (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.Material.applyDefualtMtl3 =
  Data.Maybe.Just
    @ (Engine.Core.Vec.Vec3
         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    Engine.Model.Material.applyDefualtMtl4

Engine.Model.Material.applyDefualtMtl2 :: GHC.Int.Int32
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.Material.applyDefualtMtl2 = GHC.Int.I32# (-1)

Engine.Model.Material.applyDefualtMtl1
  :: Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLint
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.Material.applyDefualtMtl1 =
  Data.Maybe.Just
    @ Graphics.Rendering.OpenGL.Raw.Types.GLint
    (Engine.Model.Material.applyDefualtMtl2
     `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
             :: GHC.Int.Int32 ~# Foreign.C.Types.CInt))

Engine.Model.Material.applyDefualtMtl [InlPrag=INLINE[0]]
  :: Engine.Model.Material.Material -> Engine.Model.Material.Material
[GblId,
 Arity=1,
 Str=DmdType U(LLLLLL)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_soOb [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case w_soOb
                 of _
                 { Engine.Model.Material.Material ww_soOd [Occ=Once]
                                                  ww1_soOe [Occ=Once!]
                                                  ww2_soOf [Occ=Once!]
                                                  ww3_soOg [Occ=Once!]
                                                  ww4_soOh [Occ=Once]
                                                  ww5_soOi [Occ=Once!] ->
                 Engine.Model.Material.Material
                   ww_soOd
                   (case ww1_soOe of wild_aofk {
                      Data.Maybe.Nothing -> Engine.Model.Material.applyDefualtMtl10;
                      Data.Maybe.Just _ -> wild_aofk
                    })
                   (case ww2_soOf of wild_aofk {
                      Data.Maybe.Nothing -> Engine.Model.Material.applyDefualtMtl6;
                      Data.Maybe.Just _ -> wild_aofk
                    })
                   (case ww3_soOg of wild_aofk {
                      Data.Maybe.Nothing -> Engine.Model.Material.applyDefualtMtl3;
                      Data.Maybe.Just _ -> wild_aofk
                    })
                   ww4_soOh
                   (case ww5_soOi of wild_aofk {
                      Data.Maybe.Nothing -> Engine.Model.Material.applyDefualtMtl1;
                      Data.Maybe.Just _ -> wild_aofk
                    })
                 }}]
Engine.Model.Material.applyDefualtMtl =
  \ (w_soOb :: Engine.Model.Material.Material) ->
    case w_soOb
    of _
    { Engine.Model.Material.Material ww_soOd
                                     ww1_soOe
                                     ww2_soOf
                                     ww3_soOg
                                     ww4_soOh
                                     ww5_soOi ->
    Engine.Model.Material.Material
      ww_soOd
      (case ww1_soOe of wild_aofk {
         Data.Maybe.Nothing -> Engine.Model.Material.applyDefualtMtl10;
         Data.Maybe.Just ipv_aoqw -> wild_aofk
       })
      (case ww2_soOf of wild_aofk {
         Data.Maybe.Nothing -> Engine.Model.Material.applyDefualtMtl6;
         Data.Maybe.Just ipv_aoqw -> wild_aofk
       })
      (case ww3_soOg of wild_aofk {
         Data.Maybe.Nothing -> Engine.Model.Material.applyDefualtMtl3;
         Data.Maybe.Just ipv_aoqw -> wild_aofk
       })
      ww4_soOh
      (case ww5_soOi of wild_aofk {
         Data.Maybe.Nothing -> Engine.Model.Material.applyDefualtMtl1;
         Data.Maybe.Just ipv_aoqw -> wild_aofk
       })
    }

Engine.Model.Material.emptyMaterial
  :: Engine.Model.Material.Material
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 70}]
Engine.Model.Material.emptyMaterial =
  Engine.Model.Material.Material
    (GHC.Types.[] @ GHC.Types.Char)
    (Data.Maybe.Nothing
       @ (Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
    (Data.Maybe.Nothing
       @ (Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
    (Data.Maybe.Nothing
       @ (Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
    (Data.Maybe.Nothing
       @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
    (Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLint)

lvl_roXg :: [GHC.Types.Char]
[GblId]
lvl_roXg = GHC.CString.unpackCString# "toTripletMtl"

Engine.Model.Material.readMtlLineTriplet7
  :: forall a_t. Engine.Core.Vec.Vec3 a_t
[GblId, Str=DmdType b]
Engine.Model.Material.readMtlLineTriplet7 =
  \ (@ a_t) -> GHC.Err.error @ (Engine.Core.Vec.Vec3 a_t) lvl_roXg

Engine.Model.Material.$wtoTripletMtl
  :: forall a_ao1a. [a_ao1a] -> (# a_ao1a, a_ao1a, a_ao1a #)
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30] 160 40}]
Engine.Model.Material.$wtoTripletMtl =
  \ (@ a_ao1a) (w_soOn :: [a_ao1a]) ->
    case GHC.List.$wlen @ a_ao1a w_soOn 0 of _ {
      __DEFAULT ->
        case Engine.Model.Material.readMtlLineTriplet7 of wild_00 { };
      3 ->
        case w_soOn of wild_ac76 {
          [] -> case GHC.List.badHead of wild1_00 { };
          : x_ac7a ds1_ac7b ->
            case x_ac7a of tpl_X6 { __DEFAULT ->
            case GHC.List.!!_sub @ a_ao1a wild_ac76 1 of tpl1_X8 { __DEFAULT ->
            case GHC.List.!!_sub @ a_ao1a wild_ac76 2 of tpl2_Xa { __DEFAULT ->
            (# tpl_X6, tpl1_X8, tpl2_Xa #)
            }
            }
            }
        }
    }

Engine.Model.Material.toTripletMtl [InlPrag=INLINE[0]]
  :: forall a_ao1a. [a_ao1a] -> Engine.Core.Vec.Vec3 a_ao1a
[GblId,
 Arity=1,
 Str=DmdType Sm,
 Unf=Unf{Src=Worker=Engine.Model.Material.$wtoTripletMtl,
         TopLvl=True, Arity=1, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_ao1a) (w_soOn [Occ=Once] :: [a_ao1a]) ->
                 case Engine.Model.Material.$wtoTripletMtl @ a_ao1a w_soOn
                 of _
                 { (# ww1_soOZ [Occ=Once], ww2_soP0 [Occ=Once], ww3_soP1 [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3 @ a_ao1a ww1_soOZ ww2_soP0 ww3_soP1
                 }}]
Engine.Model.Material.toTripletMtl =
  \ (@ a_ao1a) (w_soOn :: [a_ao1a]) ->
    case Engine.Model.Material.$wtoTripletMtl @ a_ao1a w_soOn
    of _ { (# ww1_soOZ, ww2_soP0, ww3_soP1 #) ->
    Engine.Core.Vec.Vec3 @ a_ao1a ww1_soOZ ww2_soP0 ww3_soP1
    }

Engine.Model.Material.matAmbientColor
  :: Engine.Model.Material.Material
     -> Data.Maybe.Maybe
          (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(ASAAAA),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_doeC [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case ds_doeC
                 of _
                 { Engine.Model.Material.Material _ ds2_doeE [Occ=Once] _ _ _ _ ->
                 ds2_doeE
                 }}]
Engine.Model.Material.matAmbientColor =
  \ (ds_doeC :: Engine.Model.Material.Material) ->
    case ds_doeC
    of _
    { Engine.Model.Material.Material ds1_doeD
                                     ds2_doeE
                                     ds3_doeF
                                     ds4_doeG
                                     ds5_doeH
                                     ds6_doeI ->
    ds2_doeE
    }

Engine.Model.Material.matDiffuseColor
  :: Engine.Model.Material.Material
     -> Data.Maybe.Maybe
          (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(AASAAA),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_doeK [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case ds_doeK
                 of _
                 { Engine.Model.Material.Material _ _ ds3_doeN [Occ=Once] _ _ _ ->
                 ds3_doeN
                 }}]
Engine.Model.Material.matDiffuseColor =
  \ (ds_doeK :: Engine.Model.Material.Material) ->
    case ds_doeK
    of _
    { Engine.Model.Material.Material ds1_doeL
                                     ds2_doeM
                                     ds3_doeN
                                     ds4_doeO
                                     ds5_doeP
                                     ds6_doeQ ->
    ds3_doeN
    }

Engine.Model.Material.matName
  :: Engine.Model.Material.Material -> GHC.Base.String
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SAAAAA),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_doeu [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case ds_doeu
                 of _
                 { Engine.Model.Material.Material ds1_doev [Occ=Once] _ _ _ _ _ ->
                 ds1_doev
                 }}]
Engine.Model.Material.matName =
  \ (ds_doeu :: Engine.Model.Material.Material) ->
    case ds_doeu
    of _
    { Engine.Model.Material.Material ds1_doev
                                     ds2_doew
                                     ds3_doex
                                     ds4_doey
                                     ds5_doez
                                     ds6_doeA ->
    ds1_doev
    }

Engine.Model.Material.matSpecularColor
  :: Engine.Model.Material.Material
     -> Data.Maybe.Maybe
          (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(AAASAA),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_doeS [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case ds_doeS
                 of _
                 { Engine.Model.Material.Material _ _ _ ds4_doeW [Occ=Once] _ _ ->
                 ds4_doeW
                 }}]
Engine.Model.Material.matSpecularColor =
  \ (ds_doeS :: Engine.Model.Material.Material) ->
    case ds_doeS
    of _
    { Engine.Model.Material.Material ds1_doeT
                                     ds2_doeU
                                     ds3_doeV
                                     ds4_doeW
                                     ds5_doeX
                                     ds6_doeY ->
    ds4_doeW
    }

Engine.Model.Material.matTexId
  :: Engine.Model.Material.Material
     -> Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLint
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(AAAAAS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dof8 [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case ds_dof8
                 of _
                 { Engine.Model.Material.Material _ _ _ _ _ ds6_dofe [Occ=Once] ->
                 ds6_dofe
                 }}]
Engine.Model.Material.matTexId =
  \ (ds_dof8 :: Engine.Model.Material.Material) ->
    case ds_dof8
    of _
    { Engine.Model.Material.Material ds1_dof9
                                     ds2_dofa
                                     ds3_dofb
                                     ds4_dofc
                                     ds5_dofd
                                     ds6_dofe ->
    ds6_dofe
    }

Engine.Model.Material.matTexture
  :: Engine.Model.Material.Material
     -> Data.Maybe.Maybe
          Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(AAAASA),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dof0 [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case ds_dof0
                 of _
                 { Engine.Model.Material.Material _ _ _ _ ds5_dof5 [Occ=Once] _ ->
                 ds5_dof5
                 }}]
Engine.Model.Material.matTexture =
  \ (ds_dof0 :: Engine.Model.Material.Material) ->
    case ds_dof0
    of _
    { Engine.Model.Material.Material ds1_dof1
                                     ds2_dof2
                                     ds3_dof3
                                     ds4_dof4
                                     ds5_dof5
                                     ds6_dof6 ->
    ds5_dof5
    }

lvl1_roXh :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl1_roXh = GHC.CString.unpackCString# "Material {"

lvl2_roXi :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl2_roXi = GHC.CString.unpackCString# "matName = "

lvl3_roXj :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl3_roXj = GHC.CString.unpackCString# ", "

lvl4_roXk :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl4_roXk = GHC.CString.unpackCString# "matAmbientColor = "

lvl5_roXl :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl5_roXl = GHC.CString.unpackCString# "matDiffuseColor = "

lvl6_roXm :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl6_roXm = GHC.CString.unpackCString# "matSpecularColor = "

lvl7_roXn :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl7_roXn = GHC.CString.unpackCString# "matTexture = "

lvl8_roXo :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl8_roXo = GHC.CString.unpackCString# "matTexId = "

lvl9_roXp :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=DmdType m]
lvl9_roXp = GHC.Types.C# '}'

Engine.Model.Material.$w$cshowsPrec
  :: GHC.Prim.Int#
     -> GHC.Base.String
     -> Data.Maybe.Maybe
          (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
     -> Data.Maybe.Maybe
          (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
     -> Data.Maybe.Maybe
          (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
     -> Data.Maybe.Maybe
          Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
     -> Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLint
     -> GHC.Base.String
     -> GHC.Base.String
[GblId, Arity=8, Str=DmdType LLLLLLLL]
Engine.Model.Material.$w$cshowsPrec =
  \ (ww_soOv :: GHC.Prim.Int#)
    (ww1_soOz :: GHC.Base.String)
    (ww2_soOA
       :: Data.Maybe.Maybe
            (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
    (ww3_soOB
       :: Data.Maybe.Maybe
            (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
    (ww4_soOC
       :: Data.Maybe.Maybe
            (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
    (ww5_soOD
       :: Data.Maybe.Maybe
            Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
    (ww6_soOE
       :: Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLint)
    (w_soOG :: GHC.Base.String) ->
    let {
      p_a8Oj :: GHC.Show.ShowS
      [LclId, Arity=1, Str=DmdType L]
      p_a8Oj =
        \ (x_X3zA :: GHC.Base.String) ->
          GHC.Base.++
            @ GHC.Types.Char
            lvl1_roXh
            (GHC.Base.++
               @ GHC.Types.Char
               lvl2_roXi
               (GHC.Types.:
                  @ GHC.Types.Char
                  GHC.Show.$fShowChar1
                  (GHC.Show.showLitString
                     ww1_soOz
                     (GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShowChar1
                        (GHC.Base.++
                           @ GHC.Types.Char
                           lvl3_roXj
                           (GHC.Base.++
                              @ GHC.Types.Char
                              lvl4_roXk
                              (let {
                                 s_aofN [Dmd=Just L] :: GHC.Base.String
                                 [LclId, Str=DmdType]
                                 s_aofN =
                                   GHC.Base.++
                                     @ GHC.Types.Char
                                     lvl3_roXj
                                     (GHC.Base.++
                                        @ GHC.Types.Char
                                        lvl5_roXl
                                        (let {
                                           s1_XohO [Dmd=Just L] :: GHC.Base.String
                                           [LclId, Str=DmdType]
                                           s1_XohO =
                                             GHC.Base.++
                                               @ GHC.Types.Char
                                               lvl3_roXj
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  lvl6_roXm
                                                  (let {
                                                     s2_XohV [Dmd=Just L] :: GHC.Base.String
                                                     [LclId, Str=DmdType]
                                                     s2_XohV =
                                                       GHC.Base.++
                                                         @ GHC.Types.Char
                                                         lvl3_roXj
                                                         (GHC.Base.++
                                                            @ GHC.Types.Char
                                                            lvl7_roXn
                                                            (let {
                                                               s3_Xoi2 [Dmd=Just L]
                                                                 :: GHC.Base.String
                                                               [LclId, Str=DmdType]
                                                               s3_Xoi2 =
                                                                 GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   lvl3_roXj
                                                                   (GHC.Base.++
                                                                      @ GHC.Types.Char
                                                                      lvl8_roXo
                                                                      (case ww6_soOE of _ {
                                                                         Data.Maybe.Nothing ->
                                                                           GHC.Base.++
                                                                             @ GHC.Types.Char
                                                                             GHC.Show.$fShowMaybe2
                                                                             (GHC.Types.:
                                                                                @ GHC.Types.Char
                                                                                lvl9_roXp
                                                                                x_X3zA);
                                                                         Data.Maybe.Just x1_aofS ->
                                                                           GHC.Base.++
                                                                             @ GHC.Types.Char
                                                                             GHC.Show.$fShowMaybe1
                                                                             (case x1_aofS
                                                                                   `cast` (UnsafeCo
                                                                                             Foreign.C.Types.CInt
                                                                                             GHC.Int.Int32
                                                                                           :: Foreign.C.Types.CInt
                                                                                                ~#
                                                                                              GHC.Int.Int32)
                                                                              of _
                                                                              { GHC.Int.I32# x#_aor4 ->
                                                                              case GHC.Prim.<#
                                                                                     x#_aor4 0
                                                                              of _ {
                                                                                GHC.Types.False ->
                                                                                  GHC.Show.itos
                                                                                    x#_aor4
                                                                                    (GHC.Types.:
                                                                                       @ GHC.Types.Char
                                                                                       lvl9_roXp
                                                                                       x_X3zA);
                                                                                GHC.Types.True ->
                                                                                  GHC.Types.:
                                                                                    @ GHC.Types.Char
                                                                                    GHC.Show.shows11
                                                                                    (GHC.Show.itos
                                                                                       x#_aor4
                                                                                       (GHC.Types.:
                                                                                          @ GHC.Types.Char
                                                                                          GHC.Show.shows10
                                                                                          (GHC.Types.:
                                                                                             @ GHC.Types.Char
                                                                                             lvl9_roXp
                                                                                             x_X3zA)))
                                                                              }
                                                                              })
                                                                       })) } in
                                                             case ww5_soOD of _ {
                                                               Data.Maybe.Nothing ->
                                                                 GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   GHC.Show.$fShowMaybe2
                                                                   s3_Xoi2;
                                                               Data.Maybe.Just x1_aofS ->
                                                                 GHC.Base.++
                                                                   @ GHC.Types.Char
                                                                   GHC.Show.$fShowMaybe1
                                                                   (Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.$w$cshowsPrec
                                                                      11 x1_aofS s3_Xoi2)
                                                             })) } in
                                                   case ww4_soOC of _ {
                                                     Data.Maybe.Nothing ->
                                                       GHC.Base.++
                                                         @ GHC.Types.Char
                                                         GHC.Show.$fShowMaybe2
                                                         s2_XohV;
                                                     Data.Maybe.Just x1_aofS ->
                                                       GHC.Base.++
                                                         @ GHC.Types.Char
                                                         GHC.Show.$fShowMaybe1
                                                         (case x1_aofS
                                                          of _
                                                          { Engine.Core.Vec.Vec3 ww7_s9Pw
                                                                                 ww8_s9Px
                                                                                 ww9_s9Py ->
                                                          Engine.Core.Vec.$w$cshowsPrec1
                                                            @ Foreign.C.Types.CFloat
                                                            Foreign.C.Types.$fShowCFloat
                                                            11
                                                            ww7_s9Pw
                                                            ww8_s9Px
                                                            ww9_s9Py
                                                            s2_XohV
                                                          })
                                                   })) } in
                                         case ww3_soOB of _ {
                                           Data.Maybe.Nothing ->
                                             GHC.Base.++
                                               @ GHC.Types.Char GHC.Show.$fShowMaybe2 s1_XohO;
                                           Data.Maybe.Just x1_aofS ->
                                             GHC.Base.++
                                               @ GHC.Types.Char
                                               GHC.Show.$fShowMaybe1
                                               (case x1_aofS
                                                of _
                                                { Engine.Core.Vec.Vec3 ww7_s9Pw ww8_s9Px ww9_s9Py ->
                                                Engine.Core.Vec.$w$cshowsPrec1
                                                  @ Foreign.C.Types.CFloat
                                                  Foreign.C.Types.$fShowCFloat
                                                  11
                                                  ww7_s9Pw
                                                  ww8_s9Px
                                                  ww9_s9Py
                                                  s1_XohO
                                                })
                                         })) } in
                               case ww2_soOA of _ {
                                 Data.Maybe.Nothing ->
                                   GHC.Base.++ @ GHC.Types.Char GHC.Show.$fShowMaybe2 s_aofN;
                                 Data.Maybe.Just x1_aofS ->
                                   GHC.Base.++
                                     @ GHC.Types.Char
                                     GHC.Show.$fShowMaybe1
                                     (case x1_aofS
                                      of _ { Engine.Core.Vec.Vec3 ww7_s9Pw ww8_s9Px ww9_s9Py ->
                                      Engine.Core.Vec.$w$cshowsPrec1
                                        @ Foreign.C.Types.CFloat
                                        Foreign.C.Types.$fShowCFloat
                                        11
                                        ww7_s9Pw
                                        ww8_s9Px
                                        ww9_s9Py
                                        s_aofN
                                      })
                               }))))))) } in
    case GHC.Prim.>=# ww_soOv 11 of _ {
      GHC.Types.False -> p_a8Oj w_soOG;
      GHC.Types.True ->
        GHC.Types.:
          @ GHC.Types.Char
          GHC.Show.shows11
          (p_a8Oj (GHC.Types.: @ GHC.Types.Char GHC.Show.shows10 w_soOG))
    }

Engine.Model.Material.$fShowMaterial_$cshowsPrec [InlPrag=INLINE[0]]
  :: GHC.Types.Int
     -> Engine.Model.Material.Material -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=DmdType U(L)U(LLLLLL)L,
 Unf=Unf{Src=Worker=Engine.Model.Material.$w$cshowsPrec,
         TopLvl=True, Arity=3, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_soOt [Occ=Once!] :: GHC.Types.Int)
                 (w1_soOx [Occ=Once!] :: Engine.Model.Material.Material)
                 (w2_soOG [Occ=Once] :: GHC.Base.String) ->
                 case w_soOt of _ { GHC.Types.I# ww_soOv [Occ=Once] ->
                 case w1_soOx
                 of _
                 { Engine.Model.Material.Material ww1_soOz [Occ=Once]
                                                  ww2_soOA [Occ=Once]
                                                  ww3_soOB [Occ=Once]
                                                  ww4_soOC [Occ=Once]
                                                  ww5_soOD [Occ=Once]
                                                  ww6_soOE [Occ=Once] ->
                 Engine.Model.Material.$w$cshowsPrec
                   ww_soOv
                   ww1_soOz
                   ww2_soOA
                   ww3_soOB
                   ww4_soOC
                   ww5_soOD
                   ww6_soOE
                   w2_soOG
                 }
                 }}]
Engine.Model.Material.$fShowMaterial_$cshowsPrec =
  \ (w_soOt :: GHC.Types.Int)
    (w1_soOx :: Engine.Model.Material.Material)
    (w2_soOG :: GHC.Base.String) ->
    case w_soOt of _ { GHC.Types.I# ww_soOv ->
    case w1_soOx
    of _
    { Engine.Model.Material.Material ww1_soOz
                                     ww2_soOA
                                     ww3_soOB
                                     ww4_soOC
                                     ww5_soOD
                                     ww6_soOE ->
    Engine.Model.Material.$w$cshowsPrec
      ww_soOv
      ww1_soOz
      ww2_soOA
      ww3_soOB
      ww4_soOC
      ww5_soOD
      ww6_soOE
      w2_soOG
    }
    }

Engine.Model.Material.$fShowMaterial1
  :: Engine.Model.Material.Material -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [20 0] 100 0}]
Engine.Model.Material.$fShowMaterial1 =
  \ (w_soOx :: Engine.Model.Material.Material)
    (w1_soOG :: GHC.Base.String) ->
    case w_soOx
    of _
    { Engine.Model.Material.Material ww_soOz
                                     ww1_soOA
                                     ww2_soOB
                                     ww3_soOC
                                     ww4_soOD
                                     ww5_soOE ->
    Engine.Model.Material.$w$cshowsPrec
      0 ww_soOz ww1_soOA ww2_soOB ww3_soOC ww4_soOD ww5_soOE w1_soOG
    }

Engine.Model.Material.$fShowMaterial_$cshowList
  :: [Engine.Model.Material.Material] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 60}]
Engine.Model.Material.$fShowMaterial_$cshowList =
  GHC.Show.showList__
    @ Engine.Model.Material.Material
    Engine.Model.Material.$fShowMaterial1

Engine.Model.Material.$fShowMaterial_$cshow
  :: Engine.Model.Material.Material -> GHC.Base.String
[GblId,
 Arity=1,
 Str=DmdType U(LLLLLL),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a8Qm [Occ=Once] :: Engine.Model.Material.Material) ->
                 Engine.Model.Material.$fShowMaterial_$cshowsPrec
                   GHC.Show.shows26 x_a8Qm (GHC.Types.[] @ GHC.Types.Char)}]
Engine.Model.Material.$fShowMaterial_$cshow =
  \ (x_a8Qm :: Engine.Model.Material.Material) ->
    case x_a8Qm
    of _
    { Engine.Model.Material.Material ww_soOz
                                     ww1_soOA
                                     ww2_soOB
                                     ww3_soOC
                                     ww4_soOD
                                     ww5_soOE ->
    Engine.Model.Material.$w$cshowsPrec
      0
      ww_soOz
      ww1_soOA
      ww2_soOB
      ww3_soOC
      ww4_soOD
      ww5_soOE
      (GHC.Types.[] @ GHC.Types.Char)
    }

Engine.Model.Material.$fShowMaterial [InlPrag=[ALWAYS] CONLIKE]
  :: GHC.Show.Show Engine.Model.Material.Material
[GblId[DFunId],
 Str=DmdType m,
 Unf=DFun(arity=0) GHC.Show.D:Show [{Engine.Model.Material.$fShowMaterial_$cshowsPrec},
                                    {Engine.Model.Material.$fShowMaterial_$cshow},
                                    {Engine.Model.Material.$fShowMaterial_$cshowList}]]
Engine.Model.Material.$fShowMaterial =
  GHC.Show.D:Show
    @ Engine.Model.Material.Material
    Engine.Model.Material.$fShowMaterial_$cshowsPrec
    Engine.Model.Material.$fShowMaterial_$cshow
    Engine.Model.Material.$fShowMaterial_$cshowList

Engine.Model.Material.readMtlLineTriplet6
  :: Text.ParserCombinators.ReadP.P GHC.Types.Float
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 40 0}]
Engine.Model.Material.readMtlLineTriplet6 =
  GHC.Read.$fReadFloat11
    GHC.Read.$fReadFloat_$sconvertFrac
    Text.ParserCombinators.ReadPrec.minPrec
    @ GHC.Types.Float
    (Text.ParserCombinators.ReadP.$fMonadP_$creturn @ GHC.Types.Float)

Rec {
Engine.Model.Material.readMtlLineTriplet_go [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CFloat, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.Material.readMtlLineTriplet_go =
  \ (ds_aoGU :: [(Foreign.C.Types.CFloat, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl11_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId, Str=DmdType]
          lvl11_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)}]
          k_aoFn = \ _ -> lvl11_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat k_aoFn))
             s'_aoH4)
          (Engine.Model.Material.readMtlLineTriplet_go ys_aoGZ)
        }
    }
end Rec }

Engine.Model.Material.readMtlLineTriplet3
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Model.Material.readMtlLineTriplet3 =
  GHC.Err.error
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat Text.Read.readEither4

Engine.Model.Material.readMtlLineTriplet2
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Model.Material.readMtlLineTriplet2 =
  GHC.Err.error
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat Text.Read.readEither2

Engine.Model.Material.readMtlLineTriplet5
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 30}]
Engine.Model.Material.readMtlLineTriplet5 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.Material.readMtlLineTriplet_go
           ((Text.ParserCombinators.ReadP.run
               @ GHC.Types.Float Engine.Model.Material.readMtlLineTriplet6 s_aoH6)
            `cast` ([(UnsafeCo GHC.Types.Float Foreign.C.Types.CFloat,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Types.Float, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CFloat, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild_aoH7
    }

Engine.Model.Material.readMtlLineTriplet4
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.Material.readMtlLineTriplet4 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    Engine.Model.Material.readMtlLineTriplet5

Engine.Model.Material.readMtlLineTriplet1
  :: GHC.Base.String -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 90 0}]
Engine.Model.Material.readMtlLineTriplet1 =
  \ (s_aogb :: GHC.Base.String) ->
    case Text.Read.readEither6
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
           (Text.ParserCombinators.ReadP.run
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              Engine.Model.Material.readMtlLineTriplet4
              s_aogb)
    of _ {
      [] -> Engine.Model.Material.readMtlLineTriplet3;
      : x_aoEZ ds_aoF0 ->
        case ds_aoF0 of _ {
          [] -> x_aoEZ;
          : ipv_aoF7 ipv1_aoF8 -> Engine.Model.Material.readMtlLineTriplet2
        }
    }

Engine.Model.Material.readMtlLineTriplet11
  :: GHC.Base.String -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Material.readMtlLineTriplet11 =
  \ (x_a3uM :: GHC.Base.String) ->
    case x_a3uM of _ {
      [] -> GHC.Types.False;
      : ds1_a3Km ds2_a3Kn -> GHC.Types.True
    }

Engine.Model.Material.readMtlLineTriplet10 :: GHC.Types.Char
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.Material.readMtlLineTriplet10 = GHC.Types.C# ' '

Engine.Model.Material.readMtlLineTriplet9 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.Material.readMtlLineTriplet9 =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.Material.readMtlLineTriplet10
    (GHC.Types.[] @ GHC.Types.Char)

Engine.Model.Material.readMtlLineTriplet8
  :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Model.Material.readMtlLineTriplet8 =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char
    GHC.Classes.$fEqChar
    Engine.Model.Material.readMtlLineTriplet9

Engine.Model.Material.readMtlLine
  :: GHC.Base.String -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 100 0}]
Engine.Model.Material.readMtlLine =
  \ (x_a3uM :: GHC.Base.String) ->
    case GHC.List.filter
           @ [GHC.Types.Char]
           Engine.Model.Material.readMtlLineTriplet11
           (Engine.Model.Material.readMtlLineTriplet8 x_a3uM)
    of _ {
      [] -> case GHC.List.tail1 of wild1_00 { };
      : _ xs_aoim ->
        GHC.Base.map
          @ [GHC.Types.Char]
          @ Foreign.C.Types.CFloat
          Engine.Model.Material.readMtlLineTriplet1
          xs_aoim
    }

Engine.Model.Material.$wreadMtlLineTriplet
  :: GHC.Base.String
     -> (# Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 120 0}]
Engine.Model.Material.$wreadMtlLineTriplet =
  \ (w_soOJ :: GHC.Base.String) ->
    case GHC.List.filter
           @ [GHC.Types.Char]
           Engine.Model.Material.readMtlLineTriplet11
           (Engine.Model.Material.readMtlLineTriplet8 w_soOJ)
    of _ {
      [] -> case GHC.List.tail1 of wild1_00 { };
      : _ xs_aoim ->
        Engine.Model.Material.$wtoTripletMtl
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          (GHC.Base.map
             @ [GHC.Types.Char]
             @ Foreign.C.Types.CFloat
             Engine.Model.Material.readMtlLineTriplet1
             xs_aoim)
    }

Engine.Model.Material.readMtlLineTriplet [InlPrag=INLINE[0]]
  :: GHC.Base.String
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Str=DmdType Lm,
 Unf=Unf{Src=Worker=Engine.Model.Material.$wreadMtlLineTriplet,
         TopLvl=True, Arity=1, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_soOJ [Occ=Once] :: GHC.Base.String) ->
                 case Engine.Model.Material.$wreadMtlLineTriplet w_soOJ
                 of _
                 { (# ww1_soP7 [Occ=Once], ww2_soP8 [Occ=Once], ww3_soP9 [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3
                   @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   ww1_soP7
                   ww2_soP8
                   ww3_soP9
                 }}]
Engine.Model.Material.readMtlLineTriplet =
  \ (w_soOJ :: GHC.Base.String) ->
    case Engine.Model.Material.$wreadMtlLineTriplet w_soOJ
    of _ { (# ww1_soP7, ww2_soP8, ww3_soP9 #) ->
    Engine.Core.Vec.Vec3
      @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
      ww1_soP7
      ww2_soP8
      ww3_soP9
    }

Engine.Model.Material.executeCommand3 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.Material.executeCommand3 =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.Material.readMtlLineTriplet10
    (GHC.Types.[] @ GHC.Types.Char)

Engine.Model.Material.executeCommand2
  :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Model.Material.executeCommand2 =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char
    GHC.Classes.$fEqChar
    Engine.Model.Material.executeCommand3

Engine.Model.Material.rawMtlLine
  :: GHC.Base.String -> [GHC.Base.String]
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 70 0}]
Engine.Model.Material.rawMtlLine =
  \ (x_a3uM :: GHC.Base.String) ->
    case GHC.List.filter
           @ [GHC.Types.Char]
           Engine.Model.Material.readMtlLineTriplet11
           (Engine.Model.Material.executeCommand2 x_a3uM)
    of _ {
      [] -> GHC.List.tail1 @ GHC.Base.String;
      : _ xs_aoim -> xs_aoim
    }

Engine.Model.Material.executeCommand4 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Model.Material.executeCommand4 =
  GHC.CString.unpackCString# "map_Kd "

Engine.Model.Material.executeCommand5 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 40 0}]
Engine.Model.Material.executeCommand5 =
  GHC.CString.unpackCString# "Ks "

Engine.Model.Material.executeCommand6 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 40 0}]
Engine.Model.Material.executeCommand6 =
  GHC.CString.unpackCString# "Kd "

Engine.Model.Material.executeCommand7 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 40 0}]
Engine.Model.Material.executeCommand7 =
  GHC.CString.unpackCString# "Ka "

Engine.Model.Material.executeCommand1
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.Base.String
     -> Engine.Model.Material.Material
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Model.Material.Material #)
[GblId,
 Arity=5,
 Str=DmdType LLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 80 0 0] 602 150}]
Engine.Model.Material.executeCommand1 =
  \ (wStateRef_ao2Y :: GHC.IORef.IORef Engine.Core.World.WorldState)
    (command_ao2Z :: GHC.Base.String)
    (mat_ao30 :: Engine.Model.Material.Material)
    (textureCount_ao31 :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Data.List.isPrefixOf
           @ GHC.Types.Char
           GHC.Classes.$fEqChar
           Engine.Model.Material.executeCommand7
           command_ao2Z
    of _ {
      GHC.Types.False ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char
               GHC.Classes.$fEqChar
               Engine.Model.Material.executeCommand6
               command_ao2Z
        of _ {
          GHC.Types.False ->
            case Data.List.isPrefixOf
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   Engine.Model.Material.executeCommand5
                   command_ao2Z
            of _ {
              GHC.Types.False ->
                case Data.List.isPrefixOf
                       @ GHC.Types.Char
                       GHC.Classes.$fEqChar
                       Engine.Model.Material.executeCommand4
                       command_ao2Z
                of _ {
                  GHC.Types.False -> (# eta_B1, mat_ao30 #);
                  GHC.Types.True ->
                    case wStateRef_ao2Y
                         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                                 :: GHC.IORef.IORef Engine.Core.World.WorldState
                                      ~#
                                    GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
                    of _ { GHC.STRef.STRef var#_aorT ->
                    case GHC.Prim.readMutVar#
                           @ GHC.Prim.RealWorld
                           @ Engine.Core.World.WorldState
                           var#_aorT
                           eta_B1
                    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
                    case Engine.Core.World.loadWorldTexture1
                           ipv1_a3Uj
                           (case GHC.List.filter
                                   @ [GHC.Types.Char]
                                   Engine.Model.Material.readMtlLineTriplet11
                                   (Engine.Model.Material.executeCommand2 command_ao2Z)
                            of _ {
                              [] -> case GHC.List.tail1 of wild6_00 { };
                              : _ xs_aoim ->
                                case xs_aoim of _ {
                                  [] -> GHC.List.badHead @ GHC.IO.FilePath;
                                  : x_ac7a ds3_ac7b -> x_ac7a
                                }
                            })
                           ipv_a3Ui
                    of _ { (# ipv2_X3YC, ipv3_X3YE #) ->
                    (# ipv2_X3YC,
                       case mat_ao30
                       of _
                       { Engine.Model.Material.Material ds_dodV
                                                        ds3_dodW
                                                        ds4_dodX
                                                        ds5_dodY
                                                        ds6_dodZ
                                                        ds7_doe0 ->
                       Engine.Model.Material.Material
                         ds_dodV
                         ds3_dodW
                         ds4_dodX
                         ds5_dodY
                         (Data.Maybe.Just
                            @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                            ipv3_X3YE)
                         (Data.Maybe.Just
                            @ Graphics.Rendering.OpenGL.Raw.Types.GLint
                            (case textureCount_ao31
                                  `cast` (<Foreign.C.Types.NTCo:CUInt>
                                          :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
                             of _ { GHC.Word.W32# x#_ac2G ->
                             (GHC.Int.I32# (GHC.Prim.narrow32Int# (GHC.Prim.word2Int# x#_ac2G)))
                             `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                                     :: GHC.Int.Int32 ~# Foreign.C.Types.CInt)
                             }))
                       } #)
                    }
                    }
                    }
                };
              GHC.Types.True ->
                (# eta_B1,
                   case mat_ao30
                   of _
                   { Engine.Model.Material.Material ds_dodL
                                                    ds1_dodM
                                                    ds2_dodN
                                                    ds3_dodO
                                                    ds4_dodP
                                                    ds5_dodQ ->
                   Engine.Model.Material.Material
                     ds_dodL
                     ds1_dodM
                     ds2_dodN
                     (Data.Maybe.Just
                        @ (Engine.Core.Vec.Vec3
                             Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                        (Engine.Model.Material.readMtlLineTriplet command_ao2Z))
                     ds4_dodP
                     ds5_dodQ
                   } #)
            };
          GHC.Types.True ->
            (# eta_B1,
               case mat_ao30
               of _
               { Engine.Model.Material.Material ds_dodC
                                                ds1_dodD
                                                ds2_dodE
                                                ds3_dodF
                                                ds4_dodG
                                                ds5_dodH ->
               Engine.Model.Material.Material
                 ds_dodC
                 ds1_dodD
                 (Data.Maybe.Just
                    @ (Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                    (Engine.Model.Material.readMtlLineTriplet command_ao2Z))
                 ds3_dodF
                 ds4_dodG
                 ds5_dodH
               } #)
        };
      GHC.Types.True ->
        (# eta_B1,
           case mat_ao30
           of _
           { Engine.Model.Material.Material ds_dodt
                                            ds1_dodu
                                            ds2_dodv
                                            ds3_dodw
                                            ds4_dodx
                                            ds5_dody ->
           Engine.Model.Material.Material
             ds_dodt
             (Data.Maybe.Just
                @ (Engine.Core.Vec.Vec3
                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                (Engine.Model.Material.readMtlLineTriplet command_ao2Z))
             ds2_dodv
             ds3_dodw
             ds4_dodx
             ds5_dody
           } #)
    }

Engine.Model.Material.executeCommand
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.Base.String
     -> Engine.Model.Material.Material
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.Types.IO Engine.Model.Material.Material
[GblId,
 Arity=5,
 Str=DmdType LLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Material.executeCommand =
  Engine.Model.Material.executeCommand1
  `cast` (<GHC.IORef.IORef Engine.Core.World.WorldState>
          -> <GHC.Base.String>
          -> <Engine.Model.Material.Material>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLuint>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Model.Material.Material>)>
          :: (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.Base.String
              -> Engine.Model.Material.Material
              -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Model.Material.Material #))
               ~#
             (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.Base.String
              -> Engine.Model.Material.Material
              -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.Types.IO Engine.Model.Material.Material))

lvl10_roXq :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl10_roXq = GHC.CString.unpackCString# "newmtl "

Rec {
Engine.Model.Material.loadMtlFile4 [Occ=LoopBreaker]
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.IO.Handle.Types.Handle
     -> Engine.Model.Material.Material
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Model.Material.Material] #)
[GblId, Arity=5, Str=DmdType LLSLL]
Engine.Model.Material.loadMtlFile4 =
  \ (wStateRef_ao1o :: GHC.IORef.IORef Engine.Core.World.WorldState)
    (textureCount_ao1p :: Graphics.Rendering.OpenGL.Raw.Types.GLuint)
    (handle_ao1q :: GHC.IO.Handle.Types.Handle)
    (start_ao1r :: Engine.Model.Material.Material)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           handle_ao1q
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ GHC.Base.String
               GHC.IO.Handle.Text.hGetLine3
               handle_ao1q
               (GHC.IO.Handle.Text.hGetLine2
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <GHC.Base.String>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Base.String)))
               ipv_a3Ui
        of _ { (# ipv2_X3Wo, ipv3_X3Wq #) ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char GHC.Classes.$fEqChar lvl10_roXq ipv3_X3Wq
        of _ {
          GHC.Types.False ->
            case ipv3_X3Wq of wild2_a3mj {
              [] ->
                Engine.Model.Material.loadMtlFile4
                  wStateRef_ao1o textureCount_ao1p handle_ao1q start_ao1r ipv2_X3Wo;
              : ds3_a3Km ds4_a3Kn ->
                case Engine.Model.Material.executeCommand1
                       wStateRef_ao1o wild2_a3mj start_ao1r textureCount_ao1p ipv2_X3Wo
                of _ { (# ipv4_X3YI, ipv5_X3YK #) ->
                case ipv5_X3YK
                of wild3_XA
                { Engine.Model.Material.Material ds_dof1
                                                 ds6_dof2
                                                 ds7_dof3
                                                 ds8_dof4
                                                 ds9_dof5
                                                 ds10_dof6 ->
                case ds9_dof5 of _ {
                  Data.Maybe.Nothing ->
                    case start_ao1r
                    of _
                    { Engine.Model.Material.Material ds11_XohA
                                                     ds12_XohC
                                                     ds13_XohE
                                                     ds14_XohG
                                                     ds15_XohI
                                                     ds16_XohK ->
                    case ds15_XohI of _ {
                      Data.Maybe.Nothing ->
                        Engine.Model.Material.loadMtlFile4
                          wStateRef_ao1o textureCount_ao1p handle_ao1q wild3_XA ipv4_X3YI;
                      Data.Maybe.Just ds17_aos9 ->
                        Engine.Model.Material.loadMtlFile4
                          wStateRef_ao1o
                          (case textureCount_ao1p
                                `cast` (<Foreign.C.Types.NTCo:CUInt>
                                        :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
                           of _ { GHC.Word.W32# x#_ackW ->
                           (GHC.Word.W32#
                              (GHC.Prim.narrow32Word# (GHC.Prim.plusWord# x#_ackW (__word 1))))
                           `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                                   :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt)
                           })
                          handle_ao1q
                          wild3_XA
                          ipv4_X3YI
                    }
                    };
                  Data.Maybe.Just a1_aokf ->
                    case start_ao1r
                    of _
                    { Engine.Model.Material.Material ds11_XohB
                                                     ds12_XohD
                                                     ds13_XohF
                                                     ds14_XohH
                                                     ds15_XohJ
                                                     ds16_XohL ->
                    case ds15_XohJ of _ {
                      Data.Maybe.Nothing ->
                        Engine.Model.Material.loadMtlFile4
                          wStateRef_ao1o
                          (case textureCount_ao1p
                                `cast` (<Foreign.C.Types.NTCo:CUInt>
                                        :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
                           of _ { GHC.Word.W32# x#_ackW ->
                           (GHC.Word.W32#
                              (GHC.Prim.narrow32Word# (GHC.Prim.plusWord# x#_ackW (__word 1))))
                           `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                                   :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt)
                           })
                          handle_ao1q
                          wild3_XA
                          ipv4_X3YI;
                      Data.Maybe.Just b1_aokk ->
                        case a1_aokf
                             `cast` (<Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.NTCo:TextureObject> ; <Foreign.C.Types.NTCo:CUInt>
                                     :: Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                                          ~#
                                        GHC.Word.Word32)
                        of _ { GHC.Word.W32# a2_aosk ->
                        case b1_aokk
                             `cast` (<Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.NTCo:TextureObject> ; <Foreign.C.Types.NTCo:CUInt>
                                     :: Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject
                                          ~#
                                        GHC.Word.Word32)
                        of _ { GHC.Word.W32# b2_aoso ->
                        case GHC.Prim.eqWord# a2_aosk b2_aoso of _ {
                          GHC.Types.False ->
                            Engine.Model.Material.loadMtlFile4
                              wStateRef_ao1o
                              (case textureCount_ao1p
                                    `cast` (<Foreign.C.Types.NTCo:CUInt>
                                            :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
                               of _ { GHC.Word.W32# x#_ackW ->
                               (GHC.Word.W32#
                                  (GHC.Prim.narrow32Word# (GHC.Prim.plusWord# x#_ackW (__word 1))))
                               `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                                       :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt)
                               })
                              handle_ao1q
                              wild3_XA
                              ipv4_X3YI;
                          GHC.Types.True ->
                            Engine.Model.Material.loadMtlFile4
                              wStateRef_ao1o textureCount_ao1p handle_ao1q wild3_XA ipv4_X3YI
                        }
                        }
                        }
                    }
                    }
                }
                }
                }
            };
          GHC.Types.True ->
            case Engine.Model.Material.loadMtlFile4
                   wStateRef_ao1o
                   textureCount_ao1p
                   handle_ao1q
                   (Engine.Model.Material.Material
                      (case GHC.List.filter
                              @ [GHC.Types.Char]
                              Engine.Model.Material.readMtlLineTriplet11
                              (Engine.Model.Material.executeCommand2 ipv3_X3Wq)
                       of _ {
                         [] -> case GHC.List.tail1 of wild3_00 { };
                         : _ xs_aoim ->
                           case xs_aoim of _ {
                             [] -> GHC.List.badHead @ GHC.Base.String;
                             : x_ac7a ds4_ac7b -> x_ac7a
                           }
                       })
                      (Data.Maybe.Nothing
                         @ (Engine.Core.Vec.Vec3
                              Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
                      (Data.Maybe.Nothing
                         @ (Engine.Core.Vec.Vec3
                              Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
                      (Data.Maybe.Nothing
                         @ (Engine.Core.Vec.Vec3
                              Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
                      (Data.Maybe.Nothing
                         @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject)
                      (Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLint))
                   ipv2_X3Wo
            of _ { (# ipv4_X3YG, ipv5_X3YI #) ->
            (# ipv4_X3YG,
               GHC.Types.:
                 @ Engine.Model.Material.Material start_ao1r ipv5_X3YI #)
            }
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 handle_ao1q ipv_a3Ui
        of _ { (# ipv2_X3Wo, _ #) ->
        (# ipv2_X3Wo,
           GHC.Types.:
             @ Engine.Model.Material.Material
             start_ao1r
             (GHC.Types.[] @ Engine.Model.Material.Material) #)
        }
    }
    }
end Rec }

Engine.Model.Material.loadMtlMaterialsRec
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
     -> GHC.IO.Handle.Types.Handle
     -> Engine.Model.Material.Material
     -> GHC.Types.IO [Engine.Model.Material.Material]
[GblId,
 Arity=5,
 Str=DmdType LLSLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Material.loadMtlMaterialsRec =
  Engine.Model.Material.loadMtlFile4
  `cast` (<GHC.IORef.IORef Engine.Core.World.WorldState>
          -> <Graphics.Rendering.OpenGL.Raw.Types.GLuint>
          -> <GHC.IO.Handle.Types.Handle>
          -> <Engine.Model.Material.Material>
          -> Sym <(GHC.Types.NTCo:IO <[Engine.Model.Material.Material]>)>
          :: (GHC.IORef.IORef Engine.Core.World.WorldState
              -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.IO.Handle.Types.Handle
              -> Engine.Model.Material.Material
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Model.Material.Material] #))
               ~#
             (GHC.IORef.IORef Engine.Core.World.WorldState
              -> Graphics.Rendering.OpenGL.Raw.Types.GLuint
              -> GHC.IO.Handle.Types.Handle
              -> Engine.Model.Material.Material
              -> GHC.Types.IO [Engine.Model.Material.Material]))

Engine.Model.Material.loadMtlFile3 :: GHC.Word.Word32
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.Material.loadMtlFile3 = GHC.Word.W32# (__word 0)

Engine.Model.Material.loadMtlFile2
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Model.Material.Material] #)
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 120 30}]
Engine.Model.Material.loadMtlFile2 =
  \ (wStateRef_ao1d :: GHC.IORef.IORef Engine.Core.World.WorldState)
    (handle_ao1e :: GHC.IO.Handle.Types.Handle)
    (s_a3Uf :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Model.Material.loadMtlFile4
           wStateRef_ao1d
           (Engine.Model.Material.loadMtlFile3
            `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                    :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
           handle_ao1e
           Engine.Model.Material.emptyMaterial
           s_a3Uf
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    (# ipv_a3Ui,
       case ipv1_a3Uj of _ {
         [] -> case GHC.List.tail1 of wild1_00 { };
         : ds2_aoil xs_aoim ->
           GHC.Base.map
             @ Engine.Model.Material.Material
             @ Engine.Model.Material.Material
             Engine.Model.Material.applyDefualtMtl
             xs_aoim
       } #)
    }

Engine.Model.Material.loadMtlMaterials
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.Handle.Types.Handle
     -> GHC.Types.IO [Engine.Model.Material.Material]
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Material.loadMtlMaterials =
  Engine.Model.Material.loadMtlFile2
  `cast` (<GHC.IORef.IORef Engine.Core.World.WorldState>
          -> <GHC.IO.Handle.Types.Handle>
          -> Sym <(GHC.Types.NTCo:IO <[Engine.Model.Material.Material]>)>
          :: (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.Handle.Types.Handle
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Model.Material.Material] #))
               ~#
             (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.Handle.Types.Handle
              -> GHC.Types.IO [Engine.Model.Material.Material]))

Engine.Model.Material.loadMtlFile1
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Model.Material.Material] #)
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 90 0}]
Engine.Model.Material.loadMtlFile1 =
  \ (wStateRef_ao1b :: GHC.IORef.IORef Engine.Core.World.WorldState)
    (file_ao1c :: GHC.IO.FilePath)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.FD.openFile1
           file_ao1c GHC.IO.IOMode.ReadMode eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    Engine.Model.Material.loadMtlFile2
      wStateRef_ao1b ipv1_a3Uj ipv_a3Ui
    }

Engine.Model.Material.loadMtlFile
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.FilePath -> GHC.Types.IO [Engine.Model.Material.Material]
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.Material.loadMtlFile =
  Engine.Model.Material.loadMtlFile1
  `cast` (<GHC.IORef.IORef Engine.Core.World.WorldState>
          -> <GHC.IO.FilePath>
          -> Sym <(GHC.Types.NTCo:IO <[Engine.Model.Material.Material]>)>
          :: (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Model.Material.Material] #))
               ~#
             (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.FilePath
              -> GHC.Types.IO [Engine.Model.Material.Material]))



[11 of 17] Compiling Engine.Model.ModelLoader ( Engine/Model/ModelLoader.hs, Engine/Model/ModelLoader.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 3,304, types: 4,191, coercions: 330}

lvl_rsng
  :: Engine.Core.Vec.Vec3
       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
     -> Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType U(UUS)]
lvl_rsng =
  \ (ds_dqw2
       :: Engine.Core.Vec.Vec3
            (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)) ->
    case ds_dqw2
    of _ { Engine.Core.Vec.Vec3 ds1_dqw3 ds2_dqw4 z_aqa5 ->
    z_aqa5
    }

Engine.Model.ModelLoader.faceNormIndices [InlPrag=INLINE (sat-args=1)]
  :: [Engine.Core.Vec.Vec3
        (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
     -> [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (xs_aqa4 [Occ=Once]
                    :: [Engine.Core.Vec.Vec3
                          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) ->
                 GHC.Base.build
                   @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                   (\ (@ b1_a3wV)
                      (c_a3wW [Occ=Once]
                         :: Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint
                            -> b1_a3wV -> b1_a3wV)
                      (n_a3wX [Occ=Once] :: b1_a3wV) ->
                      GHC.Base.foldr
                        @ (Engine.Core.Vec.Vec3
                             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
                        @ b1_a3wV
                        (GHC.Base.mapFB
                           @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                           @ b1_a3wV
                           @ (Engine.Core.Vec.Vec3
                                (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
                           c_a3wW
                           (\ (ds_dqw2 [Occ=Once!]
                                 :: Engine.Core.Vec.Vec3
                                      (Data.Maybe.Maybe
                                         Graphics.Rendering.OpenGL.Raw.Types.GLuint)) ->
                              case ds_dqw2 of _ { Engine.Core.Vec.Vec3 _ _ z_aqa5 [Occ=Once] ->
                              z_aqa5
                              }))
                        n_a3wX
                        xs_aqa4)}]
Engine.Model.ModelLoader.faceNormIndices =
  \ (eta_B1
       :: [Engine.Core.Vec.Vec3
             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) ->
    GHC.Base.map
      @ (Engine.Core.Vec.Vec3
           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
      @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
      lvl_rsng
      eta_B1

lvl1_rsnh
  :: Engine.Core.Vec.Vec3
       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
     -> Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType U(USU)]
lvl1_rsnh =
  \ (ds_dqw6
       :: Engine.Core.Vec.Vec3
            (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)) ->
    case ds_dqw6
    of _ { Engine.Core.Vec.Vec3 ds1_dqw7 y_aqa3 ds2_dqw8 ->
    y_aqa3
    }

Engine.Model.ModelLoader.faceTexIndices [InlPrag=INLINE (sat-args=1)]
  :: [Engine.Core.Vec.Vec3
        (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
     -> [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (xs_aqa2 [Occ=Once]
                    :: [Engine.Core.Vec.Vec3
                          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) ->
                 GHC.Base.build
                   @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                   (\ (@ b1_a3wV)
                      (c_a3wW [Occ=Once]
                         :: Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint
                            -> b1_a3wV -> b1_a3wV)
                      (n_a3wX [Occ=Once] :: b1_a3wV) ->
                      GHC.Base.foldr
                        @ (Engine.Core.Vec.Vec3
                             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
                        @ b1_a3wV
                        (GHC.Base.mapFB
                           @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                           @ b1_a3wV
                           @ (Engine.Core.Vec.Vec3
                                (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
                           c_a3wW
                           (\ (ds_dqw6 [Occ=Once!]
                                 :: Engine.Core.Vec.Vec3
                                      (Data.Maybe.Maybe
                                         Graphics.Rendering.OpenGL.Raw.Types.GLuint)) ->
                              case ds_dqw6 of _ { Engine.Core.Vec.Vec3 _ y_aqa3 [Occ=Once] _ ->
                              y_aqa3
                              }))
                        n_a3wX
                        xs_aqa2)}]
Engine.Model.ModelLoader.faceTexIndices =
  \ (eta_B1
       :: [Engine.Core.Vec.Vec3
             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) ->
    GHC.Base.map
      @ (Engine.Core.Vec.Vec3
           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
      @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
      lvl1_rsnh
      eta_B1

lvl2_rsni
  :: Engine.Core.Vec.Vec3
       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
     -> Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId, Arity=1, Caf=NoCafRefs, Str=DmdType U(SUU)]
lvl2_rsni =
  \ (ds_dqwa
       :: Engine.Core.Vec.Vec3
            (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)) ->
    case ds_dqwa
    of _ { Engine.Core.Vec.Vec3 x_aqa1 ds1_dqwb ds2_dqwc ->
    x_aqa1
    }

Engine.Model.ModelLoader.faceVertIndices [InlPrag=INLINE (sat-args=1)]
  :: [Engine.Core.Vec.Vec3
        (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
     -> [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (xs_aqa0 [Occ=Once]
                    :: [Engine.Core.Vec.Vec3
                          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) ->
                 GHC.Base.build
                   @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                   (\ (@ b1_a3wV)
                      (c_a3wW [Occ=Once]
                         :: Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint
                            -> b1_a3wV -> b1_a3wV)
                      (n_a3wX [Occ=Once] :: b1_a3wV) ->
                      GHC.Base.foldr
                        @ (Engine.Core.Vec.Vec3
                             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
                        @ b1_a3wV
                        (GHC.Base.mapFB
                           @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                           @ b1_a3wV
                           @ (Engine.Core.Vec.Vec3
                                (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
                           c_a3wW
                           (\ (ds_dqwa [Occ=Once!]
                                 :: Engine.Core.Vec.Vec3
                                      (Data.Maybe.Maybe
                                         Graphics.Rendering.OpenGL.Raw.Types.GLuint)) ->
                              case ds_dqwa of _ { Engine.Core.Vec.Vec3 x_aqa1 [Occ=Once] _ _ ->
                              x_aqa1
                              }))
                        n_a3wX
                        xs_aqa0)}]
Engine.Model.ModelLoader.faceVertIndices =
  \ (eta_B1
       :: [Engine.Core.Vec.Vec3
             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) ->
    GHC.Base.map
      @ (Engine.Core.Vec.Vec3
           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
      @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
      lvl2_rsni
      eta_B1

a_rsnj :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=DmdType m]
a_rsnj = GHC.Int.I32# 0

Engine.Model.ModelLoader.fromJustSafe_$sfromJustSafe [InlPrag=INLINE (sat-args=1)]
  :: Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLint
     -> Graphics.Rendering.OpenGL.Raw.Types.GLint
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (eta_B1 [Occ=Once!]
                    :: Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLint) ->
                 case eta_B1 of _ {
                   Data.Maybe.Nothing ->
                     Foreign.C.Types.$fNumCInt_$cfromInteger (__integer 0);
                   Data.Maybe.Just x_aqa6 [Occ=Once] -> x_aqa6
                 }}]
Engine.Model.ModelLoader.fromJustSafe_$sfromJustSafe =
  \ (eta_B1
       :: Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLint) ->
    case eta_B1 of _ {
      Data.Maybe.Nothing ->
        a_rsnj
        `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                :: GHC.Int.Int32 ~# Foreign.C.Types.CInt);
      Data.Maybe.Just x_aqa6 -> x_aqa6
    }

lvl3_rsnk :: GHC.Integer.Type.Integer
[GblId, Str=DmdType]
lvl3_rsnk = __integer 0

Engine.Model.ModelLoader.fromJustSafe [InlPrag=INLINE (sat-args=1)]
  :: forall a_aq7M.
     GHC.Num.Num a_aq7M =>
     Data.Maybe.Maybe a_aq7M -> a_aq7M
[GblId,
 Arity=2,
 Str=DmdType LS,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=False,boring_ok=False)
         Tmpl= \ (@ a_q)
                 ($dNum_aqaF [Occ=Once] :: GHC.Num.Num a_q)
                 (ds_dqvZ [Occ=Once!] :: Data.Maybe.Maybe a_q) ->
                 case ds_dqvZ of _ {
                   Data.Maybe.Nothing ->
                     GHC.Num.fromInteger @ a_q $dNum_aqaF (__integer 0);
                   Data.Maybe.Just x_aqa6 [Occ=Once] -> x_aqa6
                 }}]
Engine.Model.ModelLoader.fromJustSafe =
  \ (@ a_q)
    ($dNum_aqaF :: GHC.Num.Num a_q)
    (eta_B1 :: Data.Maybe.Maybe a_q) ->
    case eta_B1 of _ {
      Data.Maybe.Nothing ->
        GHC.Num.fromInteger @ a_q $dNum_aqaF lvl3_rsnk;
      Data.Maybe.Just x_aqa6 -> x_aqa6
    }

lvl4_rsnl :: [GHC.Types.Char]
[GblId]
lvl4_rsnl =
  GHC.CString.unpackCString# "fromVec3M: argument contained Nothing."

lvl5_rsnm :: forall a_tC. [a_tC]
[GblId, Str=DmdType b]
lvl5_rsnm = \ (@ a_tC) -> GHC.Err.error @ [a_tC] lvl4_rsnl

Rec {
Engine.Model.ModelLoader.fromVec3M [Occ=LoopBreaker]
  :: forall a_aq7O.
     [Data.Maybe.Maybe (Engine.Core.Vec.Vec3 a_aq7O)] -> [a_aq7O]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.fromVec3M =
  \ (@ a_tC)
    (ds_dqwu :: [Data.Maybe.Maybe (Engine.Core.Vec.Vec3 a_tC)]) ->
    case ds_dqwu of _ {
      [] -> GHC.Types.[] @ a_tC;
      : ds1_dqwv xs_aq9P ->
        case ds1_dqwv of _ {
          Data.Maybe.Nothing -> lvl5_rsnm @ a_tC;
          Data.Maybe.Just ds2_dqww ->
            case ds2_dqww of _ { Engine.Core.Vec.Vec3 x_aq9M y_aq9N z_aq9O ->
            GHC.Types.:
              @ a_tC
              x_aq9M
              (GHC.Types.:
                 @ a_tC
                 y_aq9N
                 (GHC.Types.:
                    @ a_tC z_aq9O (Engine.Model.ModelLoader.fromVec3M @ a_tC xs_aq9P)))
            }
        }
    }
end Rec }

lvl6_rsnn :: GHC.Integer.Type.Integer
[GblId, Str=DmdType]
lvl6_rsnn = __integer 1

Engine.Model.ModelLoader.readObjTexLine5 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readObjTexLine5 =
  GHC.Types.F# (__float -1.0)

Rec {
Engine.Model.ModelLoader.loadObjModel_$snegateNothing [Occ=LoopBreaker]
  :: [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> GHC.Types.Int -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType SL]
Engine.Model.ModelLoader.loadObjModel_$snegateNothing =
  \ (ds_dqvD
       :: [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (len_aqaf :: GHC.Types.Int) ->
    case ds_dqvD of _ {
      [] -> GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : ds1_dqvE rest_aqae ->
        case ds1_dqvE of _ {
          Data.Maybe.Nothing ->
            case len_aqaf of wild2_a3uY { GHC.Types.I# n#_a3v3 ->
            case GHC.Prim.<=# n#_a3v3 0 of _ {
              GHC.Types.False ->
                let {
                  n_a3SL :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                  [LclId, Str=DmdType]
                  n_a3SL =
                    Engine.Model.ModelLoader.loadObjModel_$snegateNothing
                      rest_aqae wild2_a3uY } in
                let {
                  lvl24_ssa0 :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                  [LclId]
                  lvl24_ssa0 =
                    GHC.Types.:
                      @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                      (Engine.Model.ModelLoader.readObjTexLine5
                       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                      n_a3SL } in
                letrec {
                  xs_a3SH [Occ=LoopBreaker]
                    :: GHC.Prim.Int# -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                  [LclId, Arity=1, Str=DmdType L]
                  xs_a3SH =
                    \ (m_a3SO :: GHC.Prim.Int#) ->
                      case GHC.Prim.<=# m_a3SO 1 of _ {
                        GHC.Types.False ->
                          GHC.Types.:
                            @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                            (Engine.Model.ModelLoader.readObjTexLine5
                             `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                     :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                            (xs_a3SH (GHC.Prim.-# m_a3SO 1));
                        GHC.Types.True -> lvl24_ssa0
                      }; } in
                xs_a3SH n#_a3v3;
              GHC.Types.True ->
                Engine.Model.ModelLoader.loadObjModel_$snegateNothing
                  rest_aqae wild2_a3uY
            }
            };
          Data.Maybe.Just x_aqad ->
            GHC.Types.:
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              x_aqad
              (Engine.Model.ModelLoader.loadObjModel_$snegateNothing
                 rest_aqae len_aqaf)
        }
    }
end Rec }

Rec {
Engine.Model.ModelLoader.negateNothing [Occ=LoopBreaker]
  :: forall a_aq7J.
     GHC.Num.Num a_aq7J =>
     [Data.Maybe.Maybe a_aq7J] -> GHC.Types.Int -> [a_aq7J]
[GblId, Arity=3, Str=DmdType LSL]
Engine.Model.ModelLoader.negateNothing =
  \ (@ a_d)
    ($dNum_aqar :: GHC.Num.Num a_d)
    (ds_dqvD :: [Data.Maybe.Maybe a_d])
    (len_aqaf :: GHC.Types.Int) ->
    case ds_dqvD of _ {
      [] -> GHC.Types.[] @ a_d;
      : ds1_dqvE rest_aqae ->
        case ds1_dqvE of _ {
          Data.Maybe.Nothing ->
            case len_aqaf of wild2_a3uY { GHC.Types.I# n#_a3v3 ->
            case GHC.Prim.<=# n#_a3v3 0 of _ {
              GHC.Types.False ->
                let {
                  n_a3SL :: [a_d]
                  [LclId, Str=DmdType]
                  n_a3SL =
                    Engine.Model.ModelLoader.negateNothing
                      @ a_d $dNum_aqar rest_aqae wild2_a3uY } in
                let {
                  x_a3SM [Dmd=Just L] :: a_d
                  [LclId, Str=DmdType]
                  x_a3SM =
                    GHC.Num.negate
                      @ a_d
                      $dNum_aqar
                      (GHC.Num.fromInteger @ a_d $dNum_aqar lvl6_rsnn) } in
                let {
                  lvl24_ssa1 :: [a_d]
                  [LclId]
                  lvl24_ssa1 = GHC.Types.: @ a_d x_a3SM n_a3SL } in
                letrec {
                  xs_a3SH [Occ=LoopBreaker] :: GHC.Prim.Int# -> [a_d]
                  [LclId, Arity=1, Str=DmdType L]
                  xs_a3SH =
                    \ (m_a3SO :: GHC.Prim.Int#) ->
                      case GHC.Prim.<=# m_a3SO 1 of _ {
                        GHC.Types.False ->
                          GHC.Types.: @ a_d x_a3SM (xs_a3SH (GHC.Prim.-# m_a3SO 1));
                        GHC.Types.True -> lvl24_ssa1
                      }; } in
                xs_a3SH n#_a3v3;
              GHC.Types.True ->
                Engine.Model.ModelLoader.negateNothing
                  @ a_d $dNum_aqar rest_aqae wild2_a3uY
            }
            };
          Data.Maybe.Just x_aqad ->
            GHC.Types.:
              @ a_d
              x_aqad
              (Engine.Model.ModelLoader.negateNothing
                 @ a_d $dNum_aqar rest_aqae len_aqaf)
        }
    }
end Rec }

Engine.Model.ModelLoader.loadObjModel22 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.loadObjModel22 = GHC.Types.I# 3

Engine.Model.ModelLoader.loadObjModel21 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.loadObjModel21 = GHC.Types.I# 2

Engine.Model.ModelLoader.negateNothing3_$snegateNothing3 [InlPrag=INLINE[0]]
  :: Engine.Core.Vec.Vec3
       [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> Engine.Core.Vec.Vec3
          [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srLw [Occ=Once!]
                    :: Engine.Core.Vec.Vec3
                         [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
                 case w_srLw
                 of _
                 { Engine.Core.Vec.Vec3 ww_srLy [Occ=Once]
                                        ww1_srLz [Occ=Once]
                                        ww2_srLA [Occ=Once] ->
                 case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
                        ww_srLy Engine.Model.ModelLoader.loadObjModel22
                 of tpl_X6 { __DEFAULT ->
                 case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
                        ww1_srLz Engine.Model.ModelLoader.loadObjModel21
                 of tpl1_X8 { __DEFAULT ->
                 case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
                        ww2_srLA Engine.Model.ModelLoader.loadObjModel22
                 of tpl2_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3
                   @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                   tpl_X6
                   tpl1_X8
                   tpl2_Xa
                 }
                 }
                 }
                 }}]
Engine.Model.ModelLoader.negateNothing3_$snegateNothing3 =
  \ (w_srLw
       :: Engine.Core.Vec.Vec3
            [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case w_srLw
    of _ { Engine.Core.Vec.Vec3 ww_srLy ww1_srLz ww2_srLA ->
    case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
           ww_srLy Engine.Model.ModelLoader.loadObjModel22
    of tpl_X6 { __DEFAULT ->
    case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
           ww1_srLz Engine.Model.ModelLoader.loadObjModel21
    of tpl1_X8 { __DEFAULT ->
    case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
           ww2_srLA Engine.Model.ModelLoader.loadObjModel22
    of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3
      @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
      tpl_X6
      tpl1_X8
      tpl2_Xa
    }
    }
    }
    }

Engine.Model.ModelLoader.negateNothing3 [InlPrag=INLINE[0]]
  :: forall a_aq7K.
     GHC.Num.Num a_aq7K =>
     Engine.Core.Vec.Vec3 [Data.Maybe.Maybe a_aq7K]
     -> Engine.Core.Vec.Vec3 [a_aq7K]
[GblId,
 Arity=2,
 Str=DmdType LU(SSS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_aq7K)
                 (w_srLG :: GHC.Num.Num a_aq7K)
                 (w1_srLH [Occ=Once!]
                    :: Engine.Core.Vec.Vec3 [Data.Maybe.Maybe a_aq7K]) ->
                 case w1_srLH
                 of _
                 { Engine.Core.Vec.Vec3 ww_srLJ [Occ=Once]
                                        ww1_srLK [Occ=Once]
                                        ww2_srLL [Occ=Once] ->
                 case Engine.Model.ModelLoader.negateNothing
                        @ a_aq7K w_srLG ww_srLJ Engine.Model.ModelLoader.loadObjModel22
                 of tpl_X6 { __DEFAULT ->
                 case Engine.Model.ModelLoader.negateNothing
                        @ a_aq7K w_srLG ww1_srLK Engine.Model.ModelLoader.loadObjModel21
                 of tpl1_X8 { __DEFAULT ->
                 case Engine.Model.ModelLoader.negateNothing
                        @ a_aq7K w_srLG ww2_srLL Engine.Model.ModelLoader.loadObjModel22
                 of tpl2_Xa { __DEFAULT ->
                 Engine.Core.Vec.Vec3 @ [a_aq7K] tpl_X6 tpl1_X8 tpl2_Xa
                 }
                 }
                 }
                 }}]
Engine.Model.ModelLoader.negateNothing3 =
  \ (@ a_aq7K)
    (w_srLG :: GHC.Num.Num a_aq7K)
    (w1_srLH :: Engine.Core.Vec.Vec3 [Data.Maybe.Maybe a_aq7K]) ->
    case w1_srLH
    of _ { Engine.Core.Vec.Vec3 ww_srLJ ww1_srLK ww2_srLL ->
    case Engine.Model.ModelLoader.negateNothing
           @ a_aq7K w_srLG ww_srLJ Engine.Model.ModelLoader.loadObjModel22
    of tpl_X6 { __DEFAULT ->
    case Engine.Model.ModelLoader.negateNothing
           @ a_aq7K w_srLG ww1_srLK Engine.Model.ModelLoader.loadObjModel21
    of tpl1_X8 { __DEFAULT ->
    case Engine.Model.ModelLoader.negateNothing
           @ a_aq7K w_srLG ww2_srLL Engine.Model.ModelLoader.loadObjModel22
    of tpl2_Xa { __DEFAULT ->
    Engine.Core.Vec.Vec3 @ [a_aq7K] tpl_X6 tpl1_X8 tpl2_Xa
    }
    }
    }
    }

Engine.Model.ModelLoader.readAll6
  :: Text.ParserCombinators.ReadP.P GHC.Types.Float
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 40 0}]
Engine.Model.ModelLoader.readAll6 =
  GHC.Read.$fReadFloat11
    GHC.Read.$fReadFloat_$sconvertFrac
    Text.ParserCombinators.ReadPrec.minPrec
    @ GHC.Types.Float
    (Text.ParserCombinators.ReadP.$fMonadP_$creturn @ GHC.Types.Float)

Rec {
Engine.Model.ModelLoader.readAll_go [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CFloat, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readAll_go =
  \ (ds_aoGU :: [(Foreign.C.Types.CFloat, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.readAll_go ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.readAll3
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Model.ModelLoader.readAll3 =
  GHC.Err.error
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat Text.Read.readEither4

Engine.Model.ModelLoader.readAll2
  :: Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Str=DmdType b]
Engine.Model.ModelLoader.readAll2 =
  GHC.Err.error
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat Text.Read.readEither2

Engine.Model.ModelLoader.readAll5
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 30}]
Engine.Model.ModelLoader.readAll5 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.readAll_go
           ((Text.ParserCombinators.ReadP.run
               @ GHC.Types.Float Engine.Model.ModelLoader.readAll6 s_aoH6)
            `cast` ([(UnsafeCo GHC.Types.Float Foreign.C.Types.CFloat,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Types.Float, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CFloat, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild_aoH7
    }

Engine.Model.ModelLoader.readAll4
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readAll4 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    Engine.Model.ModelLoader.readAll5

Engine.Model.ModelLoader.readAll1
  :: GHC.Base.String -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 90 0}]
Engine.Model.ModelLoader.readAll1 =
  \ (s_aogb :: GHC.Base.String) ->
    case Text.Read.readEither6
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
           (Text.ParserCombinators.ReadP.run
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              Engine.Model.ModelLoader.readAll4
              s_aogb)
    of _ {
      [] -> Engine.Model.ModelLoader.readAll3;
      : x_aoEZ ds_aoF0 ->
        case ds_aoF0 of _ {
          [] -> x_aoEZ;
          : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.readAll2
        }
    }

Engine.Model.ModelLoader.readAll_$sreadAll
  :: [GHC.Base.String]
     -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 30 0}]
Engine.Model.ModelLoader.readAll_$sreadAll =
  \ (eta_B1 :: [GHC.Base.String]) ->
    GHC.Base.map
      @ [GHC.Types.Char]
      @ Foreign.C.Types.CFloat
      Engine.Model.ModelLoader.readAll1
      eta_B1

Engine.Model.ModelLoader.readAll
  :: forall a_aq7N.
     GHC.Read.Read a_aq7N =>
     [GHC.Base.String] -> [a_aq7N]
[GblId,
 Arity=2,
 Str=DmdType LS,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 50 0}]
Engine.Model.ModelLoader.readAll =
  \ (@ a_ty)
    ($dRead_aqaW :: GHC.Read.Read a_ty)
    (eta_B1 :: [GHC.Base.String]) ->
    GHC.Base.map
      @ [GHC.Types.Char]
      @ a_ty
      (Text.Read.read @ a_ty $dRead_aqaW)
      eta_B1

Engine.Model.ModelLoader.splitSpacesB1 :: GHC.Word.Word8
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.splitSpacesB1 = GHC.Word.W8# (__word 32)

Engine.Model.ModelLoader.splitSpacesB
  :: Data.ByteString.Internal.ByteString
     -> [Data.ByteString.Internal.ByteString]
[GblId,
 Arity=1,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 20 60}]
Engine.Model.ModelLoader.splitSpacesB =
  Data.ByteString.split Engine.Model.ModelLoader.splitSpacesB1

Engine.Model.ModelLoader.toArrays
  :: forall a_aq7L. Engine.Core.Vec.Vec3 [a_aq7L] -> [[a_aq7L]]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(SSS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_m)
                 (ds_dqvX [Occ=Once!] :: Engine.Core.Vec.Vec3 [a_m]) ->
                 case ds_dqvX
                 of _
                 { Engine.Core.Vec.Vec3 x_aqa7 [Occ=Once]
                                        y_aqa8 [Occ=Once]
                                        z_aqa9 [Occ=Once] ->
                 GHC.Types.:
                   @ [a_m]
                   x_aqa7
                   (GHC.Types.:
                      @ [a_m] y_aqa8 (GHC.Types.: @ [a_m] z_aqa9 (GHC.Types.[] @ [a_m])))
                 }}]
Engine.Model.ModelLoader.toArrays =
  \ (@ a_m) (ds_dqvX :: Engine.Core.Vec.Vec3 [a_m]) ->
    case ds_dqvX of _ { Engine.Core.Vec.Vec3 x_aqa7 y_aqa8 z_aqa9 ->
    GHC.Types.:
      @ [a_m]
      x_aqa7
      (GHC.Types.:
         @ [a_m] y_aqa8 (GHC.Types.: @ [a_m] z_aqa9 (GHC.Types.[] @ [a_m])))
    }

lvl7_rsno :: [GHC.Types.Char]
[GblId]
lvl7_rsno =
  GHC.CString.unpackCString#
    "ModelLoader.toVec2: given list containsless than 2 elements."

Engine.Model.ModelLoader.readObjTexLine1
  :: forall a_tO. Engine.Core.Vec.Vec2 a_tO
[GblId, Str=DmdType b]
Engine.Model.ModelLoader.readObjTexLine1 =
  \ (@ a_tO) -> GHC.Err.error @ (Engine.Core.Vec.Vec2 a_tO) lvl7_rsno

Engine.Model.ModelLoader.toVec2
  :: forall a_aq7Q. [a_aq7Q] -> Engine.Core.Vec.Vec2 a_aq7Q
[GblId,
 Arity=1,
 Str=DmdType Sm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_tO) (ds_dqwK [Occ=Once!] :: [a_tO]) ->
                 case ds_dqwK of _ {
                   [] -> Engine.Model.ModelLoader.readObjTexLine1 @ a_tO;
                   : x_aq9B [Occ=Once] ys_aq9C [Occ=Once!] ->
                     case x_aq9B of tpl_X5 { __DEFAULT ->
                     case ys_aq9C of _ {
                       [] -> case GHC.List.badHead of _ { };
                       : x1_ac7a [Occ=Once] _ ->
                         case x1_ac7a of tpl1_X7 { __DEFAULT ->
                         Engine.Core.Vec.Vec2 @ a_tO tpl_X5 tpl1_X7
                         }
                     }
                     }
                 }}]
Engine.Model.ModelLoader.toVec2 =
  \ (@ a_tO) (ds_dqwK :: [a_tO]) ->
    case ds_dqwK of _ {
      [] -> Engine.Model.ModelLoader.readObjTexLine1 @ a_tO;
      : x_aq9B ys_aq9C ->
        case x_aq9B of tpl_X5 { __DEFAULT ->
        case ys_aq9C of _ {
          [] -> case GHC.List.badHead of wild2_00 { };
          : x1_ac7a ds1_ac7b ->
            case x1_ac7a of tpl1_X7 { __DEFAULT ->
            Engine.Core.Vec.Vec2 @ a_tO tpl_X5 tpl1_X7
            }
        }
        }
    }

Engine.Model.ModelLoader.$wtoVec3
  :: forall a_aq7P. [a_aq7P] -> (# a_aq7P, a_aq7P, a_aq7P #)
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30] 160 40}]
Engine.Model.ModelLoader.$wtoVec3 =
  \ (@ a_aq7P) (w_srLQ :: [a_aq7P]) ->
    case GHC.List.$wlen @ a_aq7P w_srLQ 0 of _ {
      __DEFAULT -> case GHC.Err.undefined of wild_00 { };
      3 ->
        case w_srLQ of wild_ac76 {
          [] -> case GHC.List.badHead of wild1_00 { };
          : x_ac7a ds1_ac7b ->
            case x_ac7a of tpl_X6 { __DEFAULT ->
            case GHC.List.!!_sub @ a_aq7P wild_ac76 1 of tpl1_X8 { __DEFAULT ->
            case GHC.List.!!_sub @ a_aq7P wild_ac76 2 of tpl2_Xa { __DEFAULT ->
            (# tpl_X6, tpl1_X8, tpl2_Xa #)
            }
            }
            }
        }
    }

Engine.Model.ModelLoader.toVec3 [InlPrag=INLINE[0]]
  :: forall a_aq7P. [a_aq7P] -> Engine.Core.Vec.Vec3 a_aq7P
[GblId,
 Arity=1,
 Str=DmdType Sm,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wtoVec3, TopLvl=True,
         Arity=1, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_aq7P) (w_srLQ [Occ=Once] :: [a_aq7P]) ->
                 case Engine.Model.ModelLoader.$wtoVec3 @ a_aq7P w_srLQ
                 of _
                 { (# ww1_srOa [Occ=Once], ww2_srOb [Occ=Once], ww3_srOc [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3 @ a_aq7P ww1_srOa ww2_srOb ww3_srOc
                 }}]
Engine.Model.ModelLoader.toVec3 =
  \ (@ a_aq7P) (w_srLQ :: [a_aq7P]) ->
    case Engine.Model.ModelLoader.$wtoVec3 @ a_aq7P w_srLQ
    of _ { (# ww1_srOa, ww2_srOb, ww3_srOc #) ->
    Engine.Core.Vec.Vec3 @ a_aq7P ww1_srOa ww2_srOb ww3_srOc
    }

lvl8_rsnp :: [GHC.Types.Char]
[GblId]
lvl8_rsnp =
  GHC.CString.unpackCString#
    "ModelLoader.toVec3UnknownB: given list contains less than 3 ByteStrings."

Engine.Model.ModelLoader.$wfail1
  :: Engine.Core.Vec.Vec3
       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
[GblId, Str=DmdType b]
Engine.Model.ModelLoader.$wfail1 =
  GHC.Err.error
    @ (Engine.Core.Vec.Vec3
         (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
    lvl8_rsnp

Rec {
Engine.Model.ModelLoader.readFaceGroupB_go1 [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CUInt, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readFaceGroupB_go1 =
  \ (ds_aoGU :: [(Foreign.C.Types.CUInt, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLuint) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLuint k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.readFaceGroupB_go1 ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.toVec3Unknown7
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId, Str=DmdType b]
Engine.Model.ModelLoader.toVec3Unknown7 =
  GHC.Err.error
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint Text.Read.readEither4

Engine.Model.ModelLoader.toVec3Unknown6
  :: Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId, Str=DmdType b]
Engine.Model.ModelLoader.toVec3Unknown6 =
  GHC.Err.error
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint Text.Read.readEither2

Engine.Model.ModelLoader.toVec3Unknown3
  :: Text.ParserCombinators.ReadP.P GHC.Types.Int
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 40 0}]
Engine.Model.ModelLoader.toVec3Unknown3 =
  GHC.Read.$fReadInt5
    GHC.Read.$fReadInt_$sconvertInt
    Text.ParserCombinators.ReadPrec.minPrec
    @ GHC.Types.Int
    (Text.ParserCombinators.ReadP.$fMonadP_$creturn @ GHC.Types.Int)

Engine.Model.ModelLoader.readFaceGroupB4
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 100 30}]
Engine.Model.ModelLoader.readFaceGroupB4 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.readFaceGroupB_go1
           ((GHC.Word.$fReadWord32_go
               (Text.ParserCombinators.ReadP.run
                  @ GHC.Types.Int Engine.Model.ModelLoader.toVec3Unknown3 s_aoH6))
            `cast` ([(UnsafeCo GHC.Word.Word32 Foreign.C.Types.CUInt,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Word.Word32, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CUInt, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint wild_aoH7
    }

Engine.Model.ModelLoader.readFaceGroupB3
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readFaceGroupB3 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    Engine.Model.ModelLoader.readFaceGroupB4

Engine.Model.ModelLoader.$w$sgetMaybe
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=4,
 Str=DmdType LLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0] 181 30}]
Engine.Model.ModelLoader.$w$sgetMaybe =
  \ (ww_srLZ :: GHC.Prim.Addr#)
    (ww1_srM0 :: GHC.ForeignPtr.ForeignPtrContents)
    (ww2_srM1 :: GHC.Prim.Int#)
    (ww3_srM2 :: GHC.Prim.Int#) ->
    case GHC.Prim.<=# ww3_srM2 0 of _ {
      GHC.Types.False ->
        Data.Maybe.Just
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
          (case Text.Read.readEither6
                  @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                  (Text.ParserCombinators.ReadP.run
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                     Engine.Model.ModelLoader.readFaceGroupB3
                     (Data.ByteString.Internal.$wunpackAppendCharsLazy
                        ww_srLZ
                        ww1_srM0
                        ww2_srM1
                        ww3_srM2
                        (GHC.Types.[] @ GHC.Types.Char)))
           of _ {
             [] -> Engine.Model.ModelLoader.toVec3Unknown7;
             : x_aoEZ ds_aoF0 ->
               case ds_aoF0 of _ {
                 [] -> x_aoEZ;
                 : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.toVec3Unknown6
               }
           });
      GHC.Types.True ->
        Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    }

Rec {
Engine.Model.ModelLoader.readFaceGroupB_go [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CUInt, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readFaceGroupB_go =
  \ (ds_aoGU :: [(Foreign.C.Types.CUInt, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLuint) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLuint k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.readFaceGroupB_go ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.readFaceGroupB2
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 100 30}]
Engine.Model.ModelLoader.readFaceGroupB2 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.readFaceGroupB_go
           ((GHC.Word.$fReadWord32_go
               (Text.ParserCombinators.ReadP.run
                  @ GHC.Types.Int Engine.Model.ModelLoader.toVec3Unknown3 s_aoH6))
            `cast` ([(UnsafeCo GHC.Word.Word32 Foreign.C.Types.CUInt,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Word.Word32, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CUInt, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint wild_aoH7
    }

Engine.Model.ModelLoader.readFaceGroupB1
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readFaceGroupB1 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    Engine.Model.ModelLoader.readFaceGroupB2

Engine.Model.ModelLoader.$wtoVec3UnknownB
  :: [Data.ByteString.Internal.ByteString]
     -> (# Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint,
           Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint,
           Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint #)
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30] 401 40}]
Engine.Model.ModelLoader.$wtoVec3UnknownB =
  \ (w_srM6 :: [Data.ByteString.Internal.ByteString]) ->
    case w_srM6 of _ {
      [] -> case Engine.Model.ModelLoader.$wfail1 of wild1_00 { };
      : x_aq8v ds_dqwW ->
        case ds_dqwW of _ {
          [] -> case Engine.Model.ModelLoader.$wfail1 of wild2_00 { };
          : y_aq8w zs_aq8x ->
            case x_aq8v
            of _
            { Data.ByteString.Internal.PS ww_srLZ ww1_srM0 ww2_srM1 ww3_srM2 ->
            case Engine.Model.ModelLoader.$w$sgetMaybe
                   ww_srLZ ww1_srM0 ww2_srM1 ww3_srM2
            of tpl_X6 { __DEFAULT ->
            case y_aq8w
            of _
            { Data.ByteString.Internal.PS ww4_XrPx
                                          ww5_XrPz
                                          ww6_XrPB
                                          ww7_XrPD ->
            case Engine.Model.ModelLoader.$w$sgetMaybe
                   ww4_XrPx ww5_XrPz ww6_XrPB ww7_XrPD
            of tpl1_X8 { __DEFAULT ->
            case zs_aq8x of _ {
              [] -> case GHC.List.badHead of wild3_00 { };
              : x1_ac7a ds1_ac7b ->
                case x1_ac7a
                of _
                { Data.ByteString.Internal.PS rb_aqxJ rb1_aqxK rb2_aqxL rb3_aqxM ->
                case case GHC.Prim.<=# rb3_aqxM 0 of _ {
                       GHC.Types.False ->
                         Data.Maybe.Just
                           @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                           (case Text.Read.readEither6
                                   @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                                   (Text.ParserCombinators.ReadP.run
                                      @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                                      Engine.Model.ModelLoader.readFaceGroupB1
                                      (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                         rb_aqxJ
                                         rb1_aqxK
                                         rb2_aqxL
                                         rb3_aqxM
                                         (GHC.Types.[] @ GHC.Types.Char)))
                            of _ {
                              [] -> Engine.Model.ModelLoader.toVec3Unknown7;
                              : x2_aoEZ ds2_aoF0 ->
                                case ds2_aoF0 of _ {
                                  [] -> x2_aoEZ;
                                  : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.toVec3Unknown6
                                }
                            });
                       GHC.Types.True ->
                         Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                     }
                of tpl2_Xa { __DEFAULT ->
                (# tpl_X6, tpl1_X8, tpl2_Xa #)
                }
                }
            }
            }
            }
            }
            }
        }
    }

Engine.Model.ModelLoader.toVec3UnknownB [InlPrag=INLINE[0]]
  :: [Data.ByteString.Internal.ByteString]
     -> Engine.Core.Vec.Vec3
          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
[GblId,
 Arity=1,
 Str=DmdType Sm,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wtoVec3UnknownB,
         TopLvl=True, Arity=1, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srM6 [Occ=Once]
                    :: [Data.ByteString.Internal.ByteString]) ->
                 case Engine.Model.ModelLoader.$wtoVec3UnknownB w_srM6
                 of _
                 { (# ww1_srOj [Occ=Once], ww2_srOk [Occ=Once], ww3_srOl [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3
                   @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                   ww1_srOj
                   ww2_srOk
                   ww3_srOl
                 }}]
Engine.Model.ModelLoader.toVec3UnknownB =
  \ (w_srM6 :: [Data.ByteString.Internal.ByteString]) ->
    case Engine.Model.ModelLoader.$wtoVec3UnknownB w_srM6
    of _ { (# ww1_srOj, ww2_srOk, ww3_srOl #) ->
    Engine.Core.Vec.Vec3
      @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
      ww1_srOj
      ww2_srOk
      ww3_srOl
    }

Engine.Model.ModelLoader.readFaceGroupB5
  :: GHC.Prim.Word# -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.readFaceGroupB5 =
  \ (c#_aqQ8 :: GHC.Prim.Word#) ->
    case GHC.Prim.chr# (GHC.Prim.word2Int# c#_aqQ8) of _ {
      __DEFAULT -> GHC.Types.False;
      '/' -> GHC.Types.True
    }

Engine.Model.ModelLoader.$wreadFaceGroupB
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> (# Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint,
           Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint,
           Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint #)
[GblId,
 Arity=4,
 Str=DmdType LLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 50] 628 0}]
Engine.Model.ModelLoader.$wreadFaceGroupB =
  \ (ww_srMx :: GHC.Prim.Addr#)
    (ww1_srMy :: GHC.ForeignPtr.ForeignPtrContents)
    (ww2_srMz :: GHC.Prim.Int#)
    (ww3_srMA :: GHC.Prim.Int#) ->
    case ww3_srMA of ds1_aqOT {
      __DEFAULT ->
        let {
          lvl24_ssaj :: GHC.Ptr.Ptr GHC.Word.Word8
          [LclId]
          lvl24_ssaj = GHC.Ptr.Ptr @ GHC.Word.Word8 ww_srMx } in
        letrec {
          $wa1_srOu [Occ=LoopBreaker]
            :: (GHC.Prim.Word# -> GHC.Types.Bool)
               -> GHC.Ptr.Ptr GHC.Word.Word8
               -> GHC.Prim.Int#
               -> GHC.Types.Int
               -> GHC.Prim.Int#
               -> GHC.ForeignPtr.ForeignPtr GHC.Word.Word8
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                     [Data.ByteString.Internal.ByteString] #)
          [LclId, Arity=7, Str=DmdType LLLLLLL]
          $wa1_srOu =
            \ (w_srMg :: GHC.Prim.Word# -> GHC.Types.Bool)
              (w1_srMh :: GHC.Ptr.Ptr GHC.Word.Word8)
              (ww4_srMk :: GHC.Prim.Int#)
              (w2_srMm :: GHC.Types.Int)
              (ww5_srMp :: GHC.Prim.Int#)
              (w3_srMr :: GHC.ForeignPtr.ForeignPtr GHC.Word.Word8)
              (w4_srMs :: GHC.Prim.State# GHC.Prim.RealWorld) ->
              case GHC.Prim.>=# ww4_srMk ww5_srMp of _ {
                GHC.Types.False ->
                  case w1_srMh of wild_aqQn { GHC.Ptr.Ptr a1_aqQp ->
                  case w2_srMm of wild1_a3s3 { GHC.Types.I# x_a3s5 ->
                  case GHC.Prim.readWord8OffAddr#
                         @ GHC.Prim.RealWorld a1_aqQp (GHC.Prim.+# x_a3s5 ww4_srMk) w4_srMs
                  of _ { (# ipv_aqQx, ipv1_aqQy #) ->
                  case w_srMg ipv1_aqQy of _ {
                    GHC.Types.False ->
                      $wa1_srOu
                        w_srMg
                        wild_aqQn
                        (GHC.Prim.+# ww4_srMk 1)
                        wild1_a3s3
                        ww5_srMp
                        w3_srMr
                        ipv_aqQx;
                    GHC.Types.True ->
                      (# ipv_aqQx,
                         GHC.Types.:
                           @ Data.ByteString.Internal.ByteString
                           (case w3_srMr
                            of _ { GHC.ForeignPtr.ForeignPtr tpl1_aqPp tpl2_aqPq ->
                            Data.ByteString.Internal.PS tpl1_aqPp tpl2_aqPq x_a3s5 ww4_srMk
                            })
                           (case w_srMg of a2_aqPO { __DEFAULT ->
                            case w3_srMr
                            of d1_aqPX { GHC.ForeignPtr.ForeignPtr ipv2_aqPZ ipv3_aqQ0 ->
                            case $wa1_srOu
                                   a2_aqPO
                                   lvl24_ssaj
                                   0
                                   (GHC.Types.I# (GHC.Prim.+# (GHC.Prim.+# x_a3s5 ww4_srMk) 1))
                                   (GHC.Prim.-# (GHC.Prim.-# ww5_srMp ww4_srMk) 1)
                                   d1_aqPX
                                   GHC.Prim.realWorld#
                            of _ { (# ipv4_a8UL, ipv5_a8UM #) ->
                            case GHC.Prim.touch#
                                   @ GHC.ForeignPtr.ForeignPtrContents ww1_srMy ipv4_a8UL
                            of _ { __DEFAULT ->
                            ipv5_a8UM
                            }
                            }
                            }
                            }) #)
                  }
                  }
                  }
                  };
                GHC.Types.True ->
                  (# w4_srMs,
                     GHC.Types.:
                       @ Data.ByteString.Internal.ByteString
                       (case w3_srMr
                        of _ { GHC.ForeignPtr.ForeignPtr tpl1_aqPD tpl2_aqPE ->
                        case w2_srMm of _ { GHC.Types.I# tpl4_aqPI ->
                        Data.ByteString.Internal.PS tpl1_aqPD tpl2_aqPE tpl4_aqPI ww4_srMk
                        }
                        })
                       (GHC.Types.[] @ Data.ByteString.Internal.ByteString) #)
              }; } in
        case $wa1_srOu
               Engine.Model.ModelLoader.readFaceGroupB5
               lvl24_ssaj
               0
               (GHC.Types.I# ww2_srMz)
               ds1_aqOT
               (GHC.ForeignPtr.ForeignPtr @ GHC.Word.Word8 ww_srMx ww1_srMy)
               GHC.Prim.realWorld#
        of _ { (# ipv_a8UL, ipv1_a8UM #) ->
        case GHC.Prim.touch#
               @ GHC.ForeignPtr.ForeignPtrContents ww1_srMy ipv_a8UL
        of _ { __DEFAULT ->
        Engine.Model.ModelLoader.$wtoVec3UnknownB ipv1_a8UM
        }
        };
      0 ->
        Engine.Model.ModelLoader.$wtoVec3UnknownB
          (GHC.Types.[] @ Data.ByteString.Internal.ByteString)
    }

Engine.Model.ModelLoader.readFaceGroupB [InlPrag=INLINE[0]]
  :: Data.ByteString.Internal.ByteString
     -> Engine.Core.Vec.Vec3
          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
[GblId,
 Arity=1,
 Str=DmdType U(LLLL)m,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wreadFaceGroupB,
         TopLvl=True, Arity=1, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srMv [Occ=Once!]
                    :: Data.ByteString.Internal.ByteString) ->
                 case w_srMv
                 of _
                 { Data.ByteString.Internal.PS ww_srMx [Occ=Once]
                                               ww1_srMy [Occ=Once]
                                               ww2_srMz [Occ=Once]
                                               ww3_srMA [Occ=Once] ->
                 case Engine.Model.ModelLoader.$wreadFaceGroupB
                        ww_srMx ww1_srMy ww2_srMz ww3_srMA
                 of _
                 { (# ww5_srOq [Occ=Once], ww6_srOr [Occ=Once], ww7_srOs [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3
                   @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                   ww5_srOq
                   ww6_srOr
                   ww7_srOs
                 }
                 }}]
Engine.Model.ModelLoader.readFaceGroupB =
  \ (w_srMv :: Data.ByteString.Internal.ByteString) ->
    case w_srMv
    of _
    { Data.ByteString.Internal.PS ww_srMx ww1_srMy ww2_srMz ww3_srMA ->
    case Engine.Model.ModelLoader.$wreadFaceGroupB
           ww_srMx ww1_srMy ww2_srMz ww3_srMA
    of _ { (# ww5_srOq, ww6_srOr, ww7_srOs #) ->
    Engine.Core.Vec.Vec3
      @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
      ww5_srOq
      ww6_srOr
      ww7_srOs
    }
    }

Rec {
Engine.Model.ModelLoader.readFaceGroupsB [Occ=LoopBreaker]
  :: [Data.ByteString.Internal.ByteString]
     -> [Engine.Core.Vec.Vec3
           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readFaceGroupsB =
  \ (ds_a3qq :: [Data.ByteString.Internal.ByteString]) ->
    case ds_a3qq of _ {
      [] ->
        GHC.Types.[]
          @ (Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint));
      : y_a3qv ys_a3qw ->
        GHC.Types.:
          @ (Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
          (Engine.Model.ModelLoader.readFaceGroupB y_a3qv)
          (Engine.Model.ModelLoader.readFaceGroupsB ys_a3qw)
    }
end Rec }

lvl9_rsnq :: [GHC.Types.Char]
[GblId]
lvl9_rsnq =
  GHC.CString.unpackCString#
    "ModelLoader.toVec3Unknown: given list contains less than 3 Strings."

Engine.Model.ModelLoader.$wfail
  :: Engine.Core.Vec.Vec3
       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
[GblId, Str=DmdType b]
Engine.Model.ModelLoader.$wfail =
  GHC.Err.error
    @ (Engine.Core.Vec.Vec3
         (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
    lvl9_rsnq

Rec {
Engine.Model.ModelLoader.toVec3Unknown_go [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CUInt, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.toVec3Unknown_go =
  \ (ds_aoGU :: [(Foreign.C.Types.CUInt, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLuint) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLuint k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.toVec3Unknown_go ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.toVec3Unknown2
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 100 30}]
Engine.Model.ModelLoader.toVec3Unknown2 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.toVec3Unknown_go
           ((GHC.Word.$fReadWord32_go
               (Text.ParserCombinators.ReadP.run
                  @ GHC.Types.Int Engine.Model.ModelLoader.toVec3Unknown3 s_aoH6))
            `cast` ([(UnsafeCo GHC.Word.Word32 Foreign.C.Types.CUInt,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Word.Word32, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CUInt, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint wild_aoH7
    }

Engine.Model.ModelLoader.toVec3Unknown1
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.toVec3Unknown1 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    Engine.Model.ModelLoader.toVec3Unknown2

Rec {
Engine.Model.ModelLoader.toVec3Unknown_go1 [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CUInt, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.toVec3Unknown_go1 =
  \ (ds_aoGU :: [(Foreign.C.Types.CUInt, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLuint) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLuint k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.toVec3Unknown_go1 ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.toVec3Unknown5
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 100 30}]
Engine.Model.ModelLoader.toVec3Unknown5 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.toVec3Unknown_go1
           ((GHC.Word.$fReadWord32_go
               (Text.ParserCombinators.ReadP.run
                  @ GHC.Types.Int Engine.Model.ModelLoader.toVec3Unknown3 s_aoH6))
            `cast` ([(UnsafeCo GHC.Word.Word32 Foreign.C.Types.CUInt,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Word.Word32, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CUInt, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint wild_aoH7
    }

Engine.Model.ModelLoader.toVec3Unknown4
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.toVec3Unknown4 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    Engine.Model.ModelLoader.toVec3Unknown5

Rec {
Engine.Model.ModelLoader.toVec3Unknown_go2 [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CUInt, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.toVec3Unknown_go2 =
  \ (ds_aoGU :: [(Foreign.C.Types.CUInt, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLuint) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLuint
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLuint k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.toVec3Unknown_go2 ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.toVec3Unknown9
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 100 30}]
Engine.Model.ModelLoader.toVec3Unknown9 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.toVec3Unknown_go2
           ((GHC.Word.$fReadWord32_go
               (Text.ParserCombinators.ReadP.run
                  @ GHC.Types.Int Engine.Model.ModelLoader.toVec3Unknown3 s_aoH6))
            `cast` ([(UnsafeCo GHC.Word.Word32 Foreign.C.Types.CUInt,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Word.Word32, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CUInt, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLuint wild_aoH7
    }

Engine.Model.ModelLoader.toVec3Unknown8
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLuint
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.toVec3Unknown8 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    Engine.Model.ModelLoader.toVec3Unknown9

Engine.Model.ModelLoader.$wtoVec3Unknown
  :: [GHC.Base.String]
     -> (# Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint,
           Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint,
           Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint #)
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30] 450 40}]
Engine.Model.ModelLoader.$wtoVec3Unknown =
  \ (w_srMI :: [GHC.Base.String]) ->
    case w_srMI of _ {
      [] -> case Engine.Model.ModelLoader.$wfail of wild1_00 { };
      : x_aq9F ds_dqwF ->
        case ds_dqwF of _ {
          [] -> case Engine.Model.ModelLoader.$wfail of wild2_00 { };
          : y_aq9G zs_aq9H ->
            case case x_aq9F of wild2_a3mj {
                   [] ->
                     Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLuint;
                   : ds1_a3Km ds2_a3Kn ->
                     Data.Maybe.Just
                       @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                       (case Text.Read.readEither6
                               @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                               (Text.ParserCombinators.ReadP.run
                                  @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                                  Engine.Model.ModelLoader.toVec3Unknown8
                                  wild2_a3mj)
                        of _ {
                          [] -> Engine.Model.ModelLoader.toVec3Unknown7;
                          : x1_aoEZ ds3_aoF0 ->
                            case ds3_aoF0 of _ {
                              [] -> x1_aoEZ;
                              : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.toVec3Unknown6
                            }
                        })
                 }
            of tpl_X6 { __DEFAULT ->
            case case y_aq9G of wild2_a3mj {
                   [] ->
                     Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLuint;
                   : ds1_a3Km ds2_a3Kn ->
                     Data.Maybe.Just
                       @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                       (case Text.Read.readEither6
                               @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                               (Text.ParserCombinators.ReadP.run
                                  @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                                  Engine.Model.ModelLoader.toVec3Unknown4
                                  wild2_a3mj)
                        of _ {
                          [] -> Engine.Model.ModelLoader.toVec3Unknown7;
                          : x1_aoEZ ds3_aoF0 ->
                            case ds3_aoF0 of _ {
                              [] -> x1_aoEZ;
                              : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.toVec3Unknown6
                            }
                        })
                 }
            of tpl1_X8 { __DEFAULT ->
            case zs_aq9H of _ {
              [] -> case GHC.List.badHead of wild3_00 { };
              : x1_ac7a ds1_ac7b ->
                case case x1_ac7a of wild3_a3mj {
                       [] ->
                         Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLuint;
                       : ds2_a3Km ds3_a3Kn ->
                         Data.Maybe.Just
                           @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                           (case Text.Read.readEither6
                                   @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                                   (Text.ParserCombinators.ReadP.run
                                      @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
                                      Engine.Model.ModelLoader.toVec3Unknown1
                                      wild3_a3mj)
                            of _ {
                              [] -> Engine.Model.ModelLoader.toVec3Unknown7;
                              : x2_aoEZ ds4_aoF0 ->
                                case ds4_aoF0 of _ {
                                  [] -> x2_aoEZ;
                                  : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.toVec3Unknown6
                                }
                            })
                     }
                of tpl2_Xa { __DEFAULT ->
                (# tpl_X6, tpl1_X8, tpl2_Xa #)
                }
            }
            }
            }
        }
    }

Engine.Model.ModelLoader.toVec3Unknown [InlPrag=INLINE[0]]
  :: [GHC.Base.String]
     -> Engine.Core.Vec.Vec3
          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
[GblId,
 Arity=1,
 Str=DmdType Sm,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wtoVec3Unknown,
         TopLvl=True, Arity=1, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srMI [Occ=Once] :: [GHC.Base.String]) ->
                 case Engine.Model.ModelLoader.$wtoVec3Unknown w_srMI
                 of _
                 { (# ww1_srOz [Occ=Once], ww2_srOA [Occ=Once], ww3_srOB [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3
                   @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
                   ww1_srOz
                   ww2_srOA
                   ww3_srOB
                 }}]
Engine.Model.ModelLoader.toVec3Unknown =
  \ (w_srMI :: [GHC.Base.String]) ->
    case Engine.Model.ModelLoader.$wtoVec3Unknown w_srMI
    of _ { (# ww1_srOz, ww2_srOA, ww3_srOB #) ->
    Engine.Core.Vec.Vec3
      @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
      ww1_srOz
      ww2_srOA
      ww3_srOB
    }

Engine.Model.ModelLoader.readFaceGroup2 :: GHC.Types.Char
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readFaceGroup2 = GHC.Types.C# '/'

Engine.Model.ModelLoader.readFaceGroup1 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.readFaceGroup1 =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.ModelLoader.readFaceGroup2
    (GHC.Types.[] @ GHC.Types.Char)

lvl10_rsnr :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId]
lvl10_rsnr =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char
    GHC.Classes.$fEqChar
    Engine.Model.ModelLoader.readFaceGroup1

Engine.Model.ModelLoader.readFaceGroup
  :: GHC.Base.String
     -> Engine.Core.Vec.Vec3
          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
[GblId,
 Arity=1,
 Str=DmdType Lm,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_aq9D [Occ=Once] :: GHC.Base.String) ->
                 Engine.Model.ModelLoader.toVec3Unknown
                   (Data.List.Split.Internals.splitOn
                      @ GHC.Types.Char
                      GHC.Classes.$fEqChar
                      Engine.Model.ModelLoader.readFaceGroup1
                      x_aq9D)}]
Engine.Model.ModelLoader.readFaceGroup =
  \ (x_aq9D :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.$wtoVec3Unknown (lvl10_rsnr x_aq9D)
    of _ { (# ww1_srOz, ww2_srOA, ww3_srOB #) ->
    Engine.Core.Vec.Vec3
      @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)
      ww1_srOz
      ww2_srOA
      ww3_srOB
    }

Rec {
Engine.Model.ModelLoader.readFaceGroups [Occ=LoopBreaker]
  :: [GHC.Base.String]
     -> [Engine.Core.Vec.Vec3
           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readFaceGroups =
  \ (ds_a3qq :: [GHC.Base.String]) ->
    case ds_a3qq of _ {
      [] ->
        GHC.Types.[]
          @ (Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint));
      : y_a3qv ys_a3qw ->
        GHC.Types.:
          @ (Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
          (Engine.Model.ModelLoader.readFaceGroup y_a3qv)
          (Engine.Model.ModelLoader.readFaceGroups ys_a3qw)
    }
end Rec }

Engine.Model.ModelLoader.rawObjLine4
  :: [GHC.Types.Char] -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.rawObjLine4 =
  \ (x_a3uM :: [GHC.Types.Char]) ->
    case x_a3uM of _ {
      [] -> GHC.Types.False;
      : ds1_a3Km ds2_a3Kn -> GHC.Types.True
    }

Engine.Model.ModelLoader.rawObjLine3 :: GHC.Types.Char
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.rawObjLine3 = GHC.Types.C# ' '

Engine.Model.ModelLoader.readObjTexLine7 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.readObjTexLine7 =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.ModelLoader.rawObjLine3
    (GHC.Types.[] @ GHC.Types.Char)

Engine.Model.ModelLoader.readObjTexLine6
  :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Model.ModelLoader.readObjTexLine6 =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char
    GHC.Classes.$fEqChar
    Engine.Model.ModelLoader.readObjTexLine7

Rec {
Engine.Model.ModelLoader.readObjTexLine_go [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CFloat, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readObjTexLine_go =
  \ (ds_aoGU :: [(Foreign.C.Types.CFloat, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.readObjTexLine_go ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.readObjTexLine4
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 30}]
Engine.Model.ModelLoader.readObjTexLine4 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.readObjTexLine_go
           ((Text.ParserCombinators.ReadP.run
               @ GHC.Types.Float Engine.Model.ModelLoader.readAll6 s_aoH6)
            `cast` ([(UnsafeCo GHC.Types.Float Foreign.C.Types.CFloat,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Types.Float, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CFloat, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild_aoH7
    }

Engine.Model.ModelLoader.readObjTexLine3
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readObjTexLine3 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    Engine.Model.ModelLoader.readObjTexLine4

Engine.Model.ModelLoader.readObjTexLine2
  :: GHC.Base.String -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 90 0}]
Engine.Model.ModelLoader.readObjTexLine2 =
  \ (s_aogb :: GHC.Base.String) ->
    case Text.Read.readEither6
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
           (Text.ParserCombinators.ReadP.run
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              Engine.Model.ModelLoader.readObjTexLine3
              s_aogb)
    of _ {
      [] -> Engine.Model.ModelLoader.readAll3;
      : x_aoEZ ds_aoF0 ->
        case ds_aoF0 of _ {
          [] -> x_aoEZ;
          : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.readAll2
        }
    }

Engine.Model.ModelLoader.$wreadObjTexLine
  :: GHC.Base.String
     -> (# Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 221 60}]
Engine.Model.ModelLoader.$wreadObjTexLine =
  \ (w_srMM :: GHC.Base.String) ->
    case GHC.List.filter
           @ [GHC.Types.Char]
           Engine.Model.ModelLoader.rawObjLine4
           (Engine.Model.ModelLoader.readObjTexLine6 w_srMM)
    of _ {
      [] -> case GHC.List.tail1 of wild1_00 { };
      : _ xs_aoim ->
        case GHC.List.$wlen @ [GHC.Types.Char] xs_aoim 0 of _ {
          __DEFAULT ->
            (# Engine.Model.ModelLoader.readObjTexLine5
               `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                       :: GHC.Types.Float ~# Foreign.C.Types.CFloat),
               Engine.Model.ModelLoader.readObjTexLine5
               `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                       :: GHC.Types.Float ~# Foreign.C.Types.CFloat) #);
          2 ->
            case GHC.Base.map
                   @ [GHC.Types.Char]
                   @ Foreign.C.Types.CFloat
                   Engine.Model.ModelLoader.readObjTexLine2
                   xs_aoim
            of _ {
              [] ->
                case Engine.Model.ModelLoader.readObjTexLine1 of wild2_00 { };
              : x_aq9B ys_aq9C ->
                case x_aq9B
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of nt_sqRn { GHC.Types.F# ipv_sqRo ->
                case ys_aq9C of _ {
                  [] -> case GHC.List.badHead of wild3_00 { };
                  : x1_ac7a ds2_ac7b ->
                    case x1_ac7a
                         `cast` (<Foreign.C.Types.NTCo:CFloat>
                                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                    of _ { GHC.Types.F# ipv1_sqRu ->
                    (# nt_sqRn
                       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                               :: GHC.Types.Float ~# Foreign.C.Types.CFloat),
                       (GHC.Types.F# (GHC.Prim.minusFloat# (__float 1.0) ipv1_sqRu))
                       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                               :: GHC.Types.Float ~# Foreign.C.Types.CFloat) #)
                    }
                }
                }
            }
        }
    }

Engine.Model.ModelLoader.readObjTexLine [InlPrag=INLINE[0]]
  :: GHC.Base.String
     -> Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Str=DmdType Lm,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wreadObjTexLine,
         TopLvl=True, Arity=1, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srMM [Occ=Once] :: GHC.Base.String) ->
                 case Engine.Model.ModelLoader.$wreadObjTexLine w_srMM
                 of _ { (# ww1_srOG [Occ=Once], ww2_srOH [Occ=Once] #) ->
                 Engine.Core.Vec.Vec2
                   @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat ww1_srOG ww2_srOH
                 }}]
Engine.Model.ModelLoader.readObjTexLine =
  \ (w_srMM :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.$wreadObjTexLine w_srMM
    of _ { (# ww1_srOG, ww2_srOH #) ->
    Engine.Core.Vec.Vec2
      @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat ww1_srOG ww2_srOH
    }

Engine.Model.ModelLoader.readObjVecLine5 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.readObjVecLine5 =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.ModelLoader.rawObjLine3
    (GHC.Types.[] @ GHC.Types.Char)

Engine.Model.ModelLoader.readObjVecLine4
  :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Model.ModelLoader.readObjVecLine4 =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char
    GHC.Classes.$fEqChar
    Engine.Model.ModelLoader.readObjVecLine5

Rec {
Engine.Model.ModelLoader.readObjVecLine_go [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CFloat, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readObjVecLine_go =
  \ (ds_aoGU :: [(Foreign.C.Types.CFloat, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.readObjVecLine_go ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.readObjVecLine3
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 30}]
Engine.Model.ModelLoader.readObjVecLine3 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.readObjVecLine_go
           ((Text.ParserCombinators.ReadP.run
               @ GHC.Types.Float Engine.Model.ModelLoader.readAll6 s_aoH6)
            `cast` ([(UnsafeCo GHC.Types.Float Foreign.C.Types.CFloat,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Types.Float, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CFloat, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild_aoH7
    }

Engine.Model.ModelLoader.readObjVecLine2
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readObjVecLine2 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    Engine.Model.ModelLoader.readObjVecLine3

Engine.Model.ModelLoader.readObjVecLine1
  :: GHC.Base.String -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 90 0}]
Engine.Model.ModelLoader.readObjVecLine1 =
  \ (s_aogb :: GHC.Base.String) ->
    case Text.Read.readEither6
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
           (Text.ParserCombinators.ReadP.run
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              Engine.Model.ModelLoader.readObjVecLine2
              s_aogb)
    of _ {
      [] -> Engine.Model.ModelLoader.readAll3;
      : x_aoEZ ds_aoF0 ->
        case ds_aoF0 of _ {
          [] -> x_aoEZ;
          : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.readAll2
        }
    }

Engine.Model.ModelLoader.$wreadObjVecLine
  :: GHC.Base.String
     -> (# Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 170 0}]
Engine.Model.ModelLoader.$wreadObjVecLine =
  \ (w_srMQ :: GHC.Base.String) ->
    case GHC.List.filter
           @ [GHC.Types.Char]
           Engine.Model.ModelLoader.rawObjLine4
           (Engine.Model.ModelLoader.readObjVecLine4 w_srMQ)
    of _ {
      [] -> case GHC.List.tail1 of wild1_00 { };
      : _ xs_aoim ->
        case GHC.List.$wlen @ [GHC.Types.Char] xs_aoim 0 of _ {
          __DEFAULT -> case GHC.Err.undefined of wild1_00 { };
          3 ->
            Engine.Model.ModelLoader.$wtoVec3
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              (GHC.Base.map
                 @ [GHC.Types.Char]
                 @ Foreign.C.Types.CFloat
                 Engine.Model.ModelLoader.readObjVecLine1
                 xs_aoim)
        }
    }

Engine.Model.ModelLoader.readObjVecLine [InlPrag=INLINE[0]]
  :: GHC.Base.String
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Str=DmdType Lm,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wreadObjVecLine,
         TopLvl=True, Arity=1, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srMQ [Occ=Once] :: GHC.Base.String) ->
                 case Engine.Model.ModelLoader.$wreadObjVecLine w_srMQ
                 of _
                 { (# ww1_srOM [Occ=Once], ww2_srON [Occ=Once], ww3_srOO [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3
                   @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   ww1_srOM
                   ww2_srON
                   ww3_srOO
                 }}]
Engine.Model.ModelLoader.readObjVecLine =
  \ (w_srMQ :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.$wreadObjVecLine w_srMQ
    of _ { (# ww1_srOM, ww2_srON, ww3_srOO #) ->
    Engine.Core.Vec.Vec3
      @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
      ww1_srOM
      ww2_srON
      ww3_srOO
    }

Engine.Model.ModelLoader.readObjVecLineB4
  :: Data.ByteString.Internal.ByteString -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(AAAL),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a3uM [Occ=Once!]
                    :: Data.ByteString.Internal.ByteString) ->
                 case x_a3uM
                 of _ { Data.ByteString.Internal.PS _ _ _ rb3_aqxM [Occ=Once] ->
                 case GHC.Prim.<=# rb3_aqxM 0 of _ {
                   GHC.Types.False -> GHC.Types.True;
                   GHC.Types.True -> GHC.Types.False
                 }
                 }}]
Engine.Model.ModelLoader.readObjVecLineB4 =
  \ (x_a3uM :: Data.ByteString.Internal.ByteString) ->
    case x_a3uM
    of _
    { Data.ByteString.Internal.PS rb_aqxJ rb1_aqxK rb2_aqxL rb3_aqxM ->
    case GHC.Prim.<=# rb3_aqxM 0 of _ {
      GHC.Types.False -> GHC.Types.True;
      GHC.Types.True -> GHC.Types.False
    }
    }

Rec {
Engine.Model.ModelLoader.readObjVecLineB_go [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CFloat, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readObjVecLineB_go =
  \ (ds_aoGU :: [(Foreign.C.Types.CFloat, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.readObjVecLineB_go ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.readObjVecLineB3
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 30}]
Engine.Model.ModelLoader.readObjVecLineB3 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.readObjVecLineB_go
           ((Text.ParserCombinators.ReadP.run
               @ GHC.Types.Float Engine.Model.ModelLoader.readAll6 s_aoH6)
            `cast` ([(UnsafeCo GHC.Types.Float Foreign.C.Types.CFloat,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Types.Float, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CFloat, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild_aoH7
    }

Engine.Model.ModelLoader.readObjVecLineB2
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readObjVecLineB2 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    Engine.Model.ModelLoader.readObjVecLineB3

Engine.Model.ModelLoader.readObjVecLineB1
  :: Data.ByteString.Internal.ByteString -> Foreign.C.Types.CFloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 110 0}]
Engine.Model.ModelLoader.readObjVecLineB1 =
  \ (x_a3uM :: Data.ByteString.Internal.ByteString) ->
    case Text.Read.readEither6
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
           (Text.ParserCombinators.ReadP.run
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              Engine.Model.ModelLoader.readObjVecLineB2
              (Data.ByteString.Internal.unpackChars x_a3uM))
    of _ {
      [] -> Engine.Model.ModelLoader.readAll3;
      : x1_aoEZ ds_aoF0 ->
        case ds_aoF0 of _ {
          [] -> x1_aoEZ;
          : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.readAll2
        }
    }

Engine.Model.ModelLoader.$wreadObjVecLineB
  :: GHC.Prim.Addr#
     -> GHC.ForeignPtr.ForeignPtrContents
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> (# Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat #)
[GblId,
 Arity=4,
 Str=DmdType LLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 30] 391 0}]
Engine.Model.ModelLoader.$wreadObjVecLineB =
  \ (ww_srN2 :: GHC.Prim.Addr#)
    (ww1_srN3 :: GHC.ForeignPtr.ForeignPtrContents)
    (ww2_srN4 :: GHC.Prim.Int#)
    (ww3_srN5 :: GHC.Prim.Int#) ->
    case ww3_srN5 of ds2_aqN8 {
      __DEFAULT ->
        letrec {
          $wloop_srOX [Occ=LoopBreaker]
            :: GHC.Prim.Int# -> [Data.ByteString.Internal.ByteString]
          [LclId, Arity=1, Str=DmdType L]
          $wloop_srOX =
            \ (ww4_srMW :: GHC.Prim.Int#) ->
              case {__pkg_ccall bytestring-0.10.0.2 memchr GHC.Prim.Addr#
                                        -> GHC.Prim.Int#
                                        -> GHC.Prim.Word#
                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Addr# #)}_aqS9
                     (GHC.Prim.plusAddr# ww_srN2 (GHC.Prim.+# ww2_srN4 ww4_srMW))
                     32
                     (GHC.Prim.int2Word# (GHC.Prim.-# ds2_aqN8 ww4_srMW))
                     GHC.Prim.realWorld#
              of _ { (# ds4_aqSe, ds5_aqSf #) ->
              case GHC.Prim.touch#
                     @ GHC.ForeignPtr.ForeignPtrContents ww1_srN3 ds4_aqSe
              of _ { __DEFAULT ->
              case GHC.Prim.eqAddr# ds5_aqSf __NULL of _ {
                GHC.Types.False ->
                  let {
                    i_aqNv [Dmd=Just D(L)] :: GHC.Types.Int
                    [LclId, Str=DmdType]
                    i_aqNv =
                      case GHC.Prim.touch#
                             @ GHC.ForeignPtr.ForeignPtrContents ww1_srN3 GHC.Prim.realWorld#
                      of _ { __DEFAULT ->
                      GHC.Types.I#
                        (GHC.Prim.minusAddr#
                           ds5_aqSf (GHC.Prim.plusAddr# ww_srN2 ww2_srN4))
                      } } in
                  GHC.Types.:
                    @ Data.ByteString.Internal.ByteString
                    (case i_aqNv of _ { GHC.Types.I# x_a3tF ->
                     Data.ByteString.Internal.PS
                       ww_srN2
                       ww1_srN3
                       (GHC.Prim.+# ww2_srN4 ww4_srMW)
                       (GHC.Prim.-# x_a3tF ww4_srMW)
                     })
                    (case i_aqNv of _ { GHC.Types.I# x_a3s5 ->
                     $wloop_srOX (GHC.Prim.+# x_a3s5 1)
                     });
                GHC.Types.True ->
                  GHC.Types.:
                    @ Data.ByteString.Internal.ByteString
                    (Data.ByteString.Internal.PS
                       ww_srN2
                       ww1_srN3
                       (GHC.Prim.+# ww2_srN4 ww4_srMW)
                       (GHC.Prim.-# ds2_aqN8 ww4_srMW))
                    (GHC.Types.[] @ Data.ByteString.Internal.ByteString)
              }
              }
              }; } in
        case GHC.List.filter
               @ Data.ByteString.Internal.ByteString
               Engine.Model.ModelLoader.readObjVecLineB4
               ($wloop_srOX 0)
        of _ {
          [] -> case GHC.List.tail1 of wild1_00 { };
          : _ xs_aoim ->
            case GHC.List.$wlen @ Data.ByteString.Internal.ByteString xs_aoim 0
            of _ {
              __DEFAULT -> case GHC.Err.undefined of wild1_00 { };
              3 ->
                Engine.Model.ModelLoader.$wtoVec3
                  @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                  (GHC.Base.map
                     @ Data.ByteString.Internal.ByteString
                     @ Foreign.C.Types.CFloat
                     Engine.Model.ModelLoader.readObjVecLineB1
                     xs_aoim)
            }
        };
      0 -> case GHC.List.tail1 of wild_00 { }
    }

Engine.Model.ModelLoader.readObjVecLineB [InlPrag=INLINE[0]]
  :: Data.ByteString.Internal.ByteString
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Str=DmdType U(LLLL)m,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wreadObjVecLineB,
         TopLvl=True, Arity=1, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srN0 [Occ=Once!]
                    :: Data.ByteString.Internal.ByteString) ->
                 case w_srN0
                 of _
                 { Data.ByteString.Internal.PS ww_srN2 [Occ=Once]
                                               ww1_srN3 [Occ=Once]
                                               ww2_srN4 [Occ=Once]
                                               ww3_srN5 [Occ=Once] ->
                 case Engine.Model.ModelLoader.$wreadObjVecLineB
                        ww_srN2 ww1_srN3 ww2_srN4 ww3_srN5
                 of _
                 { (# ww5_srOT [Occ=Once], ww6_srOU [Occ=Once], ww7_srOV [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3
                   @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   ww5_srOT
                   ww6_srOU
                   ww7_srOV
                 }
                 }}]
Engine.Model.ModelLoader.readObjVecLineB =
  \ (w_srN0 :: Data.ByteString.Internal.ByteString) ->
    case w_srN0
    of _
    { Data.ByteString.Internal.PS ww_srN2 ww1_srN3 ww2_srN4 ww3_srN5 ->
    case Engine.Model.ModelLoader.$wreadObjVecLineB
           ww_srN2 ww1_srN3 ww2_srN4 ww3_srN5
    of _ { (# ww5_srOT, ww6_srOU, ww7_srOV #) ->
    Engine.Core.Vec.Vec3
      @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
      ww5_srOT
      ww6_srOU
      ww7_srOV
    }
    }

cs_rsns :: [GHC.Types.Char]
[GblId, Str=DmdType]
cs_rsns = GHC.CString.unpackCString# "v "

lvl11_rsnt :: GHC.Types.Int
[GblId]
lvl11_rsnt =
  case GHC.List.$wlen @ GHC.Types.Char cs_rsns 0
  of ww_aqT9 { __DEFAULT ->
  GHC.Types.I# ww_aqT9
  }

lvl12_rsnu :: Data.ByteString.Internal.ByteString
[GblId, Str=DmdType]
lvl12_rsnu =
  Data.ByteString.Internal.unsafePackLenChars lvl11_rsnt cs_rsns

cs1_rsnv :: [GHC.Types.Char]
[GblId, Str=DmdType]
cs1_rsnv = GHC.CString.unpackCString# "vn "

lvl13_rsnw :: GHC.Types.Int
[GblId]
lvl13_rsnw =
  case GHC.List.$wlen @ GHC.Types.Char cs1_rsnv 0
  of ww_aqT9 { __DEFAULT ->
  GHC.Types.I# ww_aqT9
  }

lvl14_rsnx :: Data.ByteString.Internal.ByteString
[GblId, Str=DmdType]
lvl14_rsnx =
  Data.ByteString.Internal.unsafePackLenChars lvl13_rsnw cs1_rsnv

cs2_rsny :: [GHC.Types.Char]
[GblId, Str=DmdType]
cs2_rsny = GHC.CString.unpackCString# "vt "

lvl15_rsnz :: GHC.Types.Int
[GblId]
lvl15_rsnz =
  case GHC.List.$wlen @ GHC.Types.Char cs2_rsny 0
  of ww_aqT9 { __DEFAULT ->
  GHC.Types.I# ww_aqT9
  }

lvl16_rsnA :: Data.ByteString.Internal.ByteString
[GblId, Str=DmdType]
lvl16_rsnA =
  Data.ByteString.Internal.unsafePackLenChars lvl15_rsnz cs2_rsny

cs3_rsnB :: [GHC.Types.Char]
[GblId, Str=DmdType]
cs3_rsnB = GHC.CString.unpackCString# "f "

lvl17_rsnC :: GHC.Types.Int
[GblId]
lvl17_rsnC =
  case GHC.List.$wlen @ GHC.Types.Char cs3_rsnB 0
  of ww_aqT9 { __DEFAULT ->
  GHC.Types.I# ww_aqT9
  }

lvl18_rsnD :: Data.ByteString.Internal.ByteString
[GblId, Str=DmdType]
lvl18_rsnD =
  Data.ByteString.Internal.unsafePackLenChars lvl17_rsnC cs3_rsnB

Rec {
go_rsnE
  :: [Data.ByteString.Internal.ByteString]
     -> [Engine.Core.Vec.Vec3
           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
[GblId, Arity=1, Str=DmdType S]
go_rsnE =
  \ (ds_a3qq :: [Data.ByteString.Internal.ByteString]) ->
    case ds_a3qq of _ {
      [] ->
        GHC.Types.[]
          @ (Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint));
      : y_a3qv ys_a3qw ->
        GHC.Types.:
          @ (Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
          (Engine.Model.ModelLoader.readFaceGroupB y_a3qv)
          (go_rsnE ys_a3qw)
    }
end Rec }

Rec {
Engine.Model.ModelLoader.$wa [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> [Engine.Core.Vec.Vec3
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Engine.Core.Vec.Vec3
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Engine.Core.Vec.Vec2
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Engine.Core.Vec.Vec3
           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ([Engine.Core.Vec.Vec3
               Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
            [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
            [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
            [Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) #)
[GblId, Arity=6, Str=DmdType SLLLLL]
Engine.Model.ModelLoader.$wa =
  \ (w_srNz :: GHC.IO.Handle.Types.Handle)
    (ww_srNC
       :: [Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (ww1_srND
       :: [Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (ww2_srNE
       :: [Engine.Core.Vec.Vec2
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (ww3_srNF
       :: [Engine.Core.Vec.Vec3
             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
    (w1_srNH :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           w_srNz
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           w1_srNH
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ Data.ByteString.Internal.ByteString
               Data.ByteString.getLine4
               w_srNz
               (Data.ByteString.getLine3
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <Data.ByteString.Internal.ByteString>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  Data.ByteString.Internal.ByteString #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__
                            -> GHC.Types.IO Data.ByteString.Internal.ByteString)))
               ipv_a3Ui
        of _ { (# ipv2_X3Y8, ipv3_X3Ya #) ->
        case lvl12_rsnu
        of _
        { Data.ByteString.Internal.PS ww4_arq3
                                      ww5_arq4
                                      ww6_arq5
                                      ww7_arq6 ->
        case ipv3_X3Ya
        of _
        { Data.ByteString.Internal.PS ww8_arqa
                                      ww9_arqb
                                      ww10_arqc
                                      ww11_arqd ->
        case ww7_arq6 of wild1_arqp {
          __DEFAULT ->
            let {
              $w$j_srOZ
                :: ([Engine.Core.Vec.Vec3
                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                    [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                    [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                    [Engine.Core.Vec.Vec3
                       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
              [LclId, Str=DmdType]
              $w$j_srOZ =
                case lvl14_rsnx
                of _
                { Data.ByteString.Internal.PS ww12_Xryv
                                              ww13_Xruj
                                              ww14_Xrul
                                              ww15_Xrun ->
                case ww15_Xrun of wild2_Xrxb {
                  __DEFAULT ->
                    let {
                      $w$j1_srP0
                        :: ([Engine.Core.Vec.Vec3
                               Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                            [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                            [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                            [Engine.Core.Vec.Vec3
                               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
                      [LclId, Str=DmdType]
                      $w$j1_srP0 =
                        case lvl16_rsnA
                        of _
                        { Data.ByteString.Internal.PS ww16_XryV
                                                      ww17_XryY
                                                      ww18_Xrz1
                                                      ww19_Xrz4 ->
                        case ww19_Xrz4 of wild3_Xrxn {
                          __DEFAULT ->
                            let {
                              $w$j2_srP1
                                :: ([Engine.Core.Vec.Vec3
                                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                    [Engine.Core.Vec.Vec3
                                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                    [Engine.Core.Vec.Vec2
                                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                    [Engine.Core.Vec.Vec3
                                       (Data.Maybe.Maybe
                                          Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
                              [LclId, Str=DmdType]
                              $w$j2_srP1 =
                                case lvl18_rsnD
                                of _
                                { Data.ByteString.Internal.PS ww20_Xrzl
                                                              ww21_Xrzo
                                                              ww22_Xrzr
                                                              ww23_Xrzu ->
                                let {
                                  $w$j3_srP2
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# [Engine.Core.Vec.Vec3
                                                Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                             [Engine.Core.Vec.Vec3
                                                Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                             [Engine.Core.Vec.Vec2
                                                Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                             [Engine.Core.Vec.Vec3
                                                (Data.Maybe.Maybe
                                                   Graphics.Rendering.OpenGL.Raw.Types.GLuint)] #)
                                  [LclId, Arity=1, Str=DmdType T]
                                  $w$j3_srP2 =
                                    \ _ ->
                                      (# ww_srNC,
                                         ww1_srND,
                                         ww2_srNE,
                                         GHC.Base.++
                                           @ (Engine.Core.Vec.Vec3
                                                (Data.Maybe.Maybe
                                                   Graphics.Rendering.OpenGL.Raw.Types.GLuint))
                                           ww3_srNF
                                           (case ww11_arqd of ds3_aqN8 {
                                              __DEFAULT ->
                                                letrec {
                                                  $wloop_srPa [Occ=LoopBreaker]
                                                    :: GHC.Prim.Int#
                                                       -> [Data.ByteString.Internal.ByteString]
                                                  [LclId, Arity=1, Str=DmdType L]
                                                  $wloop_srPa =
                                                    \ (ww24_srNc :: GHC.Prim.Int#) ->
                                                      case {__pkg_ccall bytestring-0.10.0.2 memchr GHC.Prim.Addr#
                                        -> GHC.Prim.Int#
                                        -> GHC.Prim.Word#
                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Addr# #)}_aqS9
                                                             (GHC.Prim.plusAddr#
                                                                ww8_arqa
                                                                (GHC.Prim.+# ww10_arqc ww24_srNc))
                                                             32
                                                             (GHC.Prim.int2Word#
                                                                (GHC.Prim.-# ds3_aqN8 ww24_srNc))
                                                             GHC.Prim.realWorld#
                                                      of _ { (# ds4_aqSe, ds5_aqSf #) ->
                                                      case GHC.Prim.touch#
                                                             @ GHC.ForeignPtr.ForeignPtrContents
                                                             ww9_arqb
                                                             ds4_aqSe
                                                      of _ { __DEFAULT ->
                                                      case GHC.Prim.eqAddr# ds5_aqSf __NULL of _ {
                                                        GHC.Types.False ->
                                                          let {
                                                            i_aqNv [Dmd=Just D(L)] :: GHC.Types.Int
                                                            [LclId, Str=DmdType]
                                                            i_aqNv =
                                                              case GHC.Prim.touch#
                                                                     @ GHC.ForeignPtr.ForeignPtrContents
                                                                     ww9_arqb
                                                                     GHC.Prim.realWorld#
                                                              of _ { __DEFAULT ->
                                                              GHC.Types.I#
                                                                (GHC.Prim.minusAddr#
                                                                   ds5_aqSf
                                                                   (GHC.Prim.plusAddr#
                                                                      ww8_arqa ww10_arqc))
                                                              } } in
                                                          GHC.Types.:
                                                            @ Data.ByteString.Internal.ByteString
                                                            (case i_aqNv
                                                             of _ { GHC.Types.I# x_a3tF ->
                                                             Data.ByteString.Internal.PS
                                                               ww8_arqa
                                                               ww9_arqb
                                                               (GHC.Prim.+# ww10_arqc ww24_srNc)
                                                               (GHC.Prim.-# x_a3tF ww24_srNc)
                                                             })
                                                            (case i_aqNv
                                                             of _ { GHC.Types.I# x_a3s5 ->
                                                             $wloop_srPa (GHC.Prim.+# x_a3s5 1)
                                                             });
                                                        GHC.Types.True ->
                                                          GHC.Types.:
                                                            @ Data.ByteString.Internal.ByteString
                                                            (Data.ByteString.Internal.PS
                                                               ww8_arqa
                                                               ww9_arqb
                                                               (GHC.Prim.+# ww10_arqc ww24_srNc)
                                                               (GHC.Prim.-# ds3_aqN8 ww24_srNc))
                                                            (GHC.Types.[]
                                                               @ Data.ByteString.Internal.ByteString)
                                                      }
                                                      }
                                                      }; } in
                                                case $wloop_srPa 0 of _ {
                                                  [] -> case GHC.List.tail1 of wild5_00 { };
                                                  : _ xs_aoim -> go_rsnE xs_aoim
                                                };
                                              0 -> case GHC.List.tail1 of wild4_00 { }
                                            }) #) } in
                                case ww23_Xrzu of wild4_XrxB {
                                  __DEFAULT ->
                                    case GHC.Prim.<# ww11_arqd wild4_XrxB of _ {
                                      GHC.Types.False ->
                                        case {__pkg_ccall bytestring-0.10.0.2 memcmp GHC.Prim.Addr#
                                        -> GHC.Prim.Addr#
                                        -> GHC.Prim.Word#
                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Int# #)}_arqs
                                               (GHC.Prim.plusAddr# ww20_Xrzl ww22_Xrzr)
                                               (GHC.Prim.plusAddr# ww8_arqa ww10_arqc)
                                               (GHC.Prim.int2Word# wild4_XrxB)
                                               GHC.Prim.realWorld#
                                        of _ { (# ds4_arqw, ds5_arqx #) ->
                                        case case GHC.Prim.narrow32Int# ds5_arqx of _ {
                                               __DEFAULT -> GHC.Types.False;
                                               0 -> GHC.Types.True
                                             }
                                        of vx_arqA { __DEFAULT ->
                                        case GHC.Prim.touch#
                                               @ GHC.ForeignPtr.ForeignPtrContents ww9_arqb ds4_arqw
                                        of s'_arqB { __DEFAULT ->
                                        case GHC.Prim.touch#
                                               @ GHC.ForeignPtr.ForeignPtrContents ww21_Xrzo s'_arqB
                                        of _ { __DEFAULT ->
                                        case vx_arqA of _ {
                                          GHC.Types.False ->
                                            (ww_srNC, ww1_srND, ww2_srNE, ww3_srNF);
                                          GHC.Types.True ->
                                            case $w$j3_srP2 GHC.Prim.realWorld#
                                            of _
                                            { (# ww25_srP5, ww26_srP6, ww27_srP7, ww28_srP8 #) ->
                                            (ww25_srP5, ww26_srP6, ww27_srP7, ww28_srP8)
                                            }
                                        }
                                        }
                                        }
                                        }
                                        };
                                      GHC.Types.True -> (ww_srNC, ww1_srND, ww2_srNE, ww3_srNF)
                                    };
                                  0 ->
                                    case $w$j3_srP2 GHC.Prim.realWorld#
                                    of _ { (# ww25_srP5, ww26_srP6, ww27_srP7, ww28_srP8 #) ->
                                    (ww25_srP5, ww26_srP6, ww27_srP7, ww28_srP8)
                                    }
                                }
                                } } in
                            case GHC.Prim.<# ww11_arqd wild3_Xrxn of _ {
                              GHC.Types.False ->
                                case {__pkg_ccall bytestring-0.10.0.2 memcmp GHC.Prim.Addr#
                                        -> GHC.Prim.Addr#
                                        -> GHC.Prim.Word#
                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Int# #)}_arqs
                                       (GHC.Prim.plusAddr# ww16_XryV ww18_Xrz1)
                                       (GHC.Prim.plusAddr# ww8_arqa ww10_arqc)
                                       (GHC.Prim.int2Word# wild3_Xrxn)
                                       GHC.Prim.realWorld#
                                of _ { (# ds4_arqw, ds5_arqx #) ->
                                case case GHC.Prim.narrow32Int# ds5_arqx of _ {
                                       __DEFAULT -> GHC.Types.False;
                                       0 -> GHC.Types.True
                                     }
                                of vx_arqA { __DEFAULT ->
                                case GHC.Prim.touch#
                                       @ GHC.ForeignPtr.ForeignPtrContents ww9_arqb ds4_arqw
                                of s'_arqB { __DEFAULT ->
                                case GHC.Prim.touch#
                                       @ GHC.ForeignPtr.ForeignPtrContents ww17_XryY s'_arqB
                                of _ { __DEFAULT ->
                                case vx_arqA of _ {
                                  GHC.Types.False -> $w$j2_srP1;
                                  GHC.Types.True ->
                                    (ww_srNC,
                                     ww1_srND,
                                     GHC.Base.++
                                       @ (Engine.Core.Vec.Vec2
                                            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                                       ww2_srNE
                                       (GHC.Types.:
                                          @ (Engine.Core.Vec.Vec2
                                               Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                                          (case Engine.Model.ModelLoader.$wreadObjTexLine
                                                  (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                                     ww8_arqa
                                                     ww9_arqb
                                                     ww10_arqc
                                                     ww11_arqd
                                                     (GHC.Types.[] @ GHC.Types.Char))
                                           of _ { (# ww21_srOG, ww22_srOH #) ->
                                           Engine.Core.Vec.Vec2
                                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                             ww21_srOG
                                             ww22_srOH
                                           })
                                          (GHC.Types.[]
                                             @ (Engine.Core.Vec.Vec2
                                                  Graphics.Rendering.OpenGL.Raw.Types.GLfloat))),
                                     ww3_srNF)
                                }
                                }
                                }
                                }
                                };
                              GHC.Types.True -> $w$j2_srP1
                            };
                          0 ->
                            (ww_srNC,
                             ww1_srND,
                             GHC.Base.++
                               @ (Engine.Core.Vec.Vec2
                                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                               ww2_srNE
                               (GHC.Types.:
                                  @ (Engine.Core.Vec.Vec2
                                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                                  (case Engine.Model.ModelLoader.$wreadObjTexLine
                                          (Data.ByteString.Internal.$wunpackAppendCharsLazy
                                             ww8_arqa
                                             ww9_arqb
                                             ww10_arqc
                                             ww11_arqd
                                             (GHC.Types.[] @ GHC.Types.Char))
                                   of _ { (# ww21_srOG, ww22_srOH #) ->
                                   Engine.Core.Vec.Vec2
                                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                     ww21_srOG
                                     ww22_srOH
                                   })
                                  (GHC.Types.[]
                                     @ (Engine.Core.Vec.Vec2
                                          Graphics.Rendering.OpenGL.Raw.Types.GLfloat))),
                             ww3_srNF)
                        }
                        } } in
                    case GHC.Prim.<# ww11_arqd wild2_Xrxb of _ {
                      GHC.Types.False ->
                        case {__pkg_ccall bytestring-0.10.0.2 memcmp GHC.Prim.Addr#
                                        -> GHC.Prim.Addr#
                                        -> GHC.Prim.Word#
                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Int# #)}_arqs
                               (GHC.Prim.plusAddr# ww12_Xryv ww14_Xrul)
                               (GHC.Prim.plusAddr# ww8_arqa ww10_arqc)
                               (GHC.Prim.int2Word# wild2_Xrxb)
                               GHC.Prim.realWorld#
                        of _ { (# ds4_arqw, ds5_arqx #) ->
                        case case GHC.Prim.narrow32Int# ds5_arqx of _ {
                               __DEFAULT -> GHC.Types.False;
                               0 -> GHC.Types.True
                             }
                        of vx_arqA { __DEFAULT ->
                        case GHC.Prim.touch#
                               @ GHC.ForeignPtr.ForeignPtrContents ww9_arqb ds4_arqw
                        of s'_arqB { __DEFAULT ->
                        case GHC.Prim.touch#
                               @ GHC.ForeignPtr.ForeignPtrContents ww13_Xruj s'_arqB
                        of _ { __DEFAULT ->
                        case vx_arqA of _ {
                          GHC.Types.False -> $w$j1_srP0;
                          GHC.Types.True ->
                            (ww_srNC,
                             GHC.Base.++
                               @ (Engine.Core.Vec.Vec3
                                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                               ww1_srND
                               (GHC.Types.:
                                  @ (Engine.Core.Vec.Vec3
                                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                                  (case Engine.Model.ModelLoader.$wreadObjVecLineB
                                          ww8_arqa ww9_arqb ww10_arqc ww11_arqd
                                   of _ { (# ww17_srOT, ww18_srOU, ww19_srOV #) ->
                                   Engine.Core.Vec.Vec3
                                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                     ww17_srOT
                                     ww18_srOU
                                     ww19_srOV
                                   })
                                  (GHC.Types.[]
                                     @ (Engine.Core.Vec.Vec3
                                          Graphics.Rendering.OpenGL.Raw.Types.GLfloat))),
                             ww2_srNE,
                             ww3_srNF)
                        }
                        }
                        }
                        }
                        };
                      GHC.Types.True -> $w$j1_srP0
                    };
                  0 ->
                    (ww_srNC,
                     GHC.Base.++
                       @ (Engine.Core.Vec.Vec3
                            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                       ww1_srND
                       (GHC.Types.:
                          @ (Engine.Core.Vec.Vec3
                               Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                          (case Engine.Model.ModelLoader.$wreadObjVecLineB
                                  ww8_arqa ww9_arqb ww10_arqc ww11_arqd
                           of _ { (# ww17_srOT, ww18_srOU, ww19_srOV #) ->
                           Engine.Core.Vec.Vec3
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             ww17_srOT
                             ww18_srOU
                             ww19_srOV
                           })
                          (GHC.Types.[]
                             @ (Engine.Core.Vec.Vec3
                                  Graphics.Rendering.OpenGL.Raw.Types.GLfloat))),
                     ww2_srNE,
                     ww3_srNF)
                }
                } } in
            case GHC.Prim.<# ww11_arqd wild1_arqp of _ {
              GHC.Types.False ->
                case {__pkg_ccall bytestring-0.10.0.2 memcmp GHC.Prim.Addr#
                                        -> GHC.Prim.Addr#
                                        -> GHC.Prim.Word#
                                        -> GHC.Prim.State# GHC.Prim.RealWorld
                                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Int# #)}_arqs
                       (GHC.Prim.plusAddr# ww4_arq3 ww6_arq5)
                       (GHC.Prim.plusAddr# ww8_arqa ww10_arqc)
                       (GHC.Prim.int2Word# wild1_arqp)
                       GHC.Prim.realWorld#
                of _ { (# ds4_arqw, ds5_arqx #) ->
                case case GHC.Prim.narrow32Int# ds5_arqx of _ {
                       __DEFAULT -> GHC.Types.False;
                       0 -> GHC.Types.True
                     }
                of vx_arqA { __DEFAULT ->
                case GHC.Prim.touch#
                       @ GHC.ForeignPtr.ForeignPtrContents ww9_arqb ds4_arqw
                of s'_arqB { __DEFAULT ->
                case GHC.Prim.touch#
                       @ GHC.ForeignPtr.ForeignPtrContents ww5_arq4 s'_arqB
                of _ { __DEFAULT ->
                case vx_arqA of _ {
                  GHC.Types.False ->
                    case $w$j_srOZ
                    of _ { (ww12_XrS6, ww13_XrS8, ww14_XrSa, ww15_XrSc) ->
                    Engine.Model.ModelLoader.$wa
                      w_srNz ww12_XrS6 ww13_XrS8 ww14_XrSa ww15_XrSc ipv2_X3Y8
                    };
                  GHC.Types.True ->
                    Engine.Model.ModelLoader.$wa
                      w_srNz
                      (GHC.Base.++
                         @ (Engine.Core.Vec.Vec3
                              Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                         ww_srNC
                         (GHC.Types.:
                            @ (Engine.Core.Vec.Vec3
                                 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                            (case Engine.Model.ModelLoader.$wreadObjVecLineB
                                    ww8_arqa ww9_arqb ww10_arqc ww11_arqd
                             of _ { (# ww13_srOT, ww14_srOU, ww15_srOV #) ->
                             Engine.Core.Vec.Vec3
                               @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                               ww13_srOT
                               ww14_srOU
                               ww15_srOV
                             })
                            (GHC.Types.[]
                               @ (Engine.Core.Vec.Vec3
                                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat))))
                      ww1_srND
                      ww2_srNE
                      ww3_srNF
                      ipv2_X3Y8
                }
                }
                }
                }
                };
              GHC.Types.True ->
                case $w$j_srOZ
                of _ { (ww12_XrS6, ww13_XrS8, ww14_XrSa, ww15_XrSc) ->
                Engine.Model.ModelLoader.$wa
                  w_srNz ww12_XrS6 ww13_XrS8 ww14_XrSa ww15_XrSc ipv2_X3Y8
                }
            };
          0 ->
            Engine.Model.ModelLoader.$wa
              w_srNz
              (GHC.Base.++
                 @ (Engine.Core.Vec.Vec3
                      Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 ww_srNC
                 (GHC.Types.:
                    @ (Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                    (case Engine.Model.ModelLoader.$wreadObjVecLineB
                            ww8_arqa ww9_arqb ww10_arqc ww11_arqd
                     of _ { (# ww13_srOT, ww14_srOU, ww15_srOV #) ->
                     Engine.Core.Vec.Vec3
                       @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                       ww13_srOT
                       ww14_srOU
                       ww15_srOV
                     })
                    (GHC.Types.[]
                       @ (Engine.Core.Vec.Vec3
                            Graphics.Rendering.OpenGL.Raw.Types.GLfloat))))
              ww1_srND
              ww2_srNE
              ww3_srNF
              ipv2_X3Y8
        }
        }
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 w_srNz ipv_a3Ui
        of _ { (# ipv2_X40H, _ #) ->
        (# ipv2_X40H, (ww_srNC, ww1_srND, ww2_srNE, ww3_srNF) #)
        }
    }
    }
end Rec }

Engine.Model.ModelLoader.loadObjFast1 [InlPrag=INLINE[0]]
  :: GHC.IO.Handle.Types.Handle
     -> ([Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
         [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
         [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
         [Engine.Core.Vec.Vec3
            (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ([Engine.Core.Vec.Vec3
               Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
            [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
            [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
            [Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) #)
[GblId,
 Arity=3,
 Str=DmdType SU(LLLL)L,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wa, TopLvl=True,
         Arity=3, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srNz [Occ=Once] :: GHC.IO.Handle.Types.Handle)
                 (w1_srNA [Occ=Once!]
                    :: ([Engine.Core.Vec.Vec3
                           Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                        [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                        [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                        [Engine.Core.Vec.Vec3
                           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]))
                 (w2_srNH [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1_srNA
                 of _
                 { (ww_srNC [Occ=Once], ww1_srND [Occ=Once], ww2_srNE [Occ=Once], ww3_srNF [Occ=Once]) ->
                 Engine.Model.ModelLoader.$wa
                   w_srNz ww_srNC ww1_srND ww2_srNE ww3_srNF w2_srNH
                 }}]
Engine.Model.ModelLoader.loadObjFast1 =
  \ (w_srNz :: GHC.IO.Handle.Types.Handle)
    (w1_srNA
       :: ([Engine.Core.Vec.Vec3
              Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
           [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
           [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
           [Engine.Core.Vec.Vec3
              (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]))
    (w2_srNH :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w1_srNA of _ { (ww_srNC, ww1_srND, ww2_srNE, ww3_srNF) ->
    Engine.Model.ModelLoader.$wa
      w_srNz ww_srNC ww1_srND ww2_srNE ww3_srNF w2_srNH
    }

Engine.Model.ModelLoader.loadObjFast
  :: GHC.IO.Handle.Types.Handle
     -> ([Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
         [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
         [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
         [Engine.Core.Vec.Vec3
            (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
     -> GHC.Types.IO
          ([Engine.Core.Vec.Vec3
              Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
           [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
           [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
           [Engine.Core.Vec.Vec3
              (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
[GblId,
 Arity=3,
 Str=DmdType SU(LLLL)L,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Model.ModelLoader.loadObjFast1
               `cast` (<GHC.IO.Handle.Types.Handle>
                       -> <([Engine.Core.Vec.Vec3
                               Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                            [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                            [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                            [Engine.Core.Vec.Vec3
                               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])>
                       -> Sym
                            <(GHC.Types.NTCo:IO
                                <([Engine.Core.Vec.Vec3
                                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                  [Engine.Core.Vec.Vec3
                                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                  [Engine.Core.Vec.Vec2
                                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                  [Engine.Core.Vec.Vec3
                                     (Data.Maybe.Maybe
                                        Graphics.Rendering.OpenGL.Raw.Types.GLuint)])>)>
                       :: (GHC.IO.Handle.Types.Handle
                           -> ([Engine.Core.Vec.Vec3
                                  Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                               [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                               [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                               [Engine.Core.Vec.Vec3
                                  (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 ([Engine.Core.Vec.Vec3
                                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                  [Engine.Core.Vec.Vec3
                                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                  [Engine.Core.Vec.Vec2
                                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                  [Engine.Core.Vec.Vec3
                                     (Data.Maybe.Maybe
                                        Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) #))
                            ~#
                          (GHC.IO.Handle.Types.Handle
                           -> ([Engine.Core.Vec.Vec3
                                  Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                               [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                               [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                               [Engine.Core.Vec.Vec3
                                  (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
                           -> GHC.Types.IO
                                ([Engine.Core.Vec.Vec3
                                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                 [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                 [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                                 [Engine.Core.Vec.Vec3
                                    (Data.Maybe.Maybe
                                       Graphics.Rendering.OpenGL.Raw.Types.GLuint)])))}]
Engine.Model.ModelLoader.loadObjFast =
  Engine.Model.ModelLoader.loadObjFast1
  `cast` (<GHC.IO.Handle.Types.Handle>
          -> <([Engine.Core.Vec.Vec3
                  Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
               [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
               [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
               [Engine.Core.Vec.Vec3
                  (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <([Engine.Core.Vec.Vec3
                        Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                     [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                     [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                     [Engine.Core.Vec.Vec3
                        (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])>)>
          :: (GHC.IO.Handle.Types.Handle
              -> ([Engine.Core.Vec.Vec3
                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                  [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                  [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                  [Engine.Core.Vec.Vec3
                     (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    ([Engine.Core.Vec.Vec3
                        Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                     [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                     [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                     [Engine.Core.Vec.Vec3
                        (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]) #))
               ~#
             (GHC.IO.Handle.Types.Handle
              -> ([Engine.Core.Vec.Vec3
                     Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                  [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                  [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                  [Engine.Core.Vec.Vec3
                     (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
              -> GHC.Types.IO
                   ([Engine.Core.Vec.Vec3
                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                    [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                    [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
                    [Engine.Core.Vec.Vec3
                       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])))

Rec {
Engine.Model.ModelLoader.getThem3 [Occ=LoopBreaker]
  :: [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> [Engine.Core.Vec.Vec3
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.ModelLoader.getThem3 =
  \ (ds_dqwk
       :: [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint])
    (values_aq9S
       :: [Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case ds_dqwk of _ {
      [] ->
        GHC.Types.[]
          @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat);
      : ds1_dqwl indices_aq9R ->
        case ds1_dqwl of _ {
          Data.Maybe.Nothing ->
            GHC.Types.:
              @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
              (Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
              (Engine.Model.ModelLoader.getThem3 indices_aq9R values_aq9S);
          Data.Maybe.Just index_aq9Q ->
            case index_aq9Q
                 `cast` (<Foreign.C.Types.NTCo:CUInt>
                         :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
            of _ { GHC.Word.W32# x#_aqUt ->
            let {
              n0_ac7u [Dmd=Just L] :: GHC.Prim.Int#
              [LclId, Str=DmdType]
              n0_ac7u =
                GHC.Prim.word2Int#
                  (GHC.Prim.narrow32Word#
                     (GHC.Prim.minusWord# x#_aqUt (__word 1))) } in
            case GHC.Prim.<# n0_ac7u 0 of _ {
              GHC.Types.False ->
                case GHC.List.!!_sub
                       @ (Engine.Core.Vec.Vec3
                            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                       values_aq9S
                       n0_ac7u
                of _ { Engine.Core.Vec.Vec3 x_a9kS y_a9kT z_a9kU ->
                GHC.Types.:
                  @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                  (Data.Maybe.Just
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat x_a9kS)
                  (GHC.Types.:
                     @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                     (Data.Maybe.Just
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat y_a9kT)
                     (GHC.Types.:
                        @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                        (Data.Maybe.Just
                           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat z_a9kU)
                        (Engine.Model.ModelLoader.getThem3 indices_aq9R values_aq9S)))
                };
              GHC.Types.True -> case GHC.List.!!1 of wild4_00 { }
            }
            }
        }
    }
end Rec }

Rec {
Engine.Model.ModelLoader.getThem2 [Occ=LoopBreaker]
  :: [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint]
     -> [Engine.Core.Vec.Vec2
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.ModelLoader.getThem2 =
  \ (ds_dqwe
       :: [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint])
    (values_aq9X
       :: [Engine.Core.Vec.Vec2
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case ds_dqwe of _ {
      [] ->
        GHC.Types.[]
          @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat);
      : ds1_dqwf indices_aq9W ->
        case ds1_dqwf of _ {
          Data.Maybe.Nothing ->
            GHC.Types.:
              @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
              (Data.Maybe.Nothing @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
              (Engine.Model.ModelLoader.getThem2 indices_aq9W values_aq9X);
          Data.Maybe.Just index_aq9V ->
            case index_aq9V
                 `cast` (<Foreign.C.Types.NTCo:CUInt>
                         :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
            of _ { GHC.Word.W32# x#_aqUt ->
            let {
              n0_ac7u [Dmd=Just L] :: GHC.Prim.Int#
              [LclId, Str=DmdType]
              n0_ac7u =
                GHC.Prim.word2Int#
                  (GHC.Prim.narrow32Word#
                     (GHC.Prim.minusWord# x#_aqUt (__word 1))) } in
            case GHC.Prim.<# n0_ac7u 0 of _ {
              GHC.Types.False ->
                case GHC.List.!!_sub
                       @ (Engine.Core.Vec.Vec2
                            Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                       values_aq9X
                       n0_ac7u
                of _ { Engine.Core.Vec.Vec2 x_a9kV y_a9kW ->
                GHC.Types.:
                  @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                  (Data.Maybe.Just
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat x_a9kV)
                  (GHC.Types.:
                     @ (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                     (Data.Maybe.Just
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat y_a9kW)
                     (Engine.Model.ModelLoader.getThem2 indices_aq9W values_aq9X))
                };
              GHC.Types.True -> case GHC.List.!!1 of wild4_00 { }
            }
            }
        }
    }
end Rec }

Engine.Model.ModelLoader.$wpackObj
  :: [Engine.Core.Vec.Vec3
        (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
     -> [Engine.Core.Vec.Vec3
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Engine.Core.Vec.Vec2
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Engine.Core.Vec.Vec3
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> (# [Data.Maybe.Maybe
              Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
           [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat],
           [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #)
[GblId,
 Arity=4,
 Str=DmdType SLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0] 180 40}]
Engine.Model.ModelLoader.$wpackObj =
  \ (w_srNN
       :: [Engine.Core.Vec.Vec3
             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
    (w1_srNO
       :: [Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (w2_srNP
       :: [Engine.Core.Vec.Vec2
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (w3_srNQ
       :: [Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case Engine.Model.ModelLoader.getThem3
           (Engine.Model.ModelLoader.faceVertIndices w_srNN) w1_srNO
    of tpl_X6 { __DEFAULT ->
    case Engine.Model.ModelLoader.getThem2
           (Engine.Model.ModelLoader.faceTexIndices w_srNN) w2_srNP
    of tpl1_X8 { __DEFAULT ->
    case Engine.Model.ModelLoader.getThem3
           (Engine.Model.ModelLoader.faceNormIndices w_srNN) w3_srNQ
    of tpl2_Xa { __DEFAULT ->
    (# tpl_X6, tpl1_X8, tpl2_Xa #)
    }
    }
    }

Engine.Model.ModelLoader.packObj [InlPrag=INLINE[0]]
  :: [Engine.Core.Vec.Vec3
        (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
     -> [Engine.Core.Vec.Vec3
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Engine.Core.Vec.Vec2
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> [Engine.Core.Vec.Vec3
           Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
     -> Engine.Core.Vec.Vec3
          [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=4,
 Str=DmdType SLLLm,
 Unf=Unf{Src=Worker=Engine.Model.ModelLoader.$wpackObj, TopLvl=True,
         Arity=4, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_srNN [Occ=Once]
                    :: [Engine.Core.Vec.Vec3
                          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
                 (w1_srNO [Occ=Once]
                    :: [Engine.Core.Vec.Vec3
                          Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
                 (w2_srNP [Occ=Once]
                    :: [Engine.Core.Vec.Vec2
                          Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
                 (w3_srNQ [Occ=Once]
                    :: [Engine.Core.Vec.Vec3
                          Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
                 case Engine.Model.ModelLoader.$wpackObj
                        w_srNN w1_srNO w2_srNP w3_srNQ
                 of _
                 { (# ww1_srPm [Occ=Once], ww2_srPn [Occ=Once], ww3_srPo [Occ=Once] #) ->
                 Engine.Core.Vec.Vec3
                   @ [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                   ww1_srPm
                   ww2_srPn
                   ww3_srPo
                 }}]
Engine.Model.ModelLoader.packObj =
  \ (w_srNN
       :: [Engine.Core.Vec.Vec3
             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)])
    (w1_srNO
       :: [Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (w2_srNP
       :: [Engine.Core.Vec.Vec2
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
    (w3_srNQ
       :: [Engine.Core.Vec.Vec3
             Graphics.Rendering.OpenGL.Raw.Types.GLfloat]) ->
    case Engine.Model.ModelLoader.$wpackObj
           w_srNN w1_srNO w2_srNP w3_srNQ
    of _ { (# ww1_srPm, ww2_srPn, ww3_srPo #) ->
    Engine.Core.Vec.Vec3
      @ [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
      ww1_srPm
      ww2_srPn
      ww3_srPo
    }

Engine.Model.ModelLoader.loadObjF1
  :: GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.Vec.Vec3
             [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 190 30}]
Engine.Model.ModelLoader.loadObjF1 =
  \ (file_aq8f :: GHC.IO.FilePath)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.FD.openFile1
           file_aq8f GHC.IO.IOMode.ReadMode eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Engine.Model.ModelLoader.$wa
           ipv1_a3Uj
           (GHC.Types.[]
              @ (Engine.Core.Vec.Vec3
                   Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
           (GHC.Types.[]
              @ (Engine.Core.Vec.Vec3
                   Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
           (GHC.Types.[]
              @ (Engine.Core.Vec.Vec2
                   Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
           (GHC.Types.[]
              @ (Engine.Core.Vec.Vec3
                   (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)))
           ipv_a3Ui
    of _ { (# ipv2_X3Y3, ipv3_X3Y5 #) ->
    case ipv3_X3Y5
    of _ { (verts_aq8h, norms_aq8i, texs_aq8j, faces_aq8k) ->
    (# ipv2_X3Y3,
       Engine.Model.ModelLoader.packObj
         faces_aq8k verts_aq8h texs_aq8j norms_aq8i #)
    }
    }
    }

Engine.Model.ModelLoader.loadObjF
  :: GHC.IO.FilePath
     -> GHC.Types.IO
          (Engine.Core.Vec.Vec3
             [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjF =
  Engine.Model.ModelLoader.loadObjF1
  `cast` (<GHC.IO.FilePath>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <Engine.Core.Vec.Vec3
                      [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>)>
          :: (GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.Vec.Vec3
                      [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #))
               ~#
             (GHC.IO.FilePath
              -> GHC.Types.IO
                   (Engine.Core.Vec.Vec3
                      [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat])))

Engine.Model.ModelLoader.readOBJLine5 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.readOBJLine5 =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.ModelLoader.rawObjLine3
    (GHC.Types.[] @ GHC.Types.Char)

Engine.Model.ModelLoader.readOBJLine4
  :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Model.ModelLoader.readOBJLine4 =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char
    GHC.Classes.$fEqChar
    Engine.Model.ModelLoader.readOBJLine5

Rec {
Engine.Model.ModelLoader.readOBJLine_go [Occ=LoopBreaker]
  :: [(Foreign.C.Types.CFloat, GHC.Base.String)]
     -> [(Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)]
[GblId, Arity=1, Str=DmdType S]
Engine.Model.ModelLoader.readOBJLine_go =
  \ (ds_aoGU :: [(Foreign.C.Types.CFloat, GHC.Base.String)]) ->
    case ds_aoGU of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String);
      : y_aoGY ys_aoGZ ->
        case y_aoGY of _ { (a1_aoH3, s'_aoH4) ->
        let {
          lvl24_aoFm
            :: Text.ParserCombinators.ReadP.P
                 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId, Str=DmdType]
          lvl24_aoFm =
            Text.ParserCombinators.ReadP.Result
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              a1_aoH3
              (Text.ParserCombinators.ReadP.Fail
                 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat) } in
        let {
          k_aoFn
            :: ()
               -> Text.ParserCombinators.ReadP.P
                    Graphics.Rendering.OpenGL.Raw.Types.GLfloat
          [LclId,
           Arity=1,
           Str=DmdType A,
           Unf=Unf{Src=InlineStable, TopLvl=False, Arity=1, Value=True,
                   ConLike=True, WorkFree=True, Expandable=True,
                   Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
                   Tmpl= \ _ ->
                           Text.ParserCombinators.ReadP.Result
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             a1_aoH3
                             (Text.ParserCombinators.ReadP.Fail
                                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)}]
          k_aoFn = \ _ -> lvl24_aoFm } in
        GHC.Base.++
          @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat, GHC.Base.String)
          (Text.ParserCombinators.ReadP.run
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (Text.ParserCombinators.ReadP.Look
                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                (\ (a2_aoFp :: GHC.Base.String) ->
                   ((Text.ParserCombinators.ReadP.skipSpaces_skip a2_aoFp)
                    `cast` (<Text.ParserCombinators.ReadP.NTCo:ReadP <()>>
                            :: Text.ParserCombinators.ReadP.ReadP ()
                                 ~#
                               (forall b_aoFj.
                                (() -> Text.ParserCombinators.ReadP.P b_aoFj)
                                -> Text.ParserCombinators.ReadP.P b_aoFj)))
                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat k_aoFn))
             s'_aoH4)
          (Engine.Model.ModelLoader.readOBJLine_go ys_aoGZ)
        }
    }
end Rec }

Engine.Model.ModelLoader.readOBJLine3
  :: GHC.Base.String
     -> Text.ParserCombinators.ReadP.P
          Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 30}]
Engine.Model.ModelLoader.readOBJLine3 =
  \ (s_aoH6 :: GHC.Base.String) ->
    case Engine.Model.ModelLoader.readOBJLine_go
           ((Text.ParserCombinators.ReadP.run
               @ GHC.Types.Float Engine.Model.ModelLoader.readAll6 s_aoH6)
            `cast` ([(UnsafeCo GHC.Types.Float Foreign.C.Types.CFloat,
                      <[GHC.Types.Char]>)]
                    :: [(GHC.Types.Float, [GHC.Types.Char])]
                         ~#
                       [(Foreign.C.Types.CFloat, [GHC.Types.Char])]))
    of wild_aoH7 {
      [] ->
        Text.ParserCombinators.ReadP.Fail
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat;
      : ipv_aoHa ipv1_aoHb ->
        Text.ParserCombinators.ReadP.Final
          @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat wild_aoH7
    }

Engine.Model.ModelLoader.readOBJLine2
  :: Text.ParserCombinators.ReadP.P
       Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.readOBJLine2 =
  Text.ParserCombinators.ReadP.Look
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    Engine.Model.ModelLoader.readOBJLine3

Engine.Model.ModelLoader.readOBJLine1
  :: GHC.Base.String -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 90 0}]
Engine.Model.ModelLoader.readOBJLine1 =
  \ (s_aogb :: GHC.Base.String) ->
    case Text.Read.readEither6
           @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
           (Text.ParserCombinators.ReadP.run
              @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
              Engine.Model.ModelLoader.readOBJLine2
              s_aogb)
    of _ {
      [] -> Engine.Model.ModelLoader.readAll3;
      : x_aoEZ ds_aoF0 ->
        case ds_aoF0 of _ {
          [] -> x_aoEZ;
          : ipv_aoF7 ipv1_aoF8 -> Engine.Model.ModelLoader.readAll2
        }
    }

Engine.Model.ModelLoader.readOBJLine
  :: GHC.Base.String -> [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 100 0}]
Engine.Model.ModelLoader.readOBJLine =
  \ (x_a3uM :: GHC.Base.String) ->
    case GHC.List.filter
           @ [GHC.Types.Char]
           Engine.Model.ModelLoader.rawObjLine4
           (Engine.Model.ModelLoader.readOBJLine4 x_a3uM)
    of _ {
      [] -> case GHC.List.tail1 of wild1_00 { };
      : _ xs_aoim ->
        GHC.Base.map
          @ [GHC.Types.Char]
          @ Foreign.C.Types.CFloat
          Engine.Model.ModelLoader.readOBJLine1
          xs_aoim
    }

Engine.Model.ModelLoader.rawObjLine2 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.rawObjLine2 =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.ModelLoader.rawObjLine3
    (GHC.Types.[] @ GHC.Types.Char)

Engine.Model.ModelLoader.rawObjLine1
  :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Model.ModelLoader.rawObjLine1 =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char
    GHC.Classes.$fEqChar
    Engine.Model.ModelLoader.rawObjLine2

Engine.Model.ModelLoader.rawObjLine
  :: GHC.Base.String -> [GHC.Base.String]
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 70 0}]
Engine.Model.ModelLoader.rawObjLine =
  \ (x_a3uM :: GHC.Base.String) ->
    case GHC.List.filter
           @ [GHC.Types.Char]
           Engine.Model.ModelLoader.rawObjLine4
           (Engine.Model.ModelLoader.rawObjLine1 x_a3uM)
    of _ {
      [] -> GHC.List.tail1 @ GHC.Base.String;
      : _ xs_aoim -> xs_aoim
    }

Engine.Model.ModelLoader.findMaterial
  :: GHC.Base.String
     -> [Engine.Model.Material.Material]
     -> Engine.Model.Material.Material
[GblId,
 Arity=2,
 Str=DmdType LS,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 100 0}]
Engine.Model.ModelLoader.findMaterial =
  \ (name_aq9s :: GHC.Base.String)
    (library_aq9t :: [Engine.Model.Material.Material]) ->
    case GHC.List.filter
           @ Engine.Model.Material.Material
           (\ (x_aq9u :: Engine.Model.Material.Material) ->
              case x_aq9u
              of _
              { Engine.Model.Material.Material ds1_doev
                                               ds2_doew
                                               ds3_doex
                                               ds4_doey
                                               ds5_doez
                                               ds6_doeA ->
              GHC.Base.eqString ds1_doev name_aq9s
              })
           library_aq9t
    of _ {
      [] -> GHC.List.badHead @ Engine.Model.Material.Material;
      : x_ac7a _ -> x_ac7a
    }

lvl19_rsnF :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl19_rsnF = GHC.CString.unpackCString# "usemtl "

Rec {
Engine.Model.ModelLoader.loadObjMatsRec1 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> [Engine.Model.Material.Material]
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [(Engine.Model.Material.Material, GHC.Types.Int)] #)
[GblId, Arity=4, Str=DmdType SLLL]
Engine.Model.ModelLoader.loadObjMatsRec1 =
  \ (handle_aq9k :: GHC.IO.Handle.Types.Handle)
    (mats_aq9l :: [Engine.Model.Material.Material])
    (i_aq9m :: GHC.Types.Int)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           handle_aq9k
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ GHC.Base.String
               GHC.IO.Handle.Text.hGetLine3
               handle_aq9k
               (GHC.IO.Handle.Text.hGetLine2
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <GHC.Base.String>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Base.String)))
               ipv_a3Ui
        of _ { (# ipv2_X3Yj, ipv3_X3Yl #) ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char GHC.Classes.$fEqChar lvl19_rsnF ipv3_X3Yl
        of _ {
          GHC.Types.False ->
            Engine.Model.ModelLoader.loadObjMatsRec1
              handle_aq9k
              mats_aq9l
              (case Data.List.isPrefixOf
                      @ GHC.Types.Char GHC.Classes.$fEqChar cs3_rsnB ipv3_X3Yl
               of _ {
                 GHC.Types.False -> i_aq9m;
                 GHC.Types.True ->
                   case i_aq9m of _ { GHC.Types.I# x_a3s5 ->
                   GHC.Types.I# (GHC.Prim.+# x_a3s5 1)
                   }
               })
              ipv2_X3Yj;
          GHC.Types.True ->
            case Engine.Model.ModelLoader.loadObjMatsRec1
                   handle_aq9k mats_aq9l i_aq9m ipv2_X3Yj
            of _ { (# ipv4_X41e, ipv5_X41g #) ->
            (# ipv4_X41e,
               GHC.Types.:
                 @ (Engine.Model.Material.Material, GHC.Types.Int)
                 (let {
                    name_aq9s [Dmd=Just L] :: GHC.Base.String
                    [LclId, Str=DmdType]
                    name_aq9s =
                      case GHC.List.filter
                             @ [GHC.Types.Char]
                             Engine.Model.ModelLoader.rawObjLine4
                             (Engine.Model.ModelLoader.rawObjLine1 ipv3_X3Yl)
                      of _ {
                        [] -> case GHC.List.tail1 of wild3_00 { };
                        : _ xs_aoim ->
                          case xs_aoim of _ {
                            [] -> GHC.List.badHead @ GHC.Base.String;
                            : x_ac7a ds5_ac7b -> x_ac7a
                          }
                      } } in
                  case GHC.List.filter
                         @ Engine.Model.Material.Material
                         (\ (x_aq9u :: Engine.Model.Material.Material) ->
                            case x_aq9u
                            of _
                            { Engine.Model.Material.Material ds4_doev
                                                             ds5_doew
                                                             ds6_doex
                                                             ds7_doey
                                                             ds8_doez
                                                             ds9_doeA ->
                            GHC.Base.eqString ds4_doev name_aq9s
                            })
                         mats_aq9l
                  of _ {
                    [] -> GHC.List.badHead @ Engine.Model.Material.Material;
                    : x_ac7a _ -> x_ac7a
                  },
                  i_aq9m)
                 ipv5_X41g #)
            }
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 handle_aq9k ipv_a3Ui
        of _ { (# ipv2_X41e, _ #) ->
        (# ipv2_X41e,
           GHC.Types.[] @ (Engine.Model.Material.Material, GHC.Types.Int) #)
        }
    }
    }
end Rec }

Engine.Model.ModelLoader.loadObjMatsRec
  :: GHC.IO.Handle.Types.Handle
     -> [Engine.Model.Material.Material]
     -> GHC.Types.Int
     -> GHC.Types.IO [(Engine.Model.Material.Material, GHC.Types.Int)]
[GblId,
 Arity=4,
 Str=DmdType SLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjMatsRec =
  Engine.Model.ModelLoader.loadObjMatsRec1
  `cast` (<GHC.IO.Handle.Types.Handle>
          -> <[Engine.Model.Material.Material]>
          -> <GHC.Types.Int>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <[(Engine.Model.Material.Material, GHC.Types.Int)]>)>
          :: (GHC.IO.Handle.Types.Handle
              -> [Engine.Model.Material.Material]
              -> GHC.Types.Int
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [(Engine.Model.Material.Material, GHC.Types.Int)] #))
               ~#
             (GHC.IO.Handle.Types.Handle
              -> [Engine.Model.Material.Material]
              -> GHC.Types.Int
              -> GHC.Types.IO [(Engine.Model.Material.Material, GHC.Types.Int)]))

Rec {
Engine.Model.ModelLoader.listOfMats1 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> [Engine.Model.Material.Material]
     -> Engine.Model.Material.Material
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Model.Material.Material] #)
[GblId, Arity=4, Str=DmdType SLLL]
Engine.Model.ModelLoader.listOfMats1 =
  \ (handle_aq9d :: GHC.IO.Handle.Types.Handle)
    (library_aq9e :: [Engine.Model.Material.Material])
    (currentMat_aq9f :: Engine.Model.Material.Material)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           handle_aq9d
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ GHC.Base.String
               GHC.IO.Handle.Text.hGetLine3
               handle_aq9d
               (GHC.IO.Handle.Text.hGetLine2
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <GHC.Base.String>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Base.String)))
               ipv_a3Ui
        of _ { (# ipv2_X3Yn, ipv3_X3Yp #) ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char GHC.Classes.$fEqChar lvl19_rsnF ipv3_X3Yp
        of _ {
          GHC.Types.False ->
            case Data.List.isPrefixOf
                   @ GHC.Types.Char GHC.Classes.$fEqChar cs3_rsnB ipv3_X3Yp
            of _ {
              GHC.Types.False ->
                Engine.Model.ModelLoader.listOfMats1
                  handle_aq9d library_aq9e currentMat_aq9f ipv2_X3Yn;
              GHC.Types.True ->
                case Engine.Model.ModelLoader.listOfMats1
                       handle_aq9d library_aq9e currentMat_aq9f ipv2_X3Yn
                of _ { (# ipv4_X41m, ipv5_X41o #) ->
                (# ipv4_X41m,
                   let {
                     lvl24_ssb8 :: [Engine.Model.Material.Material]
                     [LclId]
                     lvl24_ssb8 =
                       GHC.Types.:
                         @ Engine.Model.Material.Material currentMat_aq9f ipv5_X41o } in
                   letrec {
                     xs_a3SH [Occ=LoopBreaker]
                       :: GHC.Prim.Int# -> [Engine.Model.Material.Material]
                     [LclId, Arity=1, Str=DmdType L]
                     xs_a3SH =
                       \ (m_a3SO :: GHC.Prim.Int#) ->
                         case GHC.Prim.<=# m_a3SO 1 of _ {
                           GHC.Types.False ->
                             GHC.Types.:
                               @ Engine.Model.Material.Material
                               currentMat_aq9f
                               (xs_a3SH (GHC.Prim.-# m_a3SO 1));
                           GHC.Types.True -> lvl24_ssb8
                         }; } in
                   xs_a3SH 3 #)
                }
            };
          GHC.Types.True ->
            Engine.Model.ModelLoader.listOfMats1
              handle_aq9d
              library_aq9e
              (let {
                 name_aq9s [Dmd=Just L] :: GHC.Base.String
                 [LclId, Str=DmdType]
                 name_aq9s =
                   case GHC.List.filter
                          @ [GHC.Types.Char]
                          Engine.Model.ModelLoader.rawObjLine4
                          (Engine.Model.ModelLoader.rawObjLine1 ipv3_X3Yp)
                   of _ {
                     [] -> case GHC.List.tail1 of wild3_00 { };
                     : _ xs_aoim ->
                       case xs_aoim of _ {
                         [] -> GHC.List.badHead @ GHC.Base.String;
                         : x_ac7a ds4_ac7b -> x_ac7a
                       }
                   } } in
               case GHC.List.filter
                      @ Engine.Model.Material.Material
                      (\ (x_aq9u :: Engine.Model.Material.Material) ->
                         case x_aq9u
                         of _
                         { Engine.Model.Material.Material ds3_doev
                                                          ds4_doew
                                                          ds5_doex
                                                          ds6_doey
                                                          ds7_doez
                                                          ds8_doeA ->
                         GHC.Base.eqString ds3_doev name_aq9s
                         })
                      library_aq9e
               of _ {
                 [] -> GHC.List.badHead @ Engine.Model.Material.Material;
                 : x_ac7a _ -> x_ac7a
               })
              ipv2_X3Yn
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 handle_aq9d ipv_a3Ui
        of _ { (# ipv2_X41o, _ #) ->
        (# ipv2_X41o, GHC.Types.[] @ Engine.Model.Material.Material #)
        }
    }
    }
end Rec }

Engine.Model.ModelLoader.listOfMats
  :: GHC.IO.Handle.Types.Handle
     -> [Engine.Model.Material.Material]
     -> Engine.Model.Material.Material
     -> GHC.Types.IO [Engine.Model.Material.Material]
[GblId,
 Arity=4,
 Str=DmdType SLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.listOfMats =
  Engine.Model.ModelLoader.listOfMats1
  `cast` (<GHC.IO.Handle.Types.Handle>
          -> <[Engine.Model.Material.Material]>
          -> <Engine.Model.Material.Material>
          -> Sym <(GHC.Types.NTCo:IO <[Engine.Model.Material.Material]>)>
          :: (GHC.IO.Handle.Types.Handle
              -> [Engine.Model.Material.Material]
              -> Engine.Model.Material.Material
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Model.Material.Material] #))
               ~#
             (GHC.IO.Handle.Types.Handle
              -> [Engine.Model.Material.Material]
              -> Engine.Model.Material.Material
              -> GHC.Types.IO [Engine.Model.Material.Material]))

lvl20_rsnG :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl20_rsnG = GHC.CString.unpackCString# "mtllib "

Rec {
Engine.Model.ModelLoader.loadObjMaterialLib1 [Occ=LoopBreaker]
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Model.Material.Material] #)
[GblId, Arity=3, Str=DmdType LSL]
Engine.Model.ModelLoader.loadObjMaterialLib1 =
  \ (wStateRef_aq93 :: GHC.IORef.IORef Engine.Core.World.WorldState)
    (handle_aq94 :: GHC.IO.Handle.Types.Handle)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           handle_aq94
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ GHC.Base.String
               GHC.IO.Handle.Text.hGetLine3
               handle_aq94
               (GHC.IO.Handle.Text.hGetLine2
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <GHC.Base.String>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Base.String)))
               ipv_a3Ui
        of _ { (# ipv2_X3Yp, ipv3_X3Yr #) ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char GHC.Classes.$fEqChar lvl20_rsnG ipv3_X3Yr
        of _ {
          GHC.Types.False ->
            Engine.Model.ModelLoader.loadObjMaterialLib1
              wStateRef_aq93 handle_aq94 ipv2_X3Yp;
          GHC.Types.True ->
            case GHC.IO.Handle.FD.openFile1
                   (case GHC.List.filter
                           @ [GHC.Types.Char]
                           Engine.Model.ModelLoader.rawObjLine4
                           (Engine.Model.ModelLoader.rawObjLine1 ipv3_X3Yr)
                    of _ {
                      [] -> case GHC.List.tail1 of wild3_00 { };
                      : _ xs_aoim ->
                        case xs_aoim of _ {
                          [] -> GHC.List.badHead @ GHC.IO.FilePath;
                          : x_ac7a ds4_ac7b -> x_ac7a
                        }
                    })
                   GHC.IO.IOMode.ReadMode
                   ipv2_X3Yp
            of _ { (# ipv4_X3Yv, ipv5_X3Yx #) ->
            Engine.Model.Material.loadMtlFile2
              wStateRef_aq93 ipv5_X3Yx ipv4_X3Yv
            }
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 handle_aq94 ipv_a3Ui
        of _ { (# ipv2_X41v, _ #) ->
        (# ipv2_X41v, GHC.Types.[] @ Engine.Model.Material.Material #)
        }
    }
    }
end Rec }

Engine.Model.ModelLoader.loadObjMaterialLib
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.Handle.Types.Handle
     -> GHC.Types.IO [Engine.Model.Material.Material]
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjMaterialLib =
  Engine.Model.ModelLoader.loadObjMaterialLib1
  `cast` (<GHC.IORef.IORef Engine.Core.World.WorldState>
          -> <GHC.IO.Handle.Types.Handle>
          -> Sym <(GHC.Types.NTCo:IO <[Engine.Model.Material.Material]>)>
          :: (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.Handle.Types.Handle
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Model.Material.Material] #))
               ~#
             (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.Handle.Types.Handle
              -> GHC.Types.IO [Engine.Model.Material.Material]))

Engine.Model.ModelLoader.loadObjMaterials1
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           ([Engine.Model.Material.Material],
            [Engine.Model.Material.Material]) #)
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 220 30}]
Engine.Model.ModelLoader.loadObjMaterials1 =
  \ (wStateRef_aq97 :: GHC.IORef.IORef Engine.Core.World.WorldState)
    (file_aq98 :: GHC.IO.FilePath)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.FD.openFile1
           file_aq98 GHC.IO.IOMode.ReadMode eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Engine.Model.ModelLoader.loadObjMaterialLib1
           wStateRef_aq97 ipv1_a3Uj ipv_a3Ui
    of _ { (# ipv2_X41j, ipv3_X41l #) ->
    case GHC.IO.Handle.FD.openFile1
           file_aq98 GHC.IO.IOMode.ReadMode ipv2_X41j
    of _ { (# ipv4_X3Yt, ipv5_X3Yv #) ->
    case Engine.Model.ModelLoader.listOfMats1
           ipv5_X3Yv ipv3_X41l Engine.Model.Material.emptyMaterial ipv4_X3Yt
    of _ { (# ipv6_X41n, ipv7_X41p #) ->
    (# ipv6_X41n, (ipv7_X41p, ipv3_X41l) #)
    }
    }
    }
    }

Engine.Model.ModelLoader.loadObjMaterials
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.FilePath
     -> GHC.Types.IO
          ([Engine.Model.Material.Material],
           [Engine.Model.Material.Material])
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjMaterials =
  Engine.Model.ModelLoader.loadObjMaterials1
  `cast` (<GHC.IORef.IORef Engine.Core.World.WorldState>
          -> <GHC.IO.FilePath>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <([Engine.Model.Material.Material],
                     [Engine.Model.Material.Material])>)>
          :: (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    ([Engine.Model.Material.Material],
                     [Engine.Model.Material.Material]) #))
               ~#
             (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.FilePath
              -> GHC.Types.IO
                   ([Engine.Model.Material.Material],
                    [Engine.Model.Material.Material])))

Rec {
Engine.Model.ModelLoader.loadObj5 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Core.Vec.Vec3
              Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.ModelLoader.loadObj5 =
  \ (handle_aq8Y :: GHC.IO.Handle.Types.Handle)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           handle_aq8Y
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ GHC.Base.String
               GHC.IO.Handle.Text.hGetLine3
               handle_aq8Y
               (GHC.IO.Handle.Text.hGetLine2
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <GHC.Base.String>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Base.String)))
               ipv_a3Ui
        of _ { (# ipv2_X3Yt, ipv3_X3Yv #) ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char GHC.Classes.$fEqChar cs_rsns ipv3_X3Yv
        of _ {
          GHC.Types.False ->
            Engine.Model.ModelLoader.loadObj5 handle_aq8Y ipv2_X3Yt;
          GHC.Types.True ->
            case Engine.Model.ModelLoader.loadObj5 handle_aq8Y ipv2_X3Yt
            of _ { (# ipv4_X41w, ipv5_X41y #) ->
            (# ipv4_X41w,
               GHC.Types.:
                 @ (Engine.Core.Vec.Vec3
                      Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (Engine.Model.ModelLoader.readObjVecLine ipv3_X3Yv)
                 ipv5_X41y #)
            }
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 handle_aq8Y ipv_a3Ui
        of _ { (# ipv2_X41y, _ #) ->
        (# ipv2_X41y,
           GHC.Types.[]
             @ (Engine.Core.Vec.Vec3
                  Graphics.Rendering.OpenGL.Raw.Types.GLfloat) #)
        }
    }
    }
end Rec }

Engine.Model.ModelLoader.loadObjVertices
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.IO
          [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjVertices =
  Engine.Model.ModelLoader.loadObj5
  `cast` (<GHC.IO.Handle.Types.Handle>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <[Engine.Core.Vec.Vec3
                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>)>
          :: (GHC.IO.Handle.Types.Handle
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Core.Vec.Vec3
                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #))
               ~#
             (GHC.IO.Handle.Types.Handle
              -> GHC.Types.IO
                   [Engine.Core.Vec.Vec3
                      Graphics.Rendering.OpenGL.Raw.Types.GLfloat]))

Rec {
Engine.Model.ModelLoader.loadObj3 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Core.Vec.Vec2
              Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.ModelLoader.loadObj3 =
  \ (handle_aq8T :: GHC.IO.Handle.Types.Handle)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           handle_aq8T
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ GHC.Base.String
               GHC.IO.Handle.Text.hGetLine3
               handle_aq8T
               (GHC.IO.Handle.Text.hGetLine2
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <GHC.Base.String>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Base.String)))
               ipv_a3Ui
        of _ { (# ipv2_X3Yw, ipv3_X3Yy #) ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char GHC.Classes.$fEqChar cs2_rsny ipv3_X3Yy
        of _ {
          GHC.Types.False ->
            Engine.Model.ModelLoader.loadObj3 handle_aq8T ipv2_X3Yw;
          GHC.Types.True ->
            case Engine.Model.ModelLoader.loadObj3 handle_aq8T ipv2_X3Yw
            of _ { (# ipv4_X41C, ipv5_X41E #) ->
            (# ipv4_X41C,
               GHC.Types.:
                 @ (Engine.Core.Vec.Vec2
                      Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (Engine.Model.ModelLoader.readObjTexLine ipv3_X3Yy)
                 ipv5_X41E #)
            }
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 handle_aq8T ipv_a3Ui
        of _ { (# ipv2_X41E, _ #) ->
        (# ipv2_X41E,
           GHC.Types.[]
             @ (Engine.Core.Vec.Vec2
                  Graphics.Rendering.OpenGL.Raw.Types.GLfloat) #)
        }
    }
    }
end Rec }

Engine.Model.ModelLoader.loadObjTexs
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.IO
          [Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjTexs =
  Engine.Model.ModelLoader.loadObj3
  `cast` (<GHC.IO.Handle.Types.Handle>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <[Engine.Core.Vec.Vec2
                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>)>
          :: (GHC.IO.Handle.Types.Handle
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Core.Vec.Vec2
                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #))
               ~#
             (GHC.IO.Handle.Types.Handle
              -> GHC.Types.IO
                   [Engine.Core.Vec.Vec2
                      Graphics.Rendering.OpenGL.Raw.Types.GLfloat]))

Rec {
Engine.Model.ModelLoader.loadObj4 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Core.Vec.Vec3
              Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.ModelLoader.loadObj4 =
  \ (handle_aq8O :: GHC.IO.Handle.Types.Handle)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           handle_aq8O
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ GHC.Base.String
               GHC.IO.Handle.Text.hGetLine3
               handle_aq8O
               (GHC.IO.Handle.Text.hGetLine2
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <GHC.Base.String>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Base.String)))
               ipv_a3Ui
        of _ { (# ipv2_X3Yz, ipv3_X3YB #) ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char GHC.Classes.$fEqChar cs1_rsnv ipv3_X3YB
        of _ {
          GHC.Types.False ->
            Engine.Model.ModelLoader.loadObj4 handle_aq8O ipv2_X3Yz;
          GHC.Types.True ->
            case Engine.Model.ModelLoader.loadObj4 handle_aq8O ipv2_X3Yz
            of _ { (# ipv4_X41I, ipv5_X41K #) ->
            (# ipv4_X41I,
               GHC.Types.:
                 @ (Engine.Core.Vec.Vec3
                      Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
                 (Engine.Model.ModelLoader.readObjVecLine ipv3_X3YB)
                 ipv5_X41K #)
            }
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 handle_aq8O ipv_a3Ui
        of _ { (# ipv2_X41K, _ #) ->
        (# ipv2_X41K,
           GHC.Types.[]
             @ (Engine.Core.Vec.Vec3
                  Graphics.Rendering.OpenGL.Raw.Types.GLfloat) #)
        }
    }
    }
end Rec }

Engine.Model.ModelLoader.loadObjNormals
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.IO
          [Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjNormals =
  Engine.Model.ModelLoader.loadObj4
  `cast` (<GHC.IO.Handle.Types.Handle>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <[Engine.Core.Vec.Vec3
                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>)>
          :: (GHC.IO.Handle.Types.Handle
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Core.Vec.Vec3
                       Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #))
               ~#
             (GHC.IO.Handle.Types.Handle
              -> GHC.Types.IO
                   [Engine.Core.Vec.Vec3
                      Graphics.Rendering.OpenGL.Raw.Types.GLfloat]))

lvl21_rsnH :: [GHC.Types.Char]
[GblId, Caf=NoCafRefs]
lvl21_rsnH =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.ModelLoader.rawObjLine3
    (GHC.Types.[] @ GHC.Types.Char)

lvl22_rsnI :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId, Str=DmdType]
lvl22_rsnI =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char GHC.Classes.$fEqChar lvl21_rsnH

Rec {
go1_rsnJ
  :: [GHC.Base.String]
     -> [Engine.Core.Vec.Vec3
           (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
[GblId, Arity=1, Str=DmdType S]
go1_rsnJ =
  \ (ds_a3qq :: [GHC.Base.String]) ->
    case ds_a3qq of _ {
      [] ->
        GHC.Types.[]
          @ (Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint));
      : y_a3qv ys_a3qw ->
        GHC.Types.:
          @ (Engine.Core.Vec.Vec3
               (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
          (Engine.Model.ModelLoader.readFaceGroup y_a3qv)
          (go1_rsnJ ys_a3qw)
    }
end Rec }

Rec {
Engine.Model.ModelLoader.loadObj2 [Occ=LoopBreaker]
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Core.Vec.Vec3
              (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)] #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.ModelLoader.loadObj2 =
  \ (handle_aq8I :: GHC.IO.Handle.Types.Handle)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.Internals.wantReadableHandle_1
           @ GHC.Types.Bool
           GHC.IO.Handle.hIsEOF3
           handle_aq8I
           (GHC.IO.Handle.hIsEOF2
            `cast` (<GHC.IO.Handle.Types.Handle__>
                    -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
                    :: (GHC.IO.Handle.Types.Handle__
                        -> GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
                         ~#
                       (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Types.Bool)))
           eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      GHC.Types.False ->
        case GHC.IO.Handle.Internals.wantReadableHandle_1
               @ GHC.Base.String
               GHC.IO.Handle.Text.hGetLine3
               handle_aq8I
               (GHC.IO.Handle.Text.hGetLine2
                `cast` (<GHC.IO.Handle.Types.Handle__>
                        -> Sym <(GHC.Types.NTCo:IO <GHC.Base.String>)>
                        :: (GHC.IO.Handle.Types.Handle__
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #))
                             ~#
                           (GHC.IO.Handle.Types.Handle__ -> GHC.Types.IO GHC.Base.String)))
               ipv_a3Ui
        of _ { (# ipv2_X3YE, ipv3_X3YG #) ->
        case Data.List.isPrefixOf
               @ GHC.Types.Char GHC.Classes.$fEqChar cs3_rsnB ipv3_X3YG
        of _ {
          GHC.Types.False ->
            Engine.Model.ModelLoader.loadObj2 handle_aq8I ipv2_X3YE;
          GHC.Types.True ->
            case Engine.Model.ModelLoader.loadObj2 handle_aq8I ipv2_X3YE
            of _ { (# ipv4_X41U, ipv5_X41W #) ->
            (# ipv4_X41U,
               case GHC.List.filter
                      @ [GHC.Types.Char]
                      Engine.Model.ModelLoader.rawObjLine4
                      (lvl22_rsnI ipv3_X3YG)
               of _ {
                 [] -> case GHC.List.tail1 of wild3_00 { };
                 : _ xs_aoim ->
                   GHC.Base.++
                     @ (Engine.Core.Vec.Vec3
                          (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint))
                     (go1_rsnJ xs_aoim)
                     ipv5_X41W
               } #)
            }
        }
        };
      GHC.Types.True ->
        case GHC.IO.Handle.hClose1 handle_aq8I ipv_a3Ui
        of _ { (# ipv2_X41W, _ #) ->
        (# ipv2_X41W,
           GHC.Types.[]
             @ (Engine.Core.Vec.Vec3
                  (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)) #)
        }
    }
    }
end Rec }

Engine.Model.ModelLoader.loadObjFaces
  :: GHC.IO.Handle.Types.Handle
     -> GHC.Types.IO
          [Engine.Core.Vec.Vec3
             (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjFaces =
  Engine.Model.ModelLoader.loadObj2
  `cast` (<GHC.IO.Handle.Types.Handle>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <[Engine.Core.Vec.Vec3
                       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]>)>
          :: (GHC.IO.Handle.Types.Handle
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Core.Vec.Vec3
                       (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)] #))
               ~#
             (GHC.IO.Handle.Types.Handle
              -> GHC.Types.IO
                   [Engine.Core.Vec.Vec3
                      (Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLuint)]))

Engine.Model.ModelLoader.loadObj1
  :: GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.Vec.Vec3
             [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 410 30}]
Engine.Model.ModelLoader.loadObj1 =
  \ (file_aq8D :: GHC.IO.FilePath)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.IO.Handle.FD.openFile1
           file_aq8D GHC.IO.IOMode.ReadMode eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Engine.Model.ModelLoader.loadObj5 ipv1_a3Uj ipv_a3Ui
    of _ { (# ipv2_X41T, ipv3_X41V #) ->
    case GHC.IO.Handle.FD.openFile1
           file_aq8D GHC.IO.IOMode.ReadMode ipv2_X41T
    of _ { (# ipv4_X41Y, ipv5_X420 #) ->
    case Engine.Model.ModelLoader.loadObj4 ipv5_X420 ipv4_X41Y
    of _ { (# ipv6_X422, ipv7_X424 #) ->
    case GHC.IO.Handle.FD.openFile1
           file_aq8D GHC.IO.IOMode.ReadMode ipv6_X422
    of _ { (# ipv8_X427, ipv9_X429 #) ->
    case Engine.Model.ModelLoader.loadObj3 ipv9_X429 ipv8_X427
    of _ { (# ipv10_X42b, ipv11_X42d #) ->
    case GHC.IO.Handle.FD.openFile1
           file_aq8D GHC.IO.IOMode.ReadMode ipv10_X42b
    of _ { (# ipv12_X42g, ipv13_X42i #) ->
    case Engine.Model.ModelLoader.loadObj2 ipv13_X42i ipv12_X42g
    of _ { (# ipv14_X42k, ipv15_X42m #) ->
    (# ipv14_X42k,
       Engine.Model.ModelLoader.packObj
         ipv15_X42m ipv3_X41V ipv11_X42d ipv7_X424 #)
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Model.ModelLoader.loadObj
  :: GHC.IO.FilePath
     -> GHC.Types.IO
          (Engine.Core.Vec.Vec3
             [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObj =
  Engine.Model.ModelLoader.loadObj1
  `cast` (<GHC.IO.FilePath>
          -> Sym
               <(GHC.Types.NTCo:IO
                   <Engine.Core.Vec.Vec3
                      [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>)>
          :: (GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.Vec.Vec3
                      [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #))
               ~#
             (GHC.IO.FilePath
              -> GHC.Types.IO
                   (Engine.Core.Vec.Vec3
                      [Data.Maybe.Maybe Graphics.Rendering.OpenGL.Raw.Types.GLfloat])))

Engine.Model.ModelLoader.loadObjModel20 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Model.ModelLoader.loadObjModel20 =
  GHC.CString.unpackCString# "position"

Engine.Model.ModelLoader.loadObjModel19 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Model.ModelLoader.loadObjModel19 =
  GHC.CString.unpackCString# "texCoord"

Engine.Model.ModelLoader.loadObjModel18 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Model.ModelLoader.loadObjModel18 =
  GHC.CString.unpackCString# "normal"

Engine.Model.ModelLoader.loadObjModel17 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
Engine.Model.ModelLoader.loadObjModel17 =
  GHC.CString.unpackCString# "color"

Engine.Model.ModelLoader.loadObjModel16 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 60 0}]
Engine.Model.ModelLoader.loadObjModel16 =
  GHC.CString.unpackCString# "textureId"

Engine.Model.ModelLoader.loadObjModel15 :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel15 =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Model.ModelLoader.loadObjModel16
    (GHC.Types.[] @ GHC.Base.String)

Engine.Model.ModelLoader.loadObjModel14 :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel14 =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Model.ModelLoader.loadObjModel17
    Engine.Model.ModelLoader.loadObjModel15

Engine.Model.ModelLoader.loadObjModel13 :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel13 =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Model.ModelLoader.loadObjModel18
    Engine.Model.ModelLoader.loadObjModel14

Engine.Model.ModelLoader.loadObjModel12 :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel12 =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Model.ModelLoader.loadObjModel19
    Engine.Model.ModelLoader.loadObjModel13

Engine.Model.ModelLoader.loadObjModel_attrNames
  :: [GHC.Base.String]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel_attrNames =
  GHC.Types.:
    @ GHC.Base.String
    Engine.Model.ModelLoader.loadObjModel20
    Engine.Model.ModelLoader.loadObjModel12

lvl23_rsnK :: GHC.Types.Float
[GblId, Caf=NoCafRefs]
lvl23_rsnK = GHC.Types.F# (__float 0.0)

Engine.Model.ModelLoader.loadObjModel11
  :: Engine.Model.Material.Material -> Foreign.C.Types.CFloat
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType U(AAAAAS)m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a3uM [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case x_a3uM
                 of _
                 { Engine.Model.Material.Material _ _ _ _ _ ds6_dofe [Occ=Once!] ->
                 case ds6_dofe of _ {
                   Data.Maybe.Nothing ->
                     (GHC.Types.F# (__float 0.0))
                     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                             :: GHC.Types.Float ~# Foreign.C.Types.CFloat);
                   Data.Maybe.Just x1_aqa6 [Occ=Once] ->
                     case x1_aqa6
                          `cast` (<Foreign.C.Types.NTCo:CInt>
                                  :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
                     of _ { GHC.Int.I32# x#_ac3v [Occ=Once] ->
                     (GHC.Types.F# (GHC.Prim.int2Float# x#_ac3v))
                     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                             :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                     }
                 }
                 }}]
Engine.Model.ModelLoader.loadObjModel11 =
  \ (x_a3uM :: Engine.Model.Material.Material) ->
    case x_a3uM
    of _
    { Engine.Model.Material.Material ds1_dof9
                                     ds2_dofa
                                     ds3_dofb
                                     ds4_dofc
                                     ds5_dofd
                                     ds6_dofe ->
    case ds6_dofe of _ {
      Data.Maybe.Nothing ->
        lvl23_rsnK
        `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                :: GHC.Types.Float ~# Foreign.C.Types.CFloat);
      Data.Maybe.Just x1_aqa6 ->
        case x1_aqa6
             `cast` (<Foreign.C.Types.NTCo:CInt>
                     :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
        of _ { GHC.Int.I32# x#_ac3v ->
        (GHC.Types.F# (GHC.Prim.int2Float# x#_ac3v))
        `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
        }
    }
    }

Engine.Model.ModelLoader.loadObjModel9 :: GHC.Word.Word32
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.loadObjModel9 = GHC.Word.W32# (__word 3)

Engine.Model.ModelLoader.loadObjModel10 :: GHC.Word.Word32
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.loadObjModel10 = GHC.Word.W32# (__word 2)

Engine.Model.ModelLoader.loadObjModel8 :: GHC.Word.Word32
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Model.ModelLoader.loadObjModel8 = GHC.Word.W32# (__word 1)

Engine.Model.ModelLoader.loadObjModel7
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel7 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Model.ModelLoader.loadObjModel8
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    (GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLuint)

Engine.Model.ModelLoader.loadObjModel6
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel6 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Model.ModelLoader.loadObjModel9
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    Engine.Model.ModelLoader.loadObjModel7

Engine.Model.ModelLoader.loadObjModel5
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel5 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Model.ModelLoader.loadObjModel9
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    Engine.Model.ModelLoader.loadObjModel6

Engine.Model.ModelLoader.loadObjModel4
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel4 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Model.ModelLoader.loadObjModel10
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    Engine.Model.ModelLoader.loadObjModel5

Engine.Model.ModelLoader.loadObjModel3
  :: [Graphics.Rendering.OpenGL.Raw.Types.GLuint]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.loadObjModel3 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLuint
    (Engine.Model.ModelLoader.loadObjModel9
     `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
             :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
    Engine.Model.ModelLoader.loadObjModel4

Engine.Model.ModelLoader.loadObjModel2
  :: Engine.Model.Material.Material
     -> Graphics.Rendering.OpenGL.Raw.Types.GLint
[GblId,
 Arity=1,
 Str=DmdType U(AAAAAS),
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (x_a3uM [Occ=Once!] :: Engine.Model.Material.Material) ->
                 case x_a3uM
                 of _
                 { Engine.Model.Material.Material _ _ _ _ _ ds6_dofe [Occ=Once!] ->
                 case ds6_dofe of _ {
                   Data.Maybe.Nothing ->
                     Data.Maybe.fromJust1 @ Graphics.Rendering.OpenGL.Raw.Types.GLint;
                   Data.Maybe.Just x1_aqAg [Occ=Once] -> x1_aqAg
                 }
                 }}]
Engine.Model.ModelLoader.loadObjModel2 =
  \ (x_a3uM :: Engine.Model.Material.Material) ->
    case x_a3uM
    of _
    { Engine.Model.Material.Material ds1_dof9
                                     ds2_dofa
                                     ds3_dofb
                                     ds4_dofc
                                     ds5_dofd
                                     ds6_dofe ->
    case ds6_dofe of _ {
      Data.Maybe.Nothing ->
        Data.Maybe.fromJust1 @ Graphics.Rendering.OpenGL.Raw.Types.GLint;
      Data.Maybe.Just x1_aqAg -> x1_aqAg
    }
    }

Rec {
Engine.Model.ModelLoader.loadObjModel_go [Occ=LoopBreaker]
  :: [Engine.Model.Material.Material]
     -> [Foreign.C.Types.CInt]
     -> [(Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
          Foreign.C.Types.CInt)]
[GblId, Arity=2, Str=DmdType SL]
Engine.Model.ModelLoader.loadObjModel_go =
  \ (ds_a3qq :: [Engine.Model.Material.Material])
    (eta_X5c :: [Foreign.C.Types.CInt]) ->
    case ds_a3qq of _ {
      [] ->
        GHC.Types.[]
          @ (Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
             Foreign.C.Types.CInt);
      : y_a3qv ys_a3qw ->
        case eta_X5c of _ {
          [] ->
            GHC.Types.[]
              @ (Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
                 Foreign.C.Types.CInt);
          : y1_aqBh ys1_aqBi ->
            GHC.Types.:
              @ (Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject,
                 Foreign.C.Types.CInt)
              (case y_a3qv
               of _
               { Engine.Model.Material.Material ds1_dof1
                                                ds2_dof2
                                                ds3_dof3
                                                ds4_dof4
                                                ds5_dof5
                                                ds6_dof6 ->
               case ds5_dof5 of _ {
                 Data.Maybe.Nothing ->
                   Data.Maybe.fromJust1
                     @ Graphics.Rendering.OpenGL.GL.Texturing.TextureObject.TextureObject;
                 Data.Maybe.Just x_aqAg -> x_aqAg
               }
               },
               y1_aqBh)
              (Engine.Model.ModelLoader.loadObjModel_go ys_a3qw ys1_aqBi)
        }
    }
end Rec }

Engine.Model.ModelLoader.loadObjModel1
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Model.Model.Model #)
[GblId,
 Arity=5,
 Str=DmdType LLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0] 692 30}]
Engine.Model.ModelLoader.loadObjModel1 =
  \ (wStateRef_aq7R :: GHC.IORef.IORef Engine.Core.World.WorldState)
    (objFile_aq7S :: GHC.IO.FilePath)
    (vert_aq7T :: GHC.IO.FilePath)
    (frag_aq7U :: GHC.IO.FilePath)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Model.ModelLoader.loadObj1 objFile_aq7S eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Engine.Model.ModelLoader.loadObjMaterials1
           wStateRef_aq7R objFile_aq7S ipv_a3Ui
    of _ { (# ipv2_X42f, ipv3_X42h #) ->
    case ipv3_X42h of _ { (mats_aq7X, lib_aq7Y) ->
    let {
      dat_sqIy :: [[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]]
      [LclId, Str=DmdType]
      dat_sqIy =
        case ipv1_a3Uj of _ { Engine.Core.Vec.Vec3 x_aqaa y_aqab z_aqac ->
        case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
               x_aqaa Engine.Model.ModelLoader.loadObjModel22
        of tpl_X6 { __DEFAULT ->
        case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
               y_aqab Engine.Model.ModelLoader.loadObjModel21
        of tpl1_X8 { __DEFAULT ->
        case Engine.Model.ModelLoader.loadObjModel_$snegateNothing
               z_aqac Engine.Model.ModelLoader.loadObjModel22
        of tpl2_Xa { __DEFAULT ->
        GHC.Types.:
          @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
          tpl_X6
          (GHC.Types.:
             @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
             tpl1_X8
             (GHC.Types.:
                @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                tpl2_Xa
                (GHC.Types.[] @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])))
        }
        }
        }
        } } in
    case Engine.Model.Model.createModel1
           vert_aq7T
           frag_aq7U
           Engine.Model.ModelLoader.loadObjModel_attrNames
           (GHC.Base.++
              @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
              dat_sqIy
              (GHC.Types.:
                 @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                 (Engine.Model.ModelLoader.fromVec3M
                    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                    (GHC.Base.map
                       @ Engine.Model.Material.Material
                       @ (Data.Maybe.Maybe
                            (Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat))
                       Engine.Model.Material.matDiffuseColor
                       mats_aq7X))
                 (GHC.Types.:
                    @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
                    (GHC.Base.map
                       @ Engine.Model.Material.Material
                       @ Foreign.C.Types.CFloat
                       Engine.Model.ModelLoader.loadObjModel11
                       mats_aq7X)
                    (GHC.Types.[] @ [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]))))
           Engine.Model.ModelLoader.loadObjModel3
           (case dat_sqIy of _ {
              [] -> case GHC.List.badHead of wild2_00 { };
              : x_ac7a ds3_ac7b ->
                case GHC.List.$wlen
                       @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat x_ac7a 0
                of ww_adam { __DEFAULT ->
                case GHC.Classes.divInt# (GHC.Prim.narrow32Int# ww_adam) 3
                of wild2_artU { __DEFAULT ->
                (GHC.Int.I32# (GHC.Prim.narrow32Int# wild2_artU))
                `cast` (Sym <(Foreign.C.Types.NTCo:CInt)>
                        :: GHC.Int.Int32 ~# Foreign.C.Types.CInt)
                }
                }
            })
           ipv2_X42f
    of _ { (# ipv4_X42q, ipv5_X42s #) ->
    (# ipv4_X42q,
       case ipv5_X42s
       of _
       { Engine.Model.Model.Model ds_dqxk
                                  ds4_dqxl
                                  ds5_dqxm
                                  ds6_dqxn
                                  ds7_dqxo
                                  ds8_dqxp ->
       case Engine.Model.ModelLoader.loadObjModel_go
              lib_aq7Y
              (GHC.Base.map
                 @ Engine.Model.Material.Material
                 @ Foreign.C.Types.CInt
                 Engine.Model.ModelLoader.loadObjModel2
                 lib_aq7Y)
       of tpl_Xc { __DEFAULT ->
       Engine.Model.Model.Model
         ds_dqxk ds4_dqxl tpl_Xc ds6_dqxn ds7_dqxo ds8_dqxp
       }
       } #)
    }
    }
    }
    }

Engine.Model.ModelLoader.loadObjModel
  :: GHC.IORef.IORef Engine.Core.World.WorldState
     -> GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> GHC.IO.FilePath
     -> GHC.Types.IO Engine.Model.Model.Model
[GblId,
 Arity=5,
 Str=DmdType LLLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Model.ModelLoader.loadObjModel =
  Engine.Model.ModelLoader.loadObjModel1
  `cast` (<GHC.IORef.IORef Engine.Core.World.WorldState>
          -> <GHC.IO.FilePath>
          -> <GHC.IO.FilePath>
          -> <GHC.IO.FilePath>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Model.Model.Model>)>
          :: (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Model.Model.Model #))
               ~#
             (GHC.IORef.IORef Engine.Core.World.WorldState
              -> GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> GHC.IO.FilePath
              -> GHC.Types.IO Engine.Model.Model.Model))

Engine.Model.ModelLoader.splitSpaces2 :: [GHC.Types.Char]
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Model.ModelLoader.splitSpaces2 =
  GHC.Types.:
    @ GHC.Types.Char
    Engine.Model.ModelLoader.rawObjLine3
    (GHC.Types.[] @ GHC.Types.Char)

Engine.Model.ModelLoader.splitSpaces1
  :: [GHC.Types.Char] -> [[GHC.Types.Char]]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Model.ModelLoader.splitSpaces1 =
  Data.List.Split.Internals.splitOn
    @ GHC.Types.Char
    GHC.Classes.$fEqChar
    Engine.Model.ModelLoader.splitSpaces2

Engine.Model.ModelLoader.splitSpaces
  :: GHC.Base.String -> [GHC.Base.String]
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 50 0}]
Engine.Model.ModelLoader.splitSpaces =
  \ (x_a3uM :: GHC.Base.String) ->
    GHC.List.filter
      @ [GHC.Types.Char]
      Engine.Model.ModelLoader.rawObjLine4
      (Engine.Model.ModelLoader.splitSpaces1 x_a3uM)


------ Local rules for imported ids --------
"SPEC Engine.Model.ModelLoader.fromJustSafe [Graphics.Rendering.OpenGL.Raw.Types.GLint]" [ALWAYS]
    forall ($dNum_sqJ3
              :: GHC.Num.Num Graphics.Rendering.OpenGL.Raw.Types.GLint).
      Engine.Model.ModelLoader.fromJustSafe @ Graphics.Rendering.OpenGL.Raw.Types.GLint
                                            $dNum_sqJ3
      = Engine.Model.ModelLoader.fromJustSafe_$sfromJustSafe
"SPEC Engine.Model.ModelLoader.negateNothing [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]" [ALWAYS]
    forall ($dNum_sqEO
              :: GHC.Num.Num Graphics.Rendering.OpenGL.Raw.Types.GLfloat).
      Engine.Model.ModelLoader.negateNothing @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                             $dNum_sqEO
      = Engine.Model.ModelLoader.loadObjModel_$snegateNothing
"SPEC Engine.Model.ModelLoader.negateNothing3 [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]" [ALWAYS]
    forall ($dNum_sqJh
              :: GHC.Num.Num Graphics.Rendering.OpenGL.Raw.Types.GLfloat).
      Engine.Model.ModelLoader.negateNothing3 @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                              $dNum_sqJh
      = Engine.Model.ModelLoader.negateNothing3_$snegateNothing3
"SPEC Engine.Model.ModelLoader.readAll [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]" [ALWAYS]
    forall ($dRead_sqJj
              :: GHC.Read.Read Graphics.Rendering.OpenGL.Raw.Types.GLfloat).
      Engine.Model.ModelLoader.readAll @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                       $dRead_sqJj
      = Engine.Model.ModelLoader.readAll_$sreadAll


[12 of 17] Compiling Engine.Graphics.Window ( Engine/Graphics/Window.hs, Engine/Graphics/Window.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 99, types: 125, coercions: 26}

Engine.Graphics.Window.$wa
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 81 30}]
Engine.Graphics.Window.$wa =
  \ (ww_sw3R :: GHC.Prim.Addr#)
    (w_sw3T :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Graphics.UI.GLFW.$wa ww_sw3R w_sw3T
    of _ { (# ipv_a3Ui, _ #) ->
    case Graphics.UI.GLFW.terminate1 ipv_a3Ui
    of _ { (# ipv2_X3UX, _ #) ->
    case ((System.Exit.exitSuccess @ (GHC.Prim.Any *))
          `cast` (<GHC.Types.NTCo:IO <GHC.Prim.Any *>>
                  :: GHC.Types.IO (GHC.Prim.Any *)
                       ~#
                     (GHC.Prim.State# GHC.Prim.RealWorld
                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Prim.Any * #))))
           ipv2_X3UX
    of _ { (# ipv4_X3US, _ #) ->
    (# ipv4_X3US, GHC.Tuple.() #)
    }
    }
    }

Engine.Graphics.Window.createGLFWWindow3 [InlPrag=INLINE[0]]
  :: Graphics.UI.GLFW.Types.Window
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=DmdType U(L)L,
 Unf=Unf{Src=Worker=Engine.Graphics.Window.$wa, TopLvl=True,
         Arity=2, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sw3P [Occ=Once] :: Graphics.UI.GLFW.Types.Window)
                 (w1_sw3T [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sw3P
                      `cast` (<Graphics.UI.GLFW.Types.NTCo:Window>
                              :: Graphics.UI.GLFW.Types.Window
                                   ~#
                                 GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow)
                 of _ { GHC.Ptr.Ptr ww_sw3R [Occ=Once] ->
                 Engine.Graphics.Window.$wa ww_sw3R w1_sw3T
                 }}]
Engine.Graphics.Window.createGLFWWindow3 =
  \ (w_sw3P :: Graphics.UI.GLFW.Types.Window)
    (w1_sw3T :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_sw3P
         `cast` (<Graphics.UI.GLFW.Types.NTCo:Window>
                 :: Graphics.UI.GLFW.Types.Window
                      ~#
                    GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow)
    of _ { GHC.Ptr.Ptr ww_sw3R ->
    Engine.Graphics.Window.$wa ww_sw3R w1_sw3T
    }

Engine.Graphics.Window.shutdown
  :: Graphics.UI.GLFW.WindowCloseCallback
[GblId,
 Arity=2,
 Str=DmdType U(L)L,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Graphics.Window.createGLFWWindow3
               `cast` (<Graphics.UI.GLFW.Types.Window>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (Graphics.UI.GLFW.Types.Window
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (Graphics.UI.GLFW.Types.Window -> GHC.Types.IO ()))}]
Engine.Graphics.Window.shutdown =
  Engine.Graphics.Window.createGLFWWindow3
  `cast` (<Graphics.UI.GLFW.Types.Window>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (Graphics.UI.GLFW.Types.Window
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (Graphics.UI.GLFW.Types.Window -> GHC.Types.IO ()))

Engine.Graphics.Window.createGLFWWindow5 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 70 0}]
Engine.Graphics.Window.createGLFWWindow5 =
  GHC.CString.unpackCString# "GLFW + Haskell"

Engine.Graphics.Window.createGLFWWindow4 :: [GHC.Types.Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 220 0}]
Engine.Graphics.Window.createGLFWWindow4 =
  GHC.CString.unpackCString#
    "Pattern match failure in do expression at Engine/Graphics/Window.hs:10:5-12"

Engine.Graphics.Window.createGLFWWindow2
  :: Data.Maybe.Maybe Graphics.UI.GLFW.WindowCloseCallback
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Graphics.Window.createGLFWWindow2 =
  Data.Maybe.Just
    @ Graphics.UI.GLFW.WindowCloseCallback
    (Engine.Graphics.Window.createGLFWWindow3
     `cast` (<Graphics.UI.GLFW.Types.Window>
             -> Sym <(GHC.Types.NTCo:IO <()>)>
             :: (Graphics.UI.GLFW.Types.Window
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                  ~#
                (Graphics.UI.GLFW.Types.Window -> GHC.Types.IO ())))

Engine.Graphics.Window.createGLFWWindow1
  :: GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Graphics.UI.GLFW.Types.Window #)
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0] 351 90}]
Engine.Graphics.Window.createGLFWWindow1 =
  \ (width_avHQ :: GHC.Types.Int)
    (height_avHR :: GHC.Types.Int)
    (eta_Xl :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwInit GHC.Prim.State#
                                                 GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Prim.Int# #)}_avYk
           eta_Xl
    of _ { (# ds1_avYn, _ #) ->
    case Graphics.UI.GLFW.createWindow1
           width_avHQ
           height_avHR
           Engine.Graphics.Window.createGLFWWindow5
           (Data.Maybe.Nothing @ Graphics.UI.GLFW.Types.Monitor)
           (Data.Maybe.Nothing @ Graphics.UI.GLFW.Types.Window)
           ds1_avYn
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case ipv1_a3Uj of _ {
      Data.Maybe.Nothing ->
        ((GHC.IO.failIO
            @ Graphics.UI.GLFW.Types.Window
            Engine.Graphics.Window.createGLFWWindow4)
         `cast` (<GHC.Types.NTCo:IO <Graphics.UI.GLFW.Types.Window>>
                 :: GHC.Types.IO Graphics.UI.GLFW.Types.Window
                      ~#
                    (GHC.Prim.State# GHC.Prim.RealWorld
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                           Graphics.UI.GLFW.Types.Window #))))
          ipv_a3Ui;
      Data.Maybe.Just win_avHS ->
        case win_avHS
             `cast` (<Graphics.UI.GLFW.Types.NTCo:Window>
                     :: Graphics.UI.GLFW.Types.Window
                          ~#
                        GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow)
        of ds4_avXV { GHC.Ptr.Ptr ds5_avXX ->
        case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwSetWindowPos GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_avY5
               ds5_avXX 100 50 ipv_a3Ui
        of _ { (# ds10_avYa #) ->
        case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwMakeContextCurrent GHC.Prim.Addr#
                                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld #)}_avXG
               ds5_avXX ds10_avYa
        of _ { (# ds6_avXL #) ->
        case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwSwapInterval GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_avX5
               1 ds6_avXL
        of _ { (# ds7_avXa #) ->
        case Graphics.UI.GLFW.$wa32
               ds5_avXX Engine.Graphics.Window.createGLFWWindow2 ds7_avXa
        of _ { (# ipv2_X3Vl, _ #) ->
        (# ipv2_X3Vl,
           ds4_avXV
           `cast` (Sym <(Graphics.UI.GLFW.Types.NTCo:Window)>
                   :: GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow
                        ~#
                      Graphics.UI.GLFW.Types.Window) #)
        }
        }
        }
        }
        }
    }
    }
    }

Engine.Graphics.Window.createGLFWWindow
  :: GHC.Types.Int
     -> GHC.Types.Int -> GHC.Types.IO Graphics.UI.GLFW.Types.Window
[GblId,
 Arity=3,
 Str=DmdType LLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Window.createGLFWWindow =
  Engine.Graphics.Window.createGLFWWindow1
  `cast` (<GHC.Types.Int>
          -> <GHC.Types.Int>
          -> Sym <(GHC.Types.NTCo:IO <Graphics.UI.GLFW.Types.Window>)>
          :: (GHC.Types.Int
              -> GHC.Types.Int
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Graphics.UI.GLFW.Types.Window #))
               ~#
             (GHC.Types.Int
              -> GHC.Types.Int -> GHC.Types.IO Graphics.UI.GLFW.Types.Window))



[13 of 17] Compiling Engine.Object.GameObject ( Engine/Object/GameObject.hs, Engine/Object/GameObject.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 1,286, types: 1,702, coercions: 162}

Engine.Object.GameObject.calculateNewAABBs2
  :: [Engine.Model.AABB.AABB]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.GameObject.calculateNewAABBs2 =
  GHC.Types.:
    @ Engine.Model.AABB.AABB
    Engine.Core.World.playerAABB
    (GHC.Types.[] @ Engine.Model.AABB.AABB)

Engine.Object.GameObject.getAABBs1
  :: Data.Maybe.Maybe [Engine.Model.AABB.AABB]
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Object.GameObject.getAABBs1 =
  Data.Maybe.Just
    @ [Engine.Model.AABB.AABB]
    Engine.Object.GameObject.calculateNewAABBs2

Engine.Object.GameObject.getAABBs
  :: forall t_awbI.
     Engine.Core.World.GameObject t_awbI
     -> Data.Maybe.Maybe [Engine.Model.AABB.AABB]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [50] 50 0}]
Engine.Object.GameObject.getAABBs =
  \ (@ t_r) (pe_awcu :: Engine.Core.World.GameObject t_r) ->
    case pe_awcu of _ {
      Engine.Core.World.Player ds_dwfd
                               ds1_dwfe
                               ds2_dwff
                               ds3_dwfg
                               ds4_dwfh ->
        Engine.Object.GameObject.getAABBs1;
      Engine.Core.World.PureEntity ds_dwf9 ds1_dwfa ds2_dwfb ds3_dwfc ->
        case ds2_dwfb
        of _
        { Engine.Model.Model.Model ds4_swQ2
                                   ds5_swQ1
                                   ds6_swQ0
                                   ds7_swPZ
                                   ds8_swPX
                                   ds9_swPY ->
        ds8_swPX
        };
      Engine.Core.World.EffectfulEntity ds_dwfi
                                        ds1_dwfj
                                        ds2_dwfk
                                        ds3_dwfl ->
        case ds2_dwfk
        of _
        { Engine.Model.Model.Model ds4_swQg
                                   ds5_swQf
                                   ds6_swQe
                                   ds7_swQd
                                   ds8_swQb
                                   ds9_swQc ->
        ds8_swQb
        }
    }

Engine.Object.GameObject.getPos
  :: forall t_awbF.
     Engine.Core.World.GameObject t_awbF
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [40] 30 0}]
Engine.Object.GameObject.getPos =
  \ (@ t_d) (p_awcE :: Engine.Core.World.GameObject t_d) ->
    case p_awcE of _ {
      Engine.Core.World.Player ds_dwef
                               ds1_dweg
                               ds2_dweh
                               ds3_dwei
                               ds4_dwej ->
        ds_dwef;
      Engine.Core.World.PureEntity ds_dweb ds1_dwec ds2_dwed ds3_dwee ->
        ds_dweb;
      Engine.Core.World.EffectfulEntity ds_dwek
                                        ds1_dwel
                                        ds2_dwem
                                        ds3_dwen ->
        ds_dwek
    }

Rec {
Engine.Object.GameObject.calculateNewAABBs_transformAll [Occ=LoopBreaker]
  :: [Engine.Model.AABB.AABB]
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> [Engine.Model.AABB.AABB]
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType SL]
Engine.Object.GameObject.calculateNewAABBs_transformAll =
  \ (ds_dwgo :: [Engine.Model.AABB.AABB])
    (pos_awc9
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case ds_dwgo of _ {
      [] -> GHC.Types.[] @ Engine.Model.AABB.AABB;
      : ds1_dwgp xs_awc8 ->
        case ds1_dwgp of _ { Engine.Model.AABB.AABB l_awc6 r_awc7 ->
        GHC.Types.:
          @ Engine.Model.AABB.AABB
          (Engine.Model.AABB.AABB
             (case l_awc6
              of _ { Engine.Core.Vec.Vec3 ww7_s9N0 ww8_s9N1 ww9_s9N2 ->
              case ww7_s9N0
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# x_swQk ->
              case ww8_s9N1
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# x1_swQs ->
              case ww9_s9N2
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# x2_swQA ->
              case pos_awc9
              of _ { Engine.Core.Vec.Vec3 ww10_s9N6 ww11_s9N7 ww12_s9N8 ->
              case ww10_s9N6
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# y_swQo ->
              case ww11_s9N7
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# y1_swQw ->
              case ww12_s9N8
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# y2_swQE ->
              Engine.Core.Vec.Vec3
                @ Foreign.C.Types.CFloat
                ((GHC.Types.F# (GHC.Prim.plusFloat# x_swQk y_swQo))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# (GHC.Prim.plusFloat# x1_swQs y1_swQw))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# (GHC.Prim.plusFloat# x2_swQA y2_swQE))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
              }
              }
              }
              }
              }
              }
              }
              })
             (case r_awc7
              of _ { Engine.Core.Vec.Vec3 ww7_s9N0 ww8_s9N1 ww9_s9N2 ->
              case ww7_s9N0
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# x_swQI ->
              case ww8_s9N1
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# x1_swQQ ->
              case ww9_s9N2
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# x2_swQY ->
              case pos_awc9
              of _ { Engine.Core.Vec.Vec3 ww10_s9N6 ww11_s9N7 ww12_s9N8 ->
              case ww10_s9N6
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# y_swQM ->
              case ww11_s9N7
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# y1_swQU ->
              case ww12_s9N8
                   `cast` (<Foreign.C.Types.NTCo:CFloat>
                           :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
              of _ { GHC.Types.F# y2_swR2 ->
              Engine.Core.Vec.Vec3
                @ Foreign.C.Types.CFloat
                ((GHC.Types.F# (GHC.Prim.plusFloat# x_swQI y_swQM))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# (GHC.Prim.plusFloat# x1_swQQ y1_swQU))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# (GHC.Prim.plusFloat# x2_swQY y2_swR2))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
              }
              }
              }
              }
              }
              }
              }
              }))
          (Engine.Object.GameObject.calculateNewAABBs_transformAll
             xs_awc8 pos_awc9)
        }
    }
end Rec }

Engine.Object.GameObject.calculateNewAABBs1 :: ()
[GblId, Str=DmdType b]
Engine.Object.GameObject.calculateNewAABBs1 =
  Control.Exception.Base.irrefutPatError
    @ () "Engine/Object/GameObject.hs:43:13-39|(Data.Maybe.Just aabbs)"

Engine.Object.GameObject.calculateNewAABBs
  :: forall t_awbQ.
     Engine.Core.World.GameObject t_awbQ
     -> Data.Maybe.Maybe [Engine.Model.AABB.AABB]
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [220] 310 80}]
Engine.Object.GameObject.calculateNewAABBs =
  \ (@ t_tU) (obj_awc3 :: Engine.Core.World.GameObject t_tU) ->
    let {
      a_swFj :: [Engine.Model.AABB.AABB]
      [LclId]
      a_swFj =
        case obj_awc3 of _ {
          Engine.Core.World.Player ds_dwfd
                                   ds1_dwfe
                                   ds2_dwff
                                   ds3_dwfg
                                   ds4_dwfh ->
            Engine.Object.GameObject.calculateNewAABBs_transformAll
              Engine.Object.GameObject.calculateNewAABBs2 ds_dwfd;
          Engine.Core.World.PureEntity ds_dwf9 ds1_dwfa ds2_dwfb ds3_dwfc ->
            case ds2_dwfb
            of _
            { Engine.Model.Model.Model ds4_swRg
                                       ds5_swRf
                                       ds6_swRe
                                       ds7_swRd
                                       ds8_swRb
                                       ds9_swRc ->
            case ds8_swRb of _ {
              Data.Maybe.Nothing ->
                case Engine.Object.GameObject.calculateNewAABBs1 of wild3_00 { };
              Data.Maybe.Just aabbs_awdm ->
                Engine.Object.GameObject.calculateNewAABBs_transformAll
                  aabbs_awdm ds_dwf9
            }
            };
          Engine.Core.World.EffectfulEntity ds_dwfi
                                            ds1_dwfj
                                            ds2_dwfk
                                            ds3_dwfl ->
            case ds2_dwfk
            of _
            { Engine.Model.Model.Model ds4_swRu
                                       ds5_swRt
                                       ds6_swRs
                                       ds7_swRr
                                       ds8_swRp
                                       ds9_swRq ->
            case ds8_swRp of _ {
              Data.Maybe.Nothing ->
                case Engine.Object.GameObject.calculateNewAABBs1 of wild3_00 { };
              Data.Maybe.Just aabbs_awdm ->
                Engine.Object.GameObject.calculateNewAABBs_transformAll
                  aabbs_awdm ds_dwfi
            }
            }
        } } in
    case obj_awc3 of _ {
      Engine.Core.World.Player ds_dwfd
                               ds1_dwfe
                               ds2_dwff
                               ds3_dwfg
                               ds4_dwfh ->
        Data.Maybe.Just @ [Engine.Model.AABB.AABB] a_swFj;
      Engine.Core.World.PureEntity ds_dwf9 ds1_dwfa ds2_dwfb ds3_dwfc ->
        case ds2_dwfb
        of _
        { Engine.Model.Model.Model ds4_swRI
                                   ds5_swRH
                                   ds6_swRG
                                   ds7_swRF
                                   ds8_swRD
                                   ds9_swRE ->
        case ds8_swRD of _ {
          Data.Maybe.Nothing ->
            Data.Maybe.Nothing @ [Engine.Model.AABB.AABB];
          Data.Maybe.Just ipv_awjJ ->
            Data.Maybe.Just @ [Engine.Model.AABB.AABB] a_swFj
        }
        };
      Engine.Core.World.EffectfulEntity ds_dwfi
                                        ds1_dwfj
                                        ds2_dwfk
                                        ds3_dwfl ->
        case ds2_dwfk
        of _
        { Engine.Model.Model.Model ds4_swRW
                                   ds5_swRV
                                   ds6_swRU
                                   ds7_swRT
                                   ds8_swRR
                                   ds9_swRS ->
        case ds8_swRR of _ {
          Data.Maybe.Nothing ->
            Data.Maybe.Nothing @ [Engine.Model.AABB.AABB];
          Data.Maybe.Just ipv_awjJ ->
            Data.Maybe.Just @ [Engine.Model.AABB.AABB] a_swFj
        }
        }
    }

Engine.Object.GameObject.getWholeAABB1
  :: Data.Maybe.Maybe Engine.Model.AABB.AABB
[GblId,
 Caf=NoCafRefs,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Object.GameObject.getWholeAABB1 =
  Data.Maybe.Just
    @ Engine.Model.AABB.AABB Engine.Core.World.playerAABB

Engine.Object.GameObject.getWholeAABB
  :: forall t_awbJ.
     Engine.Core.World.GameObject t_awbJ
     -> Data.Maybe.Maybe Engine.Model.AABB.AABB
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [50] 50 0}]
Engine.Object.GameObject.getWholeAABB =
  \ (@ t_v) (ds_dwfp :: Engine.Core.World.GameObject t_v) ->
    case ds_dwfp of _ {
      Engine.Core.World.Player ds1_dwfu
                               ds2_dwfv
                               ds3_dwfw
                               ds4_dwfx
                               ds5_dwfy ->
        Engine.Object.GameObject.getWholeAABB1;
      Engine.Core.World.PureEntity ds1_dwfq ds2_dwfr ds3_dwfs ds4_dwft ->
        case ds3_dwfs
        of _
        { Engine.Model.Model.Model ds5_swSa
                                   ds6_swS9
                                   ds7_swS8
                                   ds8_swS7
                                   ds9_swS6
                                   ds10_swS5 ->
        ds10_swS5
        };
      Engine.Core.World.EffectfulEntity ds1_dwfz
                                        ds2_dwfA
                                        ds3_dwfB
                                        ds4_dwfC ->
        case ds3_dwfB
        of _
        { Engine.Model.Model.Model ds5_swSo
                                   ds6_swSn
                                   ds7_swSm
                                   ds8_swSl
                                   ds9_swSk
                                   ds10_swSj ->
        ds10_swSj
        }
    }

Engine.Object.GameObject.calculateNewWholeAABB1
  :: (Engine.Core.Vec.Vec3
        Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
      Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
[GblId, Str=DmdType b]
Engine.Object.GameObject.calculateNewWholeAABB1 =
  Control.Exception.Base.irrefutPatError
    @ (Engine.Core.Vec.Vec3
         Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
       Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
    "Engine/Object/GameObject.hs:33:13-48|(Data.Maybe.Just (Engine.Model.AABB.AABB l\
    \                                                                              r))"

Engine.Object.GameObject.calculateNewWholeAABB2
  :: (Engine.Core.Vec.Vec3
        Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
      Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.GameObject.calculateNewWholeAABB2 =
  (Engine.Core.World.playerAABB3, Engine.Core.World.playerAABB1)

Engine.Object.GameObject.calculateNewWholeAABB
  :: forall t_awbR.
     Engine.Core.World.GameObject t_awbR
     -> Data.Maybe.Maybe Engine.Model.AABB.AABB
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [240] 616 80}]
Engine.Object.GameObject.calculateNewWholeAABB =
  \ (@ t_tY) (obj_Xwcm :: Engine.Core.World.GameObject t_tY) ->
    let {
      pos_swiR [Dmd=Just D(U(L)U(L)U(L))]
        :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
      [LclId, Str=DmdType]
      pos_swiR =
        case obj_Xwcm of _ {
          Engine.Core.World.Player ds_dwef
                                   ds1_dweg
                                   ds2_dweh
                                   ds3_dwei
                                   ds4_dwej ->
            ds_dwef;
          Engine.Core.World.PureEntity ds_dweb ds1_dwec ds2_dwed ds3_dwee ->
            ds_dweb;
          Engine.Core.World.EffectfulEntity ds_dwek
                                            ds1_dwel
                                            ds2_dwem
                                            ds3_dwen ->
            ds_dwek
        } } in
    let {
      ds_swiT [Dmd=Just D(U(U(L)U(L)U(L))U(U(L)U(L)U(L)))]
        :: (Engine.Core.Vec.Vec3
              Graphics.Rendering.OpenGL.Raw.Types.GLfloat,
            Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat)
      [LclId, Str=DmdType]
      ds_swiT =
        case obj_Xwcm of _ {
          Engine.Core.World.Player ds1_dwfu
                                   ds2_dwfv
                                   ds3_dwfw
                                   ds4_dwfx
                                   ds5_dwfy ->
            Engine.Object.GameObject.calculateNewWholeAABB2;
          Engine.Core.World.PureEntity ds1_dwfq ds2_dwfr ds3_dwfs ds4_dwft ->
            case ds3_dwfs
            of _
            { Engine.Model.Model.Model ds5_swSD
                                       ds6_swSC
                                       ds7_swSB
                                       ds8_swSA
                                       ds9_swSz
                                       ds10_swSy ->
            case ds10_swSy of _ {
              Data.Maybe.Nothing ->
                Engine.Object.GameObject.calculateNewWholeAABB1;
              Data.Maybe.Just ds11_dwgw ->
                case ds11_dwgw of _ { Engine.Model.AABB.AABB l_awdt r_awdu ->
                (l_awdt, r_awdu)
                }
            }
            };
          Engine.Core.World.EffectfulEntity ds1_dwfz
                                            ds2_dwfA
                                            ds3_dwfB
                                            ds4_dwfC ->
            case ds3_dwfB
            of _
            { Engine.Model.Model.Model ds5_swSR
                                       ds6_swSQ
                                       ds7_swSP
                                       ds8_swSO
                                       ds9_swSN
                                       ds10_swSM ->
            case ds10_swSM of _ {
              Data.Maybe.Nothing ->
                Engine.Object.GameObject.calculateNewWholeAABB1;
              Data.Maybe.Just ds11_dwgw ->
                case ds11_dwgw of _ { Engine.Model.AABB.AABB l_awdt r_awdu ->
                (l_awdt, r_awdu)
                }
            }
            }
        } } in
    let {
      a_swIP
        :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
      [LclId]
      a_swIP =
        case ds_swiT of _ { (l_awdt, r_Xwe1) ->
        case r_Xwe1
        of _ { Engine.Core.Vec.Vec3 ww7_s9N0 ww8_s9N1 ww9_s9N2 ->
        case ww7_s9N0
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x_swTj ->
        case ww8_s9N1
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_swTr ->
        case ww9_s9N2
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_swTz ->
        case pos_swiR
        of _ { Engine.Core.Vec.Vec3 ww10_s9N6 ww11_s9N7 ww12_s9N8 ->
        case ww10_s9N6
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y_swTn ->
        case ww11_s9N7
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_swTv ->
        case ww12_s9N8
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y2_swTD ->
        Engine.Core.Vec.Vec3
          @ Foreign.C.Types.CFloat
          ((GHC.Types.F# (GHC.Prim.plusFloat# x_swTj y_swTn))
           `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                   :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
          ((GHC.Types.F# (GHC.Prim.plusFloat# x1_swTr y1_swTv))
           `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                   :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
          ((GHC.Types.F# (GHC.Prim.plusFloat# x2_swTz y2_swTD))
           `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                   :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
        }
        }
        }
        }
        }
        }
        }
        }
        } } in
    let {
      a1_swIN
        :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
      [LclId]
      a1_swIN =
        case ds_swiT of _ { (l_Xwe1, r_XwdI) ->
        case l_Xwe1
        of _ { Engine.Core.Vec.Vec3 ww7_s9N0 ww8_s9N1 ww9_s9N2 ->
        case ww7_s9N0
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x_swSV ->
        case ww8_s9N1
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_swT3 ->
        case ww9_s9N2
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_swTb ->
        case pos_swiR
        of _ { Engine.Core.Vec.Vec3 ww10_s9N6 ww11_s9N7 ww12_s9N8 ->
        case ww10_s9N6
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y_swSZ ->
        case ww11_s9N7
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_swT7 ->
        case ww12_s9N8
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y2_swTf ->
        Engine.Core.Vec.Vec3
          @ Foreign.C.Types.CFloat
          ((GHC.Types.F# (GHC.Prim.plusFloat# x_swSV y_swSZ))
           `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                   :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
          ((GHC.Types.F# (GHC.Prim.plusFloat# x1_swT3 y1_swT7))
           `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                   :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
          ((GHC.Types.F# (GHC.Prim.plusFloat# x2_swTb y2_swTf))
           `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                   :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
        }
        }
        }
        }
        }
        }
        }
        }
        } } in
    case obj_Xwcm of _ {
      Engine.Core.World.Player ds1_dwfu
                               ds2_dwfv
                               ds3_dwfw
                               ds4_dwfx
                               ds5_dwfy ->
        Data.Maybe.Just
          @ Engine.Model.AABB.AABB (Engine.Model.AABB.AABB a1_swIN a_swIP);
      Engine.Core.World.PureEntity ds1_dwfq ds2_dwfr ds3_dwfs ds4_dwft ->
        case ds3_dwfs
        of _
        { Engine.Model.Model.Model ds5_swTR
                                   ds6_swTQ
                                   ds7_swTP
                                   ds8_swTO
                                   ds9_swTN
                                   ds10_swTM ->
        case ds10_swTM of _ {
          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Engine.Model.AABB.AABB;
          Data.Maybe.Just ipv_awjJ ->
            Data.Maybe.Just
              @ Engine.Model.AABB.AABB (Engine.Model.AABB.AABB a1_swIN a_swIP)
        }
        };
      Engine.Core.World.EffectfulEntity ds1_dwfz
                                        ds2_dwfA
                                        ds3_dwfB
                                        ds4_dwfC ->
        case ds3_dwfB
        of _
        { Engine.Model.Model.Model ds5_swU5
                                   ds6_swU4
                                   ds7_swU3
                                   ds8_swU2
                                   ds9_swU1
                                   ds10_swU0 ->
        case ds10_swU0 of _ {
          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Engine.Model.AABB.AABB;
          Data.Maybe.Just ipv_awjJ ->
            Data.Maybe.Just
              @ Engine.Model.AABB.AABB (Engine.Model.AABB.AABB a1_swIN a_swIP)
        }
        }
    }

lvl_rx3h :: ()
[GblId, Str=DmdType b]
lvl_rx3h =
  Control.Exception.Base.irrefutPatError
    @ ()
    "Engine/Object/GameObject.hs:19:13-51|Data.Maybe.Just wholeabl"

lvl1_rx3i :: ()
[GblId, Str=DmdType b]
lvl1_rx3i =
  Control.Exception.Base.irrefutPatError
    @ ()
    "Engine/Object/GameObject.hs:20:13-51|Data.Maybe.Just wholeabr"

lvl2_rx3j :: ()
[GblId, Str=DmdType b]
lvl2_rx3j =
  Control.Exception.Base.irrefutPatError
    @ () "Engine/Object/GameObject.hs:23:21-51|Data.Maybe.Just newl"

lvl3_rx3k :: ()
[GblId, Str=DmdType b]
lvl3_rx3k =
  Control.Exception.Base.irrefutPatError
    @ () "Engine/Object/GameObject.hs:24:21-51|Data.Maybe.Just newr"

Engine.Object.GameObject.objectsIntersect
  :: forall t_awbS.
     Engine.Core.World.GameObject t_awbS
     -> Engine.Core.World.GameObject t_awbS -> GHC.Types.Bool
[GblId, Arity=2, Str=DmdType SL]
Engine.Object.GameObject.objectsIntersect =
  \ (@ t_t12)
    (l_awbT :: Engine.Core.World.GameObject t_t12)
    (r_awbU :: Engine.Core.World.GameObject t_t12) ->
    let {
      $w$j_swEI :: GHC.Types.Bool
      [LclId, Str=DmdType]
      $w$j_swEI =
        case Engine.Object.GameObject.calculateNewWholeAABB @ t_t12 l_awbT
        of _ {
          Data.Maybe.Nothing -> case lvl_rx3h of wild1_00 { };
          Data.Maybe.Just wholeabl_awdG ->
            case wholeabl_awdG
            of _ { Engine.Model.AABB.AABB ds2_deYH ds3_deYI ->
            case ds2_deYH
            of _ { Engine.Core.Vec.Vec3 min1x_aeVr min1y_aeVs min1z_aeVt ->
            case min1x_aeVr
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# x_swUh ->
            case min1y_aeVs
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# x1_swUx ->
            case min1z_aeVt
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# x2_swUN ->
            case ds3_deYI
            of _ { Engine.Core.Vec.Vec3 max1x_aeVu max1y_aeVv max1z_aeVw ->
            case max1x_aeVu
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# x3_swU9 ->
            case max1y_aeVv
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# x4_swUp ->
            case max1z_aeVw
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# x5_swUF ->
            case Engine.Object.GameObject.calculateNewWholeAABB @ t_t12 r_awbU
            of _ {
              Data.Maybe.Nothing -> case lvl1_rx3i of wild11_00 { };
              Data.Maybe.Just wholeabr_awdD ->
                case wholeabr_awdD
                of _ { Engine.Model.AABB.AABB ds4_deYJ ds5_deYK ->
                case ds4_deYJ
                of _ { Engine.Core.Vec.Vec3 min2x_aeVx min2y_aeVy min2z_aeVz ->
                case min2x_aeVx
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y_swUd ->
                case min2y_aeVy
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y1_swUt ->
                case min2z_aeVz
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y2_swUJ ->
                case ds5_deYK
                of _ { Engine.Core.Vec.Vec3 max2x_aeVA max2y_aeVB max2z_aeVC ->
                case max2x_aeVA
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y3_swUl ->
                case max2y_aeVB
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y4_swUB ->
                case max2z_aeVC
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y5_swUR ->
                case GHC.Prim.gtFloat# x3_swU9 y_swUd of _ {
                  GHC.Types.False -> GHC.Types.False;
                  GHC.Types.True ->
                    case GHC.Prim.ltFloat# x_swUh y3_swUl of _ {
                      GHC.Types.False -> GHC.Types.False;
                      GHC.Types.True ->
                        case GHC.Prim.gtFloat# x4_swUp y1_swUt of _ {
                          GHC.Types.False -> GHC.Types.False;
                          GHC.Types.True ->
                            case GHC.Prim.ltFloat# x1_swUx y4_swUB of _ {
                              GHC.Types.False -> GHC.Types.False;
                              GHC.Types.True ->
                                case GHC.Prim.gtFloat# x5_swUF y2_swUJ of _ {
                                  GHC.Types.False -> GHC.Types.False;
                                  GHC.Types.True ->
                                    case GHC.Prim.ltFloat# x2_swUN y5_swUR of _ {
                                      GHC.Types.False -> GHC.Types.False;
                                      GHC.Types.True ->
                                        let {
                                          $w$j1_swEJ :: GHC.Types.Bool
                                          [LclId, Str=DmdType]
                                          $w$j1_swEJ =
                                            case Engine.Object.GameObject.calculateNewAABBs
                                                   @ t_t12 r_awbU
                                            of _ {
                                              Data.Maybe.Nothing -> case lvl3_rx3k of wild27_00 { };
                                              Data.Maybe.Just newr_awdJ ->
                                                Engine.Model.AABB.anyIntersect
                                                  (case Engine.Object.GameObject.calculateNewAABBs
                                                          @ t_t12 l_awbT
                                                   of _ {
                                                     Data.Maybe.Nothing ->
                                                       case lvl2_rx3j of wild28_00 { };
                                                     Data.Maybe.Just newl_awdM ->
                                                       case newl_awdM of _ {
                                                         [] ->
                                                           GHC.List.badHead
                                                             @ Engine.Model.AABB.AABB;
                                                         : x6_ac7a ds1_ac7b -> x6_ac7a
                                                       }
                                                   })
                                                  newr_awdJ
                                            } } in
                                        let {
                                          $w$j2_swEK :: GHC.Types.Bool
                                          [LclId, Str=DmdType]
                                          $w$j2_swEK =
                                            case r_awbU of _ {
                                              Engine.Core.World.Player ds_dwfd
                                                                       ds1_dwfe
                                                                       ds6_dwff
                                                                       ds7_dwfg
                                                                       ds8_dwfh ->
                                                $w$j1_swEJ;
                                              Engine.Core.World.PureEntity ds_dwf9
                                                                           ds1_dwfa
                                                                           ds6_dwfb
                                                                           ds7_dwfc ->
                                                case ds6_dwfb
                                                of _
                                                { Engine.Model.Model.Model ds8_swV5
                                                                           ds9_swV4
                                                                           ds10_swV3
                                                                           ds11_swV2
                                                                           ds12_swV0
                                                                           ds13_swV1 ->
                                                case ds12_swV0 of _ {
                                                  Data.Maybe.Nothing -> GHC.Types.True;
                                                  Data.Maybe.Just ipv_awjJ -> $w$j1_swEJ
                                                }
                                                };
                                              Engine.Core.World.EffectfulEntity ds_dwfi
                                                                                ds1_dwfj
                                                                                ds6_dwfk
                                                                                ds7_dwfl ->
                                                case ds6_dwfk
                                                of _
                                                { Engine.Model.Model.Model ds8_swVj
                                                                           ds9_swVi
                                                                           ds10_swVh
                                                                           ds11_swVg
                                                                           ds12_swVe
                                                                           ds13_swVf ->
                                                case ds12_swVe of _ {
                                                  Data.Maybe.Nothing -> GHC.Types.True;
                                                  Data.Maybe.Just ipv_awjJ -> $w$j1_swEJ
                                                }
                                                }
                                            } } in
                                        case l_awbT of _ {
                                          Engine.Core.World.Player ds_dwfd
                                                                   ds1_dwfe
                                                                   ds6_dwff
                                                                   ds7_dwfg
                                                                   ds8_dwfh ->
                                            $w$j2_swEK;
                                          Engine.Core.World.PureEntity ds_dwf9
                                                                       ds1_dwfa
                                                                       ds6_dwfb
                                                                       ds7_dwfc ->
                                            case ds6_dwfb
                                            of _
                                            { Engine.Model.Model.Model ds8_swVx
                                                                       ds9_swVw
                                                                       ds10_swVv
                                                                       ds11_swVu
                                                                       ds12_swVs
                                                                       ds13_swVt ->
                                            case ds12_swVs of _ {
                                              Data.Maybe.Nothing -> GHC.Types.True;
                                              Data.Maybe.Just ipv_awjJ -> $w$j2_swEK
                                            }
                                            };
                                          Engine.Core.World.EffectfulEntity ds_dwfi
                                                                            ds1_dwfj
                                                                            ds6_dwfk
                                                                            ds7_dwfl ->
                                            case ds6_dwfk
                                            of _
                                            { Engine.Model.Model.Model ds8_swVL
                                                                       ds9_swVK
                                                                       ds10_swVJ
                                                                       ds11_swVI
                                                                       ds12_swVG
                                                                       ds13_swVH ->
                                            case ds12_swVG of _ {
                                              Data.Maybe.Nothing -> GHC.Types.True;
                                              Data.Maybe.Just ipv_awjJ -> $w$j2_swEK
                                            }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                }
                }
                }
                }
                }
                }
                }
                }
                }
            }
            }
            }
            }
            }
            }
            }
            }
            }
            }
        } } in
    let {
      $w$j1_swEL :: GHC.Types.Bool
      [LclId, Str=DmdType]
      $w$j1_swEL =
        case r_awbU of _ {
          Engine.Core.World.Player ds_dwfu
                                   ds1_dwfv
                                   ds2_dwfw
                                   ds3_dwfx
                                   ds4_dwfy ->
            $w$j_swEI;
          Engine.Core.World.PureEntity ds_dwfq ds1_dwfr ds2_dwfs ds3_dwft ->
            case ds2_dwfs
            of _
            { Engine.Model.Model.Model ds4_swVZ
                                       ds5_swVY
                                       ds6_swVX
                                       ds7_swVW
                                       ds8_swVV
                                       ds9_swVU ->
            case ds9_swVU of _ {
              Data.Maybe.Nothing -> GHC.Types.False;
              Data.Maybe.Just ipv_awjJ -> $w$j_swEI
            }
            };
          Engine.Core.World.EffectfulEntity ds_dwfz
                                            ds1_dwfA
                                            ds2_dwfB
                                            ds3_dwfC ->
            case ds2_dwfB
            of _
            { Engine.Model.Model.Model ds4_swWd
                                       ds5_swWc
                                       ds6_swWb
                                       ds7_swWa
                                       ds8_swW9
                                       ds9_swW8 ->
            case ds9_swW8 of _ {
              Data.Maybe.Nothing -> GHC.Types.False;
              Data.Maybe.Just ipv_awjJ -> $w$j_swEI
            }
            }
        } } in
    case l_awbT of _ {
      Engine.Core.World.Player ds_dwfu
                               ds1_dwfv
                               ds2_dwfw
                               ds3_dwfx
                               ds4_dwfy ->
        $w$j1_swEL;
      Engine.Core.World.PureEntity ds_dwfq ds1_dwfr ds2_dwfs ds3_dwft ->
        case ds2_dwfs
        of _
        { Engine.Model.Model.Model ds4_swWr
                                   ds5_swWq
                                   ds6_swWp
                                   ds7_swWo
                                   ds8_swWn
                                   ds9_swWm ->
        case ds9_swWm of _ {
          Data.Maybe.Nothing -> GHC.Types.False;
          Data.Maybe.Just ipv_awjJ -> $w$j1_swEL
        }
        };
      Engine.Core.World.EffectfulEntity ds_dwfz
                                        ds1_dwfA
                                        ds2_dwfB
                                        ds3_dwfC ->
        case ds2_dwfB
        of _
        { Engine.Model.Model.Model ds4_swWF
                                   ds5_swWE
                                   ds6_swWD
                                   ds7_swWC
                                   ds8_swWB
                                   ds9_swWA ->
        case ds9_swWA of _ {
          Data.Maybe.Nothing -> GHC.Types.False;
          Data.Maybe.Just ipv_awjJ -> $w$j1_swEL
        }
        }
    }

Rec {
Engine.Object.GameObject.isIntersectingAny1 [Occ=LoopBreaker]
  :: forall t_tQ.
     Engine.Core.World.GameObject t_tQ
     -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_tQ)]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=3, Str=DmdType LSL]
Engine.Object.GameObject.isIntersectingAny1 =
  \ (@ t_tQ)
    (collider_awca :: Engine.Core.World.GameObject t_tQ)
    (ds_dwh3 :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_tQ)])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_dwh3 of _ {
      [] -> (# eta_B1, GHC.Types.False #);
      : ref_awcb xs_awcc ->
        case ref_awcb
             `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_tQ>
                     :: GHC.IORef.IORef (Engine.Core.World.GameObject t_tQ)
                          ~#
                        GHC.STRef.STRef
                          GHC.Prim.RealWorld (Engine.Core.World.GameObject t_tQ))
        of _ { GHC.STRef.STRef var#_aorT ->
        case GHC.Prim.readMutVar#
               @ GHC.Prim.RealWorld
               @ (Engine.Core.World.GameObject t_tQ)
               var#_aorT
               eta_B1
        of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
        case Engine.Object.GameObject.objectsIntersect
               @ t_tQ collider_awca ipv1_a3Uj
        of _ {
          GHC.Types.False ->
            Engine.Object.GameObject.isIntersectingAny1
              @ t_tQ collider_awca xs_awcc ipv_a3Ui;
          GHC.Types.True -> (# ipv_a3Ui, GHC.Types.True #)
        }
        }
        }
    }
end Rec }

Engine.Object.GameObject.isIntersectingAny
  :: forall t_awbP.
     Engine.Core.World.GameObject t_awbP
     -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_awbP)]
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.GameObject.isIntersectingAny =
  Engine.Object.GameObject.isIntersectingAny1
  `cast` (forall t_tQ.
          <Engine.Core.World.GameObject t_tQ>
          -> <[GHC.IORef.IORef (Engine.Core.World.GameObject t_tQ)]>
          -> Sym <(GHC.Types.NTCo:IO <GHC.Types.Bool>)>
          :: (forall t_tQ.
              Engine.Core.World.GameObject t_tQ
              -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_tQ)]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #))
               ~#
             (forall t_tQ.
              Engine.Core.World.GameObject t_tQ
              -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_tQ)]
              -> GHC.Types.IO GHC.Types.Bool))

lvl4_rx3l :: [GHC.Types.Char]
[GblId]
lvl4_rx3l =
  GHC.CString.unpackCString#
    "Error: attempted to call GameObject.pureUpdate on a nonpure GameObject: Player."

Engine.Object.GameObject.pureUpdate2
  :: forall t_tK. Engine.Core.World.GameObject t_tK
[GblId, Str=DmdType b]
Engine.Object.GameObject.pureUpdate2 =
  \ (@ t_tK) ->
    GHC.Err.error @ (Engine.Core.World.GameObject t_tK) lvl4_rx3l

lvl5_rx3m :: [GHC.Types.Char]
[GblId]
lvl5_rx3m =
  GHC.CString.unpackCString#
    "Error: attempted to call GameObject.pureUpdate on a nonpure GameObject: EffectfulEntity."

Engine.Object.GameObject.pureUpdate1
  :: forall t_tK. Engine.Core.World.GameObject t_tK
[GblId, Str=DmdType b]
Engine.Object.GameObject.pureUpdate1 =
  \ (@ t_tK) ->
    GHC.Err.error @ (Engine.Core.World.GameObject t_tK) lvl5_rx3m

Engine.Object.GameObject.pureUpdate
  :: forall t_awbO.
     Engine.Core.World.GameObject t_awbO
     -> Engine.Core.World.GameObject t_awbO
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [40] 50 0}]
Engine.Object.GameObject.pureUpdate =
  \ (@ t_tK) (ds_dwfG :: Engine.Core.World.GameObject t_tK) ->
    case ds_dwfG of wild_Xp {
      Engine.Core.World.Player ds1_dwfL
                               ds2_dwfM
                               ds3_dwfN
                               ds4_dwfO
                               ds5_dwfP ->
        Engine.Object.GameObject.pureUpdate2 @ t_tK;
      Engine.Core.World.PureEntity ds1_dwfH ds2_dwfI ds3_dwfJ ds4_dwfK ->
        ds2_dwfI wild_Xp;
      Engine.Core.World.EffectfulEntity ds1_dwfQ
                                        ds2_dwfR
                                        ds3_dwfS
                                        ds4_dwfT ->
        Engine.Object.GameObject.pureUpdate1 @ t_tK
    }

Engine.Object.GameObject.effectfulUpdate1
  :: forall t_tG.
     Engine.Core.World.GameObject t_tG
     -> Engine.Core.World.World t_tG
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tG #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType SLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [81 0 0] 102 30}]
Engine.Object.GameObject.effectfulUpdate1 =
  \ (@ t_tG)
    (p_awcf :: Engine.Core.World.GameObject t_tG)
    (w_awcg :: Engine.Core.World.World t_tG)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case p_awcf of wild_Xr {
      Engine.Core.World.Player ds_dwg1
                               ds1_dwg2
                               ds2_dwg3
                               ds3_dwg4
                               ds4_dwg5 ->
        ((ds3_dwg4 w_awcg)
         `cast` (<GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tG>>
                 :: GHC.Types.IO (Engine.Core.World.GameObject t_tG)
                      ~#
                    (GHC.Prim.State# GHC.Prim.RealWorld
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                           Engine.Core.World.GameObject t_tG #))))
          eta_B1;
      Engine.Core.World.PureEntity ds_dwfX ds1_dwfY ds2_dwfZ ds3_dwg0 ->
        (# eta_B1, ds1_dwfY wild_Xr #);
      Engine.Core.World.EffectfulEntity ds_dwg6
                                        ds1_dwg7
                                        ds2_dwg8
                                        ds3_dwg9 ->
        ((ds1_dwg7 w_awcg wild_Xr)
         `cast` (<GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tG>>
                 :: GHC.Types.IO (Engine.Core.World.GameObject t_tG)
                      ~#
                    (GHC.Prim.State# GHC.Prim.RealWorld
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                           Engine.Core.World.GameObject t_tG #))))
          eta_B1
    }

Engine.Object.GameObject.effectfulUpdate
  :: forall t_awbN.
     Engine.Core.World.GameObject t_awbN
     -> Engine.Core.World.World t_awbN
     -> GHC.Types.IO (Engine.Core.World.GameObject t_awbN)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType SLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.GameObject.effectfulUpdate =
  Engine.Object.GameObject.effectfulUpdate1
  `cast` (forall t_tG.
          <Engine.Core.World.GameObject t_tG>
          -> <Engine.Core.World.World t_tG>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tG>)>
          :: (forall t_tG.
              Engine.Core.World.GameObject t_tG
              -> Engine.Core.World.World t_tG
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_tG #))
               ~#
             (forall t_tG.
              Engine.Core.World.GameObject t_tG
              -> Engine.Core.World.World t_tG
              -> GHC.Types.IO (Engine.Core.World.GameObject t_tG)))

Rec {
Engine.Object.GameObject.effectfulUpdateAll1 [Occ=LoopBreaker]
  :: forall t_tr.
     [GHC.IORef.IORef (Engine.Core.World.GameObject t_tr)]
     -> Engine.Core.World.World t_tr
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Caf=NoCafRefs, Str=DmdType SLL]
Engine.Object.GameObject.effectfulUpdateAll1 =
  \ (@ t_tr)
    (ds_dwgd :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_tr)])
    (world_awcp :: Engine.Core.World.World t_tr)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_dwgd of _ {
      [] -> (# eta_B1, GHC.Tuple.() #);
      : object_awcn rest_awco ->
        case object_awcn
             `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_tr>
                     :: GHC.IORef.IORef (Engine.Core.World.GameObject t_tr)
                          ~#
                        GHC.STRef.STRef
                          GHC.Prim.RealWorld (Engine.Core.World.GameObject t_tr))
        of _ { GHC.STRef.STRef var#_aorT ->
        case GHC.Prim.readMutVar#
               @ GHC.Prim.RealWorld
               @ (Engine.Core.World.GameObject t_tr)
               var#_aorT
               eta_B1
        of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
        case ipv1_a3Uj of wild2_Xr {
          Engine.Core.World.Player ds2_dwg1
                                   ds3_dwg2
                                   ds4_dwg3
                                   ds5_dwg4
                                   ds6_dwg5 ->
            case ((ds5_dwg4 world_awcp)
                  `cast` (<GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tr>>
                          :: GHC.Types.IO (Engine.Core.World.GameObject t_tr)
                               ~#
                             (GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    Engine.Core.World.GameObject t_tr #))))
                   ipv_a3Ui
            of _ { (# ipv2_X3VG, ipv3_X3VI #) ->
            case ipv3_X3VI of newObj_XwcK { __DEFAULT ->
            case GHC.Prim.writeMutVar#
                   @ GHC.Prim.RealWorld
                   @ (Engine.Core.World.GameObject t_tr)
                   var#_aorT
                   newObj_XwcK
                   ipv2_X3VG
            of s2#_awlT { __DEFAULT ->
            Engine.Object.GameObject.effectfulUpdateAll1
              @ t_tr rest_awco world_awcp s2#_awlT
            }
            }
            };
          Engine.Core.World.PureEntity ds2_dwfX ds3_dwfY ds4_dwfZ ds5_dwg0 ->
            case ds3_dwfY wild2_Xr of newObj_XwcK { __DEFAULT ->
            case GHC.Prim.writeMutVar#
                   @ GHC.Prim.RealWorld
                   @ (Engine.Core.World.GameObject t_tr)
                   var#_aorT
                   newObj_XwcK
                   ipv_a3Ui
            of s2#_awlT { __DEFAULT ->
            Engine.Object.GameObject.effectfulUpdateAll1
              @ t_tr rest_awco world_awcp s2#_awlT
            }
            };
          Engine.Core.World.EffectfulEntity ds2_dwg6
                                            ds3_dwg7
                                            ds4_dwg8
                                            ds5_dwg9 ->
            case ((ds3_dwg7 world_awcp wild2_Xr)
                  `cast` (<GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tr>>
                          :: GHC.Types.IO (Engine.Core.World.GameObject t_tr)
                               ~#
                             (GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    Engine.Core.World.GameObject t_tr #))))
                   ipv_a3Ui
            of _ { (# ipv2_X3VG, ipv3_X3VI #) ->
            case ipv3_X3VI of newObj_XwcK { __DEFAULT ->
            case GHC.Prim.writeMutVar#
                   @ GHC.Prim.RealWorld
                   @ (Engine.Core.World.GameObject t_tr)
                   var#_aorT
                   newObj_XwcK
                   ipv2_X3VG
            of s2#_awlT { __DEFAULT ->
            Engine.Object.GameObject.effectfulUpdateAll1
              @ t_tr rest_awco world_awcp s2#_awlT
            }
            }
            }
        }
        }
        }
    }
end Rec }

Engine.Object.GameObject.effectfulUpdateAll
  :: forall t_awbK.
     [GHC.IORef.IORef (Engine.Core.World.GameObject t_awbK)]
     -> Engine.Core.World.World t_awbK -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=DmdType SLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.GameObject.effectfulUpdateAll =
  Engine.Object.GameObject.effectfulUpdateAll1
  `cast` (forall t_tr.
          <[GHC.IORef.IORef (Engine.Core.World.GameObject t_tr)]>
          -> <Engine.Core.World.World t_tr> -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_tr.
              [GHC.IORef.IORef (Engine.Core.World.GameObject t_tr)]
              -> Engine.Core.World.World t_tr
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_tr.
              [GHC.IORef.IORef (Engine.Core.World.GameObject t_tr)]
              -> Engine.Core.World.World t_tr -> GHC.Types.IO ()))

Engine.Object.GameObject.effectfulUpdateWorld1
  :: forall t_tv.
     Engine.Core.World.World t_tv
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType S(USUU)L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0] 60 0}]
Engine.Object.GameObject.effectfulUpdateWorld1 =
  \ (@ t_tv)
    (world_awcm :: Engine.Core.World.World t_tv)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    Engine.Object.GameObject.effectfulUpdateAll1
      @ t_tv
      (Engine.Core.World.worldEntities @ t_tv world_awcm)
      world_awcm
      eta_B1

Engine.Object.GameObject.effectfulUpdateWorld
  :: forall t_awbL. Engine.Core.World.World t_awbL -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType S(USUU)L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.GameObject.effectfulUpdateWorld =
  Engine.Object.GameObject.effectfulUpdateWorld1
  `cast` (forall t_tv.
          <Engine.Core.World.World t_tv> -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_tv.
              Engine.Core.World.World t_tv
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_tv. Engine.Core.World.World t_tv -> GHC.Types.IO ()))

Rec {
Engine.Object.GameObject.pureUpdateAll1 [Occ=LoopBreaker]
  :: forall t_tA.
     [GHC.IORef.IORef (Engine.Core.World.GameObject t_tA)]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=DmdType SL]
Engine.Object.GameObject.pureUpdateAll1 =
  \ (@ t_tA)
    (ds_dwgg :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_tA)])
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_dwgg of _ {
      [] -> (# eta_B1, GHC.Tuple.() #);
      : object_awck rest_awcl ->
        case object_awck
             `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_tA>
                     :: GHC.IORef.IORef (Engine.Core.World.GameObject t_tA)
                          ~#
                        GHC.STRef.STRef
                          GHC.Prim.RealWorld (Engine.Core.World.GameObject t_tA))
        of _ { GHC.STRef.STRef var#_awmq ->
        case GHC.Prim.readMutVar#
               @ GHC.Prim.RealWorld
               @ (Engine.Core.World.GameObject t_tA)
               var#_awmq
               eta_B1
        of _ { (# ipv_awmu, ipv1_awmv #) ->
        case ipv1_awmv of wild2_Xp {
          Engine.Core.World.Player ds2_dwfL
                                   ds3_dwfM
                                   ds4_dwfN
                                   ds5_dwfO
                                   ds6_dwfP ->
            case Engine.Object.GameObject.pureUpdate2 of wild3_00 { };
          Engine.Core.World.PureEntity ds2_dwfH ds3_dwfI ds4_dwfJ ds5_dwfK ->
            case ds3_dwfI wild2_Xp of x'_awmx { __DEFAULT ->
            case GHC.Prim.writeMutVar#
                   @ GHC.Prim.RealWorld
                   @ (Engine.Core.World.GameObject t_tA)
                   var#_awmq
                   x'_awmx
                   ipv_awmu
            of s2#_awmy { __DEFAULT ->
            Engine.Object.GameObject.pureUpdateAll1 @ t_tA rest_awcl s2#_awmy
            }
            };
          Engine.Core.World.EffectfulEntity ds2_dwfQ
                                            ds3_dwfR
                                            ds4_dwfS
                                            ds5_dwfT ->
            case Engine.Object.GameObject.pureUpdate1 of wild3_00 { }
        }
        }
        }
    }
end Rec }

Engine.Object.GameObject.pureUpdateAll
  :: forall t_awbM.
     [GHC.IORef.IORef (Engine.Core.World.GameObject t_awbM)]
     -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.GameObject.pureUpdateAll =
  Engine.Object.GameObject.pureUpdateAll1
  `cast` (forall t_tA.
          <[GHC.IORef.IORef (Engine.Core.World.GameObject t_tA)]>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_tA.
              [GHC.IORef.IORef (Engine.Core.World.GameObject t_tA)]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_tA.
              [GHC.IORef.IORef (Engine.Core.World.GameObject t_tA)]
              -> GHC.Types.IO ()))

Engine.Object.GameObject.setPos
  :: forall t_awbG.
     Engine.Core.World.GameObject t_awbG
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.World.GameObject t_awbG
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType SS(UUU),
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [80 60] 90 160}]
Engine.Object.GameObject.setPos =
  \ (@ t_i)
    (p_awcy :: Engine.Core.World.GameObject t_i)
    (pos_awcz
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case p_awcy of _ {
      Engine.Core.World.Player ds_dweX
                               ds1_dweY
                               ds2_dweZ
                               ds3_dwf0
                               ds4_dwf1 ->
        case pos_awcz
        of tpl_X8 { Engine.Core.Vec.Vec3 ipv_swmG ipv1_swmH ipv2_swmI ->
        Engine.Core.World.Player
          @ t_i tpl_X8 ds1_dweY ds2_dweZ ds3_dwf0 ds4_dwf1
        };
      Engine.Core.World.PureEntity ds_dweT ds1_dweU ds2_dweV ds3_dweW ->
        case pos_awcz
        of tpl_X7 { Engine.Core.Vec.Vec3 ipv_swmL ipv1_swmM ipv2_swmN ->
        Engine.Core.World.PureEntity
          @ t_i tpl_X7 ds1_dweU ds2_dweV ds3_dweW
        };
      Engine.Core.World.EffectfulEntity ds_dwf2
                                        ds1_dwf3
                                        ds2_dwf4
                                        ds3_dwf5 ->
        case pos_awcz
        of tpl_X7 { Engine.Core.Vec.Vec3 ipv_swmQ ipv1_swmR ipv2_swmS ->
        Engine.Core.World.EffectfulEntity
          @ t_i tpl_X7 ds1_dwf3 ds2_dwf4 ds3_dwf5
        }
    }

Engine.Object.GameObject.$wmoveObject
  :: forall t_awbH.
     Engine.Core.World.GameObject t_awbH
     -> GHC.Prim.Float#
     -> GHC.Prim.Float#
     -> GHC.Prim.Float#
     -> Engine.Core.World.GameObject t_awbH
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=DmdType SLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [226 0 0 0] 309 160}]
Engine.Object.GameObject.$wmoveObject =
  \ (@ t_awbH)
    (w_swEp :: Engine.Core.World.GameObject t_awbH)
    (ww_swEu :: GHC.Prim.Float#)
    (ww1_swEy :: GHC.Prim.Float#)
    (ww2_swEC :: GHC.Prim.Float#) ->
    case w_swEp of _ {
      Engine.Core.World.Player ds_dweX
                               ds1_dweY
                               ds2_dweZ
                               ds3_dwf0
                               ds4_dwf1 ->
        case ds_dweX
        of _ { Engine.Core.Vec.Vec3 ww7_swWN ww8_swWP ww9_swWO ->
        case ww7_swWN
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x_swWT ->
        case ww8_swWP
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_swWX ->
        case ww9_swWO
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_swX1 ->
        Engine.Core.World.Player
          @ t_awbH
          (Engine.Core.Vec.Vec3
             @ Foreign.C.Types.CFloat
             ((GHC.Types.F# (GHC.Prim.plusFloat# x_swWT ww_swEu))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x1_swWX ww1_swEy))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x2_swX1 ww2_swEC))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
          ds1_dweY
          ds2_dweZ
          ds3_dwf0
          ds4_dwf1
        }
        }
        }
        };
      Engine.Core.World.PureEntity ds_dweT ds1_dweU ds2_dweV ds3_dweW ->
        case ds_dweT
        of _ { Engine.Core.Vec.Vec3 ww7_swX7 ww8_swX9 ww9_swX8 ->
        case ww7_swX7
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x_swXd ->
        case ww8_swX9
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_swXh ->
        case ww9_swX8
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_swXl ->
        Engine.Core.World.PureEntity
          @ t_awbH
          (Engine.Core.Vec.Vec3
             @ Foreign.C.Types.CFloat
             ((GHC.Types.F# (GHC.Prim.plusFloat# x_swXd ww_swEu))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x1_swXh ww1_swEy))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x2_swXl ww2_swEC))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
          ds1_dweU
          ds2_dweV
          ds3_dweW
        }
        }
        }
        };
      Engine.Core.World.EffectfulEntity ds_dwf2
                                        ds1_dwf3
                                        ds2_dwf4
                                        ds3_dwf5 ->
        case ds_dwf2
        of _ { Engine.Core.Vec.Vec3 ww7_swXr ww8_swXt ww9_swXs ->
        case ww7_swXr
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x_swXx ->
        case ww8_swXt
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_swXB ->
        case ww9_swXs
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_swXF ->
        Engine.Core.World.EffectfulEntity
          @ t_awbH
          (Engine.Core.Vec.Vec3
             @ Foreign.C.Types.CFloat
             ((GHC.Types.F# (GHC.Prim.plusFloat# x_swXx ww_swEu))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x1_swXB ww1_swEy))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x2_swXF ww2_swEC))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
          ds1_dwf3
          ds2_dwf4
          ds3_dwf5
        }
        }
        }
        }
    }

Engine.Object.GameObject.moveObject [InlPrag=INLINE[0]]
  :: forall t_awbH.
     Engine.Core.World.GameObject t_awbH
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.World.GameObject t_awbH
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType SU(U(L)U(L)U(L)),
 Unf=Unf{Src=Worker=Engine.Object.GameObject.$wmoveObject,
         TopLvl=True, Arity=2, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_awbH)
                 (w_swEp [Occ=Once] :: Engine.Core.World.GameObject t_awbH)
                 (w1_swEq [Occ=Once!]
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 case w1_swEq
                 of _
                 { Engine.Core.Vec.Vec3 ww_swEs [Occ=Once]
                                        ww1_swEw [Occ=Once]
                                        ww2_swEA [Occ=Once] ->
                 case ww_swEs
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww4_swEu [Occ=Once] ->
                 case ww1_swEw
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww6_swEy [Occ=Once] ->
                 case ww2_swEA
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww8_swEC [Occ=Once] ->
                 Engine.Object.GameObject.$wmoveObject
                   @ t_awbH w_swEp ww4_swEu ww6_swEy ww8_swEC
                 }
                 }
                 }
                 }}]
Engine.Object.GameObject.moveObject =
  \ (@ t_awbH)
    (w_swEp :: Engine.Core.World.GameObject t_awbH)
    (w1_swEq
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case w1_swEq
    of _ { Engine.Core.Vec.Vec3 ww_swEs ww1_swEw ww2_swEA ->
    case ww_swEs
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww4_swXJ ->
    case ww1_swEw
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww6_swXN ->
    case ww2_swEA
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww8_swXR ->
    Engine.Object.GameObject.$wmoveObject
      @ t_awbH w_swEp ww4_swXJ ww6_swXN ww8_swXR
    }
    }
    }
    }



[14 of 17] Compiling Engine.Object.Player ( Engine/Object/Player.hs, Engine/Object/Player.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 1,138, types: 1,540, coercions: 345}

Engine.Object.Player.applyTransformations1
  :: forall t_d.
     Engine.Core.World.GameObject t_d
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0] 483 0}]
Engine.Object.Player.applyTransformations1 =
  \ (@ t_d)
    (player_ayrE :: Engine.Core.World.GameObject t_d)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glPushAttrib
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLbitfield
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds3_ayZU ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_ayZZ
           ds3_ayZU (__word 4096) eta_B1
    of _ { (# ds7_az04 #) ->
    case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glRotatef
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat
               -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
               -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
               -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CFloat>
                    -> <Foreign.C.Types.NTCo:CFloat>
                    -> <Foreign.C.Types.NTCo:CFloat>
                    -> <Foreign.C.Types.NTCo:CFloat>
                    -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CFloat
                       -> Foreign.C.Types.CFloat
                       -> Foreign.C.Types.CFloat
                       -> Foreign.C.Types.CFloat
                       -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Types.Float
                       -> GHC.Types.Float
                       -> GHC.Types.Float
                       -> GHC.Types.Float
                       -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds6_az1k ->
    case player_ayrE of _ {
      __DEFAULT ->
        case Engine.Core.World.playerRotation1 of wild2_00 { };
      Engine.Core.World.Player ds1_dl1y
                               ds4_dl1z
                               ds8_dl1A
                               ds9_dl1B
                               ds10_dl1C ->
        case ds4_dl1z
        of _ { Engine.Core.Vec.Vec3 xr_szuy yr_szuA zr_szuz ->
        case xr_szuy
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# ds12_szuE ->
        case yr_szuA
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# ds14_szuI ->
        case zr_szuz
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# ds16_szuM ->
        case ds1_dl1y of _ { Engine.Core.Vec.Vec3 x_szuS y_szuU z_szuT ->
        case x_szuS
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_szuY ->
        case y_szuU
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_szv2 ->
        case z_szuT
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x3_szzd ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_az1B
               ds6_az1k
               ds12_szuE
               (__float -1.0)
               (__float 0.0)
               (__float 0.0)
               ds7_az04
        of _ { (# ds17_az1G #) ->
        case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glRotatef
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Types.Float
                           -> GHC.Types.Float
                           -> GHC.Types.Float
                           -> GHC.Types.Float
                           -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds19_Xz2I ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_az1B
               ds19_Xz2I
               ds14_szuI
               (__float 0.0)
               (__float -1.0)
               (__float 0.0)
               ds17_az1G
        of _ { (# ds20_Xz3b #) ->
        case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glRotatef
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Types.Float
                           -> GHC.Types.Float
                           -> GHC.Types.Float
                           -> GHC.Types.Float
                           -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds22_Xz2S ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_az1B
               ds22_Xz2S
               ds16_szuM
               (__float 0.0)
               (__float 0.0)
               (__float -1.0)
               ds20_Xz3b
        of _ { (# ds23_Xz3l #) ->
        case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glTranslatef
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Types.Float
                           -> GHC.Types.Float -> GHC.Types.Float -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds25_az0L ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_az0Y
               ds25_az0L
               (GHC.Prim.negateFloat# x1_szuY)
               (GHC.Prim.negateFloat# x2_szv2)
               (GHC.Prim.negateFloat# x3_szzd)
               ds23_Xz3l
        of _ { (# ds26_az13 #) ->
        Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.glPopAttrib1
          ds26_az13
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
    }
    }
    }
    }

Engine.Object.Player.applyTransformations
  :: forall t_ayqw.
     Engine.Core.World.GameObject t_ayqw -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.applyTransformations =
  Engine.Object.Player.applyTransformations1
  `cast` (forall t_d.
          <Engine.Core.World.GameObject t_d>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_d.
              Engine.Core.World.GameObject t_d
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_d. Engine.Core.World.GameObject t_d -> GHC.Types.IO ()))

lvl_rzDl :: [GHC.Types.Char]
[GblId]
lvl_rzDl =
  GHC.CString.unpackCString#
    "Player.moveFromLook can only be used on Players."

Engine.Object.Player.moveFromLook1
  :: forall t_y. Engine.Core.World.GameObject t_y
[GblId, Str=DmdType b]
Engine.Object.Player.moveFromLook1 =
  \ (@ t_y) ->
    GHC.Err.error @ (Engine.Core.World.GameObject t_y) lvl_rzDl

Engine.Object.Player.$wmoveFromLook
  :: forall t_ayqA.
     Engine.Core.World.GameObject t_ayqA
     -> GHC.Prim.Float#
     -> GHC.Prim.Float#
     -> GHC.Prim.Float#
     -> Engine.Core.World.GameObject t_ayqA
[GblId,
 Arity=4,
 Str=DmdType SLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0 0 0] 161 60}]
Engine.Object.Player.$wmoveFromLook =
  \ (@ t_ayqA)
    (w_szl2 :: Engine.Core.World.GameObject t_ayqA)
    (ww_szl7 :: GHC.Prim.Float#)
    (ww1_szlb :: GHC.Prim.Float#)
    (ww2_szlf :: GHC.Prim.Float#) ->
    case w_szl2 of _ {
      __DEFAULT -> Engine.Object.Player.moveFromLook1 @ t_ayqA;
      Engine.Core.World.Player ds_dySu
                               ds1_dySv
                               ds2_dySw
                               ds3_dySx
                               ds4_dySy ->
        case ds1_dySv
        of wild1_szve { Engine.Core.Vec.Vec3 ds5_szvd rry_szvb ds6_szvc ->
        case rry_szvb
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x_szvh ->
        case ds_dySu
        of _ { Engine.Core.Vec.Vec3 ww7_szvn ww8_szvp ww9_szvo ->
        case ww7_szvn
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_szvt ->
        case ww8_szvp
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_szvx ->
        case ww9_szvo
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x3_szvB ->
        Engine.Core.World.Player
          @ t_ayqA
          (Engine.Core.Vec.Vec3
             @ Foreign.C.Types.CFloat
             ((GHC.Types.F#
                 (GHC.Prim.plusFloat#
                    x1_szvt
                    (GHC.Prim.plusFloat#
                       (GHC.Prim.timesFloat#
                          ww_szl7
                          (GHC.Prim.sinFloat#
                             (GHC.Prim.timesFloat#
                                (GHC.Prim.minusFloat# x_szvh (__float 90.0))
                                (__float 1.7453292e-2))))
                       (GHC.Prim.timesFloat#
                          ww2_szlf
                          (GHC.Prim.sinFloat#
                             (GHC.Prim.timesFloat# x_szvh (__float 1.7453292e-2)))))))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x2_szvx ww1_szlb))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F#
                 (GHC.Prim.plusFloat#
                    x3_szvB
                    (GHC.Prim.plusFloat#
                       (GHC.Prim.timesFloat#
                          ww_szl7
                          (GHC.Prim.cosFloat#
                             (GHC.Prim.timesFloat#
                                (GHC.Prim.minusFloat# x_szvh (__float 90.0))
                                (__float 1.7453292e-2))))
                       (GHC.Prim.timesFloat#
                          ww2_szlf
                          (GHC.Prim.cosFloat#
                             (GHC.Prim.timesFloat# x_szvh (__float 1.7453292e-2)))))))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
          wild1_szve
          ds2_dySw
          ds3_dySx
          ds4_dySy
        }
        }
        }
        }
        }
        }
    }

Engine.Object.Player.moveFromLook [InlPrag=INLINE[0]]
  :: forall t_ayqA.
     Engine.Core.World.GameObject t_ayqA
     -> Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
     -> Engine.Core.World.GameObject t_ayqA
[GblId,
 Arity=2,
 Str=DmdType SU(U(L)U(L)U(L)),
 Unf=Unf{Src=Worker=Engine.Object.Player.$wmoveFromLook,
         TopLvl=True, Arity=2, Value=True, ConLike=True, WorkFree=True,
         Expandable=True, Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_ayqA)
                 (w_szl2 [Occ=Once] :: Engine.Core.World.GameObject t_ayqA)
                 (w1_szl3 [Occ=Once!]
                    :: Engine.Core.Vec.Vec3
                         Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
                 case w1_szl3
                 of _
                 { Engine.Core.Vec.Vec3 ww_szl5 [Occ=Once]
                                        ww1_szl9 [Occ=Once]
                                        ww2_szld [Occ=Once] ->
                 case ww_szl5
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww4_szl7 [Occ=Once] ->
                 case ww1_szl9
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww6_szlb [Occ=Once] ->
                 case ww2_szld
                      `cast` (<Foreign.C.Types.NTCo:CFloat>
                              :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                 of _ { GHC.Types.F# ww8_szlf [Occ=Once] ->
                 Engine.Object.Player.$wmoveFromLook
                   @ t_ayqA w_szl2 ww4_szl7 ww6_szlb ww8_szlf
                 }
                 }
                 }
                 }}]
Engine.Object.Player.moveFromLook =
  \ (@ t_ayqA)
    (w_szl2 :: Engine.Core.World.GameObject t_ayqA)
    (w1_szl3
       :: Engine.Core.Vec.Vec3
            Graphics.Rendering.OpenGL.Raw.Types.GLfloat) ->
    case w1_szl3
    of _ { Engine.Core.Vec.Vec3 ww_szl5 ww1_szl9 ww2_szld ->
    case ww_szl5
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww4_szvF ->
    case ww1_szl9
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww6_szvJ ->
    case ww2_szld
         `cast` (<Foreign.C.Types.NTCo:CFloat>
                 :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
    of _ { GHC.Types.F# ww8_szvN ->
    Engine.Object.Player.$wmoveFromLook
      @ t_ayqA w_szl2 ww4_szvF ww6_szvJ ww8_szvN
    }
    }
    }
    }

Engine.Object.Player.aIn3 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Object.Player.aIn3 = GHC.Types.F# (__float 0.0)

Engine.Object.Player.baseInput23 :: GHC.Types.Float
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.baseInput23 = Engine.Object.Player.aIn3

Engine.Object.Player.baseInput22
  :: forall t_tS.
     Engine.Core.World.World t_tS
     -> Engine.Core.World.GameObject t_tS
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tS #)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_tS)
                 _
                 (p_ayqS [Occ=Once!] :: Engine.Core.World.GameObject t_tS)
                 (s_a3Uq [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s_a3Uq,
                    case p_ayqS of wild_XG {
                      __DEFAULT -> case Engine.Core.World.playerSpeed1 of _ { };
                      Engine.Core.World.Player _ _ ds3_dl1J [Occ=Once] _ _ ->
                        case ds3_dl1J
                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                        of _ { GHC.Types.F# x_XlOk [Occ=Once] ->
                        Engine.Object.Player.moveFromLook
                          @ t_tS
                          wild_XG
                          (Engine.Core.Vec.Vec3
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             ((GHC.Types.F# (GHC.Prim.negateFloat# x_XlOk))
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                             (Engine.Object.Player.aIn3
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                             (Engine.Object.Player.baseInput23
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
                        }
                    } #)}]
Engine.Object.Player.baseInput22 =
  \ (@ t_tS)
    _
    (p_ayqS :: Engine.Core.World.GameObject t_tS)
    (s_a3Uq :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    (# s_a3Uq,
       case p_ayqS of _ {
         __DEFAULT -> case Engine.Core.World.playerSpeed1 of wild1_00 { };
         Engine.Core.World.Player ds1_dl1H
                                  ds2_dl1I
                                  ds3_dl1J
                                  ds4_dl1K
                                  ds5_dl1L ->
           case ds3_dl1J
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of wild1_szvS { GHC.Types.F# x_szvR ->
           case ds2_dl1I
           of wild2_szw0 { Engine.Core.Vec.Vec3 ds6_szvZ rry_szvX ds7_szvY ->
           case rry_szvX
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x1_szw3 ->
           case ds1_dl1H
           of _ { Engine.Core.Vec.Vec3 ww7_szw9 ww8_szwb ww9_szwa ->
           case ww7_szw9
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x2_szwf ->
           case ww8_szwb
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x3_szwj ->
           case ww9_szwa
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x4_szwn ->
           let {
             ww_szl7 :: GHC.Prim.Float#
             [LclId]
             ww_szl7 = GHC.Prim.negateFloat# x_szvR } in
           Engine.Core.World.Player
             @ t_tS
             (Engine.Core.Vec.Vec3
                @ Foreign.C.Types.CFloat
                ((GHC.Types.F#
                    (GHC.Prim.plusFloat#
                       x2_szwf
                       (GHC.Prim.plusFloat#
                          (GHC.Prim.timesFloat#
                             ww_szl7
                             (GHC.Prim.sinFloat#
                                (GHC.Prim.timesFloat#
                                   (GHC.Prim.minusFloat# x1_szw3 (__float 90.0))
                                   (__float 1.7453292e-2))))
                          (GHC.Prim.timesFloat#
                             (__float 0.0)
                             (GHC.Prim.sinFloat#
                                (GHC.Prim.timesFloat# x1_szw3 (__float 1.7453292e-2)))))))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# x3_szwj)
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F#
                    (GHC.Prim.plusFloat#
                       x4_szwn
                       (GHC.Prim.plusFloat#
                          (GHC.Prim.timesFloat#
                             ww_szl7
                             (GHC.Prim.cosFloat#
                                (GHC.Prim.timesFloat#
                                   (GHC.Prim.minusFloat# x1_szw3 (__float 90.0))
                                   (__float 1.7453292e-2))))
                          (GHC.Prim.timesFloat#
                             (__float 0.0)
                             (GHC.Prim.cosFloat#
                                (GHC.Prim.timesFloat# x1_szw3 (__float 1.7453292e-2)))))))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
             wild2_szw0
             (wild1_szvS
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ds4_dl1K
             ds5_dl1L
           }
           }
           }
           }
           }
           }
           }
       } #)

Engine.Object.Player.dIn
  :: forall t_ayqF.
     Engine.Core.World.World t_ayqF
     -> Engine.Core.World.GameObject t_ayqF
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqF)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Object.Player.baseInput22
               `cast` (forall t_tS.
                       <Engine.Core.World.World t_tS>
                       -> <Engine.Core.World.GameObject t_tS>
                       -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tS>)>
                       :: (forall t_tS.
                           Engine.Core.World.World t_tS
                           -> Engine.Core.World.GameObject t_tS
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Engine.Core.World.GameObject t_tS #))
                            ~#
                          (forall t_tS.
                           Engine.Core.World.World t_tS
                           -> Engine.Core.World.GameObject t_tS
                           -> GHC.Types.IO (Engine.Core.World.GameObject t_tS)))}]
Engine.Object.Player.dIn =
  Engine.Object.Player.baseInput22
  `cast` (forall t_tS.
          <Engine.Core.World.World t_tS>
          -> <Engine.Core.World.GameObject t_tS>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tS>)>
          :: (forall t_tS.
              Engine.Core.World.World t_tS
              -> Engine.Core.World.GameObject t_tS
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_tS #))
               ~#
             (forall t_tS.
              Engine.Core.World.World t_tS
              -> Engine.Core.World.GameObject t_tS
              -> GHC.Types.IO (Engine.Core.World.GameObject t_tS)))

Engine.Object.Player.aIn4 :: GHC.Types.Float
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.aIn4 = Engine.Object.Player.aIn3

Engine.Object.Player.aIn2 :: GHC.Types.Float
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.aIn2 = Engine.Object.Player.aIn3

Engine.Object.Player.aIn1
  :: forall t_tY.
     Engine.Core.World.World t_tY
     -> Engine.Core.World.GameObject t_tY
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tY #)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_tY)
                 _
                 (p_ayqR [Occ=Once!] :: Engine.Core.World.GameObject t_tY)
                 (s_a3Uq [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s_a3Uq,
                    case p_ayqR of wild_XG {
                      __DEFAULT -> case Engine.Core.World.playerSpeed1 of _ { };
                      Engine.Core.World.Player _ _ ds3_dl1J [Occ=Once] _ _ ->
                        Engine.Object.Player.moveFromLook
                          @ t_tY
                          wild_XG
                          (Engine.Core.Vec.Vec3
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             ds3_dl1J
                             (Engine.Object.Player.aIn4
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                             (Engine.Object.Player.aIn2
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
                    } #)}]
Engine.Object.Player.aIn1 =
  \ (@ t_tY)
    _
    (p_ayqR :: Engine.Core.World.GameObject t_tY)
    (s_a3Uq :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    (# s_a3Uq,
       case p_ayqR of wild_XG {
         __DEFAULT -> case Engine.Core.World.playerSpeed1 of wild1_00 { };
         Engine.Core.World.Player ds1_dl1H
                                  ds2_dl1I
                                  ds3_dl1J
                                  ds4_dl1K
                                  ds5_dl1L ->
           case ds3_dl1J
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# ww1_szwr ->
           Engine.Object.Player.$wmoveFromLook
             @ t_tY wild_XG ww1_szwr (__float 0.0) (__float 0.0)
           }
       } #)

Engine.Object.Player.aIn
  :: forall t_ayqG.
     Engine.Core.World.World t_ayqG
     -> Engine.Core.World.GameObject t_ayqG
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqG)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Object.Player.aIn1
               `cast` (forall t_tY.
                       <Engine.Core.World.World t_tY>
                       -> <Engine.Core.World.GameObject t_tY>
                       -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tY>)>
                       :: (forall t_tY.
                           Engine.Core.World.World t_tY
                           -> Engine.Core.World.GameObject t_tY
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Engine.Core.World.GameObject t_tY #))
                            ~#
                          (forall t_tY.
                           Engine.Core.World.World t_tY
                           -> Engine.Core.World.GameObject t_tY
                           -> GHC.Types.IO (Engine.Core.World.GameObject t_tY)))}]
Engine.Object.Player.aIn =
  Engine.Object.Player.aIn1
  `cast` (forall t_tY.
          <Engine.Core.World.World t_tY>
          -> <Engine.Core.World.GameObject t_tY>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tY>)>
          :: (forall t_tY.
              Engine.Core.World.World t_tY
              -> Engine.Core.World.GameObject t_tY
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_tY #))
               ~#
             (forall t_tY.
              Engine.Core.World.World t_tY
              -> Engine.Core.World.GameObject t_tY
              -> GHC.Types.IO (Engine.Core.World.GameObject t_tY)))

lvl1_rzDm :: forall t_j. Engine.Core.World.GameObject t_j
[GblId, Str=DmdType b]
lvl1_rzDm =
  \ (@ t_j) ->
    Control.Exception.Base.patError
      @ (Engine.Core.World.GameObject t_j)
      "Engine/Object/Player.hs:137:22-63|record update"

lvl2_rzDn :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl2_rzDn =
  GHC.CString.unpackCString#
    "Player.playerKeyUpdateTailSafe is meant to be used only on Players."

lvl3_rzDo
  :: forall t_j. GHC.Types.IO (Engine.Core.World.GameObject t_j)
[GblId, Str=DmdType b]
lvl3_rzDo =
  \ (@ t_j) ->
    GHC.Err.error
      @ (GHC.Types.IO (Engine.Core.World.GameObject t_j)) lvl2_rzDn

Rec {
Engine.Object.Player.mkPlayer3 [Occ=LoopBreaker]
  :: forall t_j.
     Engine.Core.World.World t_j
     -> Engine.Core.World.GameObject t_j
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_j #)
[GblId, Arity=3, Str=DmdType LSL]
Engine.Object.Player.mkPlayer3 =
  \ (@ t_j)
    (w_ayrt :: Engine.Core.World.World t_j)
    (p_ayru :: Engine.Core.World.GameObject t_j)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case p_ayru of wild_Xm {
      __DEFAULT -> case lvl3_rzDo of wild1_00 { };
      Engine.Core.World.Player ds_dyQL
                               ds1_dyQM
                               ds2_dyQN
                               ds3_dyQO
                               ds4_dyQP ->
        case ds4_dyQP
        of _ { Engine.Core.World.Input ds5_szwy mouse_szwA lm_szwz ->
        case ds5_szwy of _ {
          [] -> (# eta_B1, wild_Xm #);
          : ds6_dyQR xs_ayrx ->
            case ds6_dyQR of _ { (ds7_dyQS, isDown_ayrv, func_ayrw) ->
            let {
              $j_sz2R
                :: GHC.Prim.State# GHC.Prim.RealWorld
                   -> Engine.Core.World.GameObject t_j
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                         Engine.Core.World.GameObject t_j #)
              [LclId, Arity=2, Str=DmdType LL]
              $j_sz2R =
                \ (ipv_a3Ui :: GHC.Prim.State# GHC.Prim.RealWorld)
                  (ipv1_a3Uj :: Engine.Core.World.GameObject t_j) ->
                  case w_ayrt
                  of wild4_XL
                  { Engine.Core.World.World ds8_dl17 ds9_dl18 ds10_dl19 ds11_dl1a ->
                  case Engine.Object.GameObject.isIntersectingAny1
                         @ t_j ipv1_a3Uj ds9_dl18 ipv_a3Ui
                  of _ { (# ipv2_X3Yd, ipv3_X3Yf #) ->
                  case ipv3_X3Yf of _ {
                    GHC.Types.False ->
                      case ipv1_a3Uj of _ {
                        __DEFAULT -> case lvl1_rzDm of wild7_00 { };
                        Engine.Core.World.Player ds13_dyQC
                                                 ds14_dyQD
                                                 ds15_dyQE
                                                 ds16_dyQF
                                                 ds17_dyQG ->
                          case xs_ayrx of tpl_X6 { __DEFAULT ->
                          Engine.Object.Player.mkPlayer3
                            @ t_j
                            wild4_XL
                            (Engine.Core.World.Player
                               @ t_j
                               ds13_dyQC
                               ds14_dyQD
                               ds15_dyQE
                               ds16_dyQF
                               (Engine.Core.World.Input @ t_j tpl_X6 mouse_szwA lm_szwz))
                            ipv2_X3Yd
                          }
                      };
                    GHC.Types.True ->
                      case xs_ayrx of tpl_X6 { __DEFAULT ->
                      Engine.Object.Player.mkPlayer3
                        @ t_j
                        wild4_XL
                        (Engine.Core.World.Player
                           @ t_j
                           ds_dyQL
                           ds1_dyQM
                           ds2_dyQN
                           ds3_dyQO
                           (Engine.Core.World.Input @ t_j tpl_X6 mouse_szwA lm_szwz))
                        ipv2_X3Yd
                      }
                  }
                  }
                  } } in
            case isDown_ayrv of _ {
              GHC.Types.False -> $j_sz2R eta_B1 wild_Xm;
              GHC.Types.True ->
                case ((func_ayrw w_ayrt wild_Xm)
                      `cast` (<GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_j>>
                              :: GHC.Types.IO (Engine.Core.World.GameObject t_j)
                                   ~#
                                 (GHC.Prim.State# GHC.Prim.RealWorld
                                  -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                        Engine.Core.World.GameObject t_j #))))
                       eta_B1
                of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
                $j_sz2R ipv_a3Ui ipv1_a3Uj
                }
            }
            }
        }
        }
    }
end Rec }

Engine.Object.Player.playerKeyUpdateTailSafe
  :: forall t_ayqx.
     Engine.Core.World.World t_ayqx
     -> Engine.Core.World.GameObject t_ayqx
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqx)
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.playerKeyUpdateTailSafe =
  Engine.Object.Player.mkPlayer3
  `cast` (forall t_j.
          <Engine.Core.World.World t_j>
          -> <Engine.Core.World.GameObject t_j>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_j>)>
          :: (forall t_j.
              Engine.Core.World.World t_j
              -> Engine.Core.World.GameObject t_j
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_j #))
               ~#
             (forall t_j.
              Engine.Core.World.World t_j
              -> Engine.Core.World.GameObject t_j
              -> GHC.Types.IO (Engine.Core.World.GameObject t_j)))

Engine.Object.Player.mkPlayer2
  :: forall t_p. Engine.Core.World.GameObject t_p
[GblId, Str=DmdType b]
Engine.Object.Player.mkPlayer2 =
  \ (@ t_p) ->
    Control.Exception.Base.patError
      @ (Engine.Core.World.GameObject t_p)
      "Engine/Object/Player.hs:122:12-48|record update"

Engine.Object.Player.playerKeyUpdateSafe1
  :: forall t_p.
     Engine.Core.World.World t_p
     -> Engine.Core.World.GameObject t_p
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_p #)
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 30 0] 100 30}]
Engine.Object.Player.playerKeyUpdateSafe1 =
  \ (@ t_p)
    (world_ayrq :: Engine.Core.World.World t_p)
    (player_ayrr :: Engine.Core.World.GameObject t_p)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Object.Player.mkPlayer3
           @ t_p world_ayrq player_ayrr eta_B1
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    (# ipv_a3Ui,
       case ipv1_a3Uj of _ {
         __DEFAULT -> Engine.Object.Player.mkPlayer2 @ t_p;
         Engine.Core.World.Player ds_dyR1
                                  ds2_dyR2
                                  ds3_dyR3
                                  ds4_dyR4
                                  ds5_dyR5 ->
           case player_ayrr of _ {
             __DEFAULT -> case Engine.Core.World.playerInput1 of wild2_00 { };
             Engine.Core.World.Player ds6_dl1Z
                                      ds7_dl20
                                      ds8_dl21
                                      ds9_dl22
                                      ds10_dl23 ->
               Engine.Core.World.Player
                 @ t_p ds_dyR1 ds2_dyR2 ds3_dyR3 ds4_dyR4 ds10_dl23
           }
       } #)
    }

Engine.Object.Player.playerKeyUpdateSafe
  :: forall t_ayqy.
     Engine.Core.World.World t_ayqy
     -> Engine.Core.World.GameObject t_ayqy
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqy)
[GblId,
 Arity=3,
 Str=DmdType LSL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.playerKeyUpdateSafe =
  Engine.Object.Player.playerKeyUpdateSafe1
  `cast` (forall t_p.
          <Engine.Core.World.World t_p>
          -> <Engine.Core.World.GameObject t_p>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_p>)>
          :: (forall t_p.
              Engine.Core.World.World t_p
              -> Engine.Core.World.GameObject t_p
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_p #))
               ~#
             (forall t_p.
              Engine.Core.World.World t_p
              -> Engine.Core.World.GameObject t_p
              -> GHC.Types.IO (Engine.Core.World.GameObject t_p)))

Engine.Object.Player.playerMouseUpdate5 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Object.Player.playerMouseUpdate5 =
  GHC.Types.F# (__float 90.0)

Engine.Object.Player.playerMouseUpdate4 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Object.Player.playerMouseUpdate4 =
  GHC.Types.F# (__float -90.0)

Engine.Object.Player.playerMouseUpdate3 :: GHC.Integer.Type.Integer
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
Engine.Object.Player.playerMouseUpdate3 = __integer 1

Engine.Object.Player.playerMouseUpdate2 :: GHC.Integer.Type.Integer
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
Engine.Object.Player.playerMouseUpdate2 = __integer 10

Engine.Object.Player.playerMouseUpdate6 :: GHC.Types.Float
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Object.Player.playerMouseUpdate6 =
  GHC.Float.$w$cfromRational1
    Engine.Object.Player.playerMouseUpdate3
    Engine.Object.Player.playerMouseUpdate2

Engine.Object.Player.playerMouseUpdate1 :: GHC.Types.Float
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
Engine.Object.Player.playerMouseUpdate1 =
  GHC.Float.$w$cfromRational1
    Engine.Object.Player.playerMouseUpdate3
    Engine.Object.Player.playerMouseUpdate2

Engine.Object.Player.playerMouseUpdate7
  :: forall t_t. Engine.Core.World.GameObject t_t
[GblId, Str=DmdType b]
Engine.Object.Player.playerMouseUpdate7 =
  \ (@ t_t) ->
    Control.Exception.Base.patError
      @ (Engine.Core.World.GameObject t_t)
      "Engine/Object/Player.hs:116:8-62|record update"

Engine.Object.Player.playerMouseUpdate
  :: forall t_ayqz.
     Engine.Core.World.GameObject t_ayqz
     -> Engine.Core.World.GameObject t_ayqz
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30] 447 60}]
Engine.Object.Player.playerMouseUpdate =
  \ (@ t_t) (player_ayr8 :: Engine.Core.World.GameObject t_t) ->
    case player_ayr8 of _ {
      __DEFAULT -> Engine.Object.Player.playerMouseUpdate7 @ t_t;
      Engine.Core.World.Player ds_dyRc
                               ds1_dyRd
                               ds2_dyRe
                               ds3_dyRf
                               ds4_dyRg ->
        case ds1_dyRd
        of _ { Engine.Core.Vec.Vec3 rx_szwG ry_szwI rz_szwH ->
        case rx_szwG
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of wild2_szwN { GHC.Types.F# x_szwM ->
        case ds4_dyRg
        of _ { Engine.Core.World.Input ds5_szwU ds6_szwS ds7_szwT ->
        case ds6_szwS
        of wild4_szx1 { Engine.Core.Vec.Vec2 rawdx_szx0 rawdy_szwZ ->
        case rawdy_szwZ
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_szx4 ->
        case ry_szwI
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_szx8 ->
        case rawdx_szx0
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x3_szxc ->
        case ds7_szwT of _ { Engine.Core.Vec.Vec2 lastX_szxl lastY_szxm ->
        case lastX_szxl
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x4_szxq ->
        case lastY_szxm
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x5_szxu ->
        case Engine.Object.Player.playerMouseUpdate6
        of _ { GHC.Types.F# y_a3UA ->
        let {
          y1_afub [Dmd=Just L] :: GHC.Prim.Float#
          [LclId, Str=DmdType]
          y1_afub = GHC.Prim.timesFloat# x1_szx4 y_a3UA } in
        case case GHC.Prim.geFloat#
                    (GHC.Prim.minusFloat# x_szwM y1_afub) (__float -90.0)
             of _ {
               GHC.Types.False ->
                 case GHC.Prim.ltFloat#
                        (GHC.Prim.minusFloat# x_szwM y1_afub) (__float -90.0)
                 of _ {
                   GHC.Types.False ->
                     case GHC.Prim.gtFloat#
                            (GHC.Prim.minusFloat# x_szwM y1_afub) (__float 90.0)
                     of _ {
                       GHC.Types.False -> wild2_szwN;
                       GHC.Types.True -> Engine.Object.Player.playerMouseUpdate5
                     };
                   GHC.Types.True -> Engine.Object.Player.playerMouseUpdate4
                 };
               GHC.Types.True ->
                 case GHC.Prim.leFloat#
                        (GHC.Prim.minusFloat# x_szwM y1_afub) (__float 90.0)
                 of _ {
                   GHC.Types.False ->
                     case GHC.Prim.ltFloat#
                            (GHC.Prim.minusFloat# x_szwM y1_afub) (__float -90.0)
                     of _ {
                       GHC.Types.False ->
                         case GHC.Prim.gtFloat#
                                (GHC.Prim.minusFloat# x_szwM y1_afub) (__float 90.0)
                         of _ {
                           GHC.Types.False -> wild2_szwN;
                           GHC.Types.True -> Engine.Object.Player.playerMouseUpdate5
                         };
                       GHC.Types.True -> Engine.Object.Player.playerMouseUpdate4
                     };
                   GHC.Types.True ->
                     GHC.Types.F# (GHC.Prim.minusFloat# x_szwM y1_afub)
                 }
             }
        of nt_sz41 { GHC.Types.F# ipv_sz42 ->
        case Engine.Object.Player.playerMouseUpdate1
        of _ { GHC.Types.F# y2_X3WO ->
        let {
          y3_aftj [Dmd=Just L] :: GHC.Prim.Float#
          [LclId, Str=DmdType]
          y3_aftj =
            GHC.Prim.negateFloat# (GHC.Prim.timesFloat# x3_szxc y2_X3WO) } in
        case case GHC.Prim.geFloat#
                    (GHC.Prim.plusFloat# x2_szx8 y3_aftj) (__float 360.0)
             of _ {
               GHC.Types.False ->
                 case GHC.Prim.ltFloat#
                        (GHC.Prim.plusFloat# y3_aftj x2_szx8) (__float 0.0)
                 of _ {
                   GHC.Types.False ->
                     GHC.Types.F# (GHC.Prim.plusFloat# x2_szx8 y3_aftj);
                   GHC.Types.True ->
                     GHC.Types.F#
                       (GHC.Prim.plusFloat#
                          (GHC.Prim.minusFloat# (__float 360.0) x2_szx8) y3_aftj)
                 };
               GHC.Types.True ->
                 GHC.Types.F#
                   (GHC.Prim.minusFloat#
                      (GHC.Prim.plusFloat# x2_szx8 y3_aftj) (__float 360.0))
             }
        of nt1_szxh { GHC.Types.F# ipv1_szxg ->
        Engine.Core.World.Player
          @ t_t
          ds_dyRc
          (Engine.Core.Vec.Vec3
             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
             (nt_sz41
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             (nt1_szxh
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             rz_szwH)
          ds2_dyRe
          ds3_dyRf
          (Engine.Core.World.Input
             @ t_t
             ds5_szwU
             wild4_szx1
             (Engine.Core.Vec.Vec2
                @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                ((GHC.Types.F# (GHC.Prim.plusFloat# x4_szxq x3_szxc))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# (GHC.Prim.plusFloat# x5_szxu x1_szx4))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))))
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
    }

Engine.Object.Player.mkPlayer4
  :: forall t_t16. Engine.Core.World.GameObject t_t16
[GblId, Str=DmdType b]
Engine.Object.Player.mkPlayer4 =
  \ (@ t_t16) ->
    Control.Exception.Base.patError
      @ (Engine.Core.World.GameObject t_t16)
      "Engine/Object/Player.hs:25:16-37|record update"

Engine.Object.Player.$wa2
  :: forall t_t16.
     GHC.Prim.MutVar#
       GHC.Prim.RealWorld (Engine.Core.World.GameObject t_t16)
     -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_t16)]
     -> [Engine.Graphics.Shaders.ShaderUniform]
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld Engine.Core.World.WorldState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_t16 #)
[GblId,
 Arity=5,
 Str=DmdType LU(L*)U(L*)LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0] 233 30}]
Engine.Object.Player.$wa2 =
  \ (@ t_t16)
    (ww_szlp
       :: GHC.Prim.MutVar#
            GHC.Prim.RealWorld (Engine.Core.World.GameObject t_t16))
    (ww1_szlr
       :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_t16)])
    (ww2_szls :: [Engine.Graphics.Shaders.ShaderUniform])
    (ww3_szlv
       :: GHC.Prim.MutVar#
            GHC.Prim.RealWorld Engine.Core.World.WorldState)
    (w_szly :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.readMutVar#
           @ GHC.Prim.RealWorld
           @ (Engine.Core.World.GameObject t_t16)
           ww_szlp
           w_szly
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case GHC.Prim.readMutVar#
           @ GHC.Prim.RealWorld
           @ Engine.Core.World.WorldState
           ww3_szlv
           ipv_a3Ui
    of _ { (# ipv2_X3Yw, ipv3_X3Yy #) ->
    case ipv1_a3Uj of _ {
      __DEFAULT -> case Engine.Object.Player.mkPlayer4 of wild1_00 { };
      Engine.Core.World.Player ds_dySY
                               ds3_dySZ
                               ds4_dyT0
                               ds5_dyT1
                               ds6_dyT2 ->
        case ds4_dyT0
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of wild1_szxz { GHC.Types.F# x_szxy ->
        case ipv3_X3Yy
        of _ { Engine.Core.World.WorldState ds7_dl3z ds8_dl3A ds9_dl3B ->
        case ds9_dl3B
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y_szxC ->
        let {
          player_ayrr [Dmd=Just S] :: Engine.Core.World.GameObject t_t16
          [LclId, Str=DmdType]
          player_ayrr =
            Engine.Object.Player.playerMouseUpdate
              @ t_t16
              (Engine.Core.World.Player
                 @ t_t16
                 ds_dySY
                 ds3_dySZ
                 ((GHC.Types.F# (GHC.Prim.timesFloat# x_szxy y_szxC))
                  `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                          :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                 ds5_dyT1
                 ds6_dyT2) } in
        case Engine.Object.Player.mkPlayer3
               @ t_t16
               (Engine.Core.World.World
                  @ t_t16
                  ((GHC.STRef.STRef
                      @ GHC.Prim.RealWorld
                      @ (Engine.Core.World.GameObject t_t16)
                      ww_szlp)
                   `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.GameObject
                                                           t_t16>
                           :: GHC.STRef.STRef
                                GHC.Prim.RealWorld (Engine.Core.World.GameObject t_t16)
                                ~#
                              GHC.IORef.IORef (Engine.Core.World.GameObject t_t16)))
                  ww1_szlr
                  ww2_szls
                  ((GHC.STRef.STRef
                      @ GHC.Prim.RealWorld @ Engine.Core.World.WorldState ww3_szlv)
                   `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.WorldState>
                           :: GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState
                                ~#
                              GHC.IORef.IORef Engine.Core.World.WorldState)))
               player_ayrr
               ipv2_X3Yw
        of _ { (# ipv4_X3YC, ipv5_X3YE #) ->
        (# ipv4_X3YC,
           case ipv5_X3YE of _ {
             __DEFAULT -> case Engine.Object.Player.mkPlayer2 of wild5_00 { };
             Engine.Core.World.Player ds11_dyR1
                                      ds12_dyR2
                                      ds13_dyR3
                                      ds14_dyR4
                                      ds15_dyR5 ->
               case player_ayrr of _ {
                 __DEFAULT -> case Engine.Core.World.playerInput1 of wild6_00 { };
                 Engine.Core.World.Player ds16_dl1Z
                                          ds17_dl20
                                          ds18_dl21
                                          ds19_dl22
                                          ds20_dl23 ->
                   Engine.Core.World.Player
                     @ t_t16
                     ds11_dyR1
                     ds12_dyR2
                     (wild1_szxz
                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                     ds14_dyR4
                     ds20_dl23
               }
           } #)
        }
        }
        }
        }
    }
    }
    }

Engine.Object.Player.mkPlayer1 [InlPrag=INLINE[0]]
  :: forall t_t16.
     Engine.Core.World.World t_t16
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_t16 #)
[GblId,
 Arity=2,
 Str=DmdType U(U(L)U(L*)U(L*)U(L))L,
 Unf=Unf{Src=Worker=Engine.Object.Player.$wa2, TopLvl=True, Arity=2,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_t16)
                 (w_szll [Occ=Once!] :: Engine.Core.World.World t_t16)
                 (w1_szly [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_szll
                 of _
                 { Engine.Core.World.World ww_szln [Occ=Once]
                                           ww1_szlr [Occ=Once]
                                           ww2_szls [Occ=Once]
                                           ww3_szlt [Occ=Once] ->
                 case ww_szln
                      `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_t16>
                              :: GHC.IORef.IORef (Engine.Core.World.GameObject t_t16)
                                   ~#
                                 GHC.STRef.STRef
                                   GHC.Prim.RealWorld (Engine.Core.World.GameObject t_t16))
                 of _ { GHC.STRef.STRef ww5_szlp [Occ=Once] ->
                 case ww3_szlt
                      `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                              :: GHC.IORef.IORef Engine.Core.World.WorldState
                                   ~#
                                 GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
                 of _ { GHC.STRef.STRef ww7_szlv [Occ=Once] ->
                 Engine.Object.Player.$wa2
                   @ t_t16 ww5_szlp ww1_szlr ww2_szls ww7_szlv w1_szly
                 }
                 }
                 }}]
Engine.Object.Player.mkPlayer1 =
  \ (@ t_t16)
    (w_szll :: Engine.Core.World.World t_t16)
    (w1_szly :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_szll
    of _
    { Engine.Core.World.World ww_szln ww1_szlr ww2_szls ww3_szlt ->
    case ww_szln
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_t16>
                 :: GHC.IORef.IORef (Engine.Core.World.GameObject t_t16)
                      ~#
                    GHC.STRef.STRef
                      GHC.Prim.RealWorld (Engine.Core.World.GameObject t_t16))
    of _ { GHC.STRef.STRef ww5_szxG ->
    case ww3_szlt
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                 :: GHC.IORef.IORef Engine.Core.World.WorldState
                      ~#
                    GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
    of _ { GHC.STRef.STRef ww7_szxK ->
    Engine.Object.Player.$wa2
      @ t_t16 ww5_szxG ww1_szlr ww2_szls ww7_szxK w1_szly
    }
    }
    }

Engine.Object.Player.pUpdate
  :: forall t_ayqI.
     Engine.Core.World.World t_ayqI
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqI)
[GblId,
 Arity=2,
 Str=DmdType U(U(L)U(L*)U(L*)U(L))L,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Object.Player.mkPlayer1
               `cast` (forall t_t16.
                       <Engine.Core.World.World t_t16>
                       -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t16>)>
                       :: (forall t_t16.
                           Engine.Core.World.World t_t16
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Engine.Core.World.GameObject t_t16 #))
                            ~#
                          (forall t_t16.
                           Engine.Core.World.World t_t16
                           -> GHC.Types.IO (Engine.Core.World.GameObject t_t16)))}]
Engine.Object.Player.pUpdate =
  Engine.Object.Player.mkPlayer1
  `cast` (forall t_t16.
          <Engine.Core.World.World t_t16>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t16>)>
          :: (forall t_t16.
              Engine.Core.World.World t_t16
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_t16 #))
               ~#
             (forall t_t16.
              Engine.Core.World.World t_t16
              -> GHC.Types.IO (Engine.Core.World.GameObject t_t16)))

Engine.Object.Player.baseInput16 :: GHC.Types.Float
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.baseInput16 = Engine.Object.Player.aIn3

Engine.Object.Player.baseInput15 :: GHC.Types.Float
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.baseInput15 = Engine.Object.Player.aIn3

Engine.Object.Player.baseInput14
  :: forall t_tG.
     Engine.Core.World.World t_tG
     -> Engine.Core.World.GameObject t_tG
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tG #)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_tG)
                 _
                 (p_ayqU [Occ=Once!] :: Engine.Core.World.GameObject t_tG)
                 (s_a3Uq [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s_a3Uq,
                    case p_ayqU of wild_XG {
                      __DEFAULT -> case Engine.Core.World.playerSpeed1 of _ { };
                      Engine.Core.World.Player _ _ ds3_dl1J [Occ=Once] _ _ ->
                        Engine.Object.Player.moveFromLook
                          @ t_tG
                          wild_XG
                          (Engine.Core.Vec.Vec3
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             (Engine.Object.Player.baseInput16
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                             (Engine.Object.Player.baseInput15
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                             ds3_dl1J)
                    } #)}]
Engine.Object.Player.baseInput14 =
  \ (@ t_tG)
    _
    (p_ayqU :: Engine.Core.World.GameObject t_tG)
    (s_a3Uq :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    (# s_a3Uq,
       case p_ayqU of wild_XG {
         __DEFAULT -> case Engine.Core.World.playerSpeed1 of wild1_00 { };
         Engine.Core.World.Player ds1_dl1H
                                  ds2_dl1I
                                  ds3_dl1J
                                  ds4_dl1K
                                  ds5_dl1L ->
           case ds3_dl1J
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# ww1_szxO ->
           Engine.Object.Player.$wmoveFromLook
             @ t_tG wild_XG (__float 0.0) (__float 0.0) ww1_szxO
           }
       } #)

Engine.Object.Player.sIn
  :: forall t_ayqD.
     Engine.Core.World.World t_ayqD
     -> Engine.Core.World.GameObject t_ayqD
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqD)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Object.Player.baseInput14
               `cast` (forall t_tG.
                       <Engine.Core.World.World t_tG>
                       -> <Engine.Core.World.GameObject t_tG>
                       -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tG>)>
                       :: (forall t_tG.
                           Engine.Core.World.World t_tG
                           -> Engine.Core.World.GameObject t_tG
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Engine.Core.World.GameObject t_tG #))
                            ~#
                          (forall t_tG.
                           Engine.Core.World.World t_tG
                           -> Engine.Core.World.GameObject t_tG
                           -> GHC.Types.IO (Engine.Core.World.GameObject t_tG)))}]
Engine.Object.Player.sIn =
  Engine.Object.Player.baseInput14
  `cast` (forall t_tG.
          <Engine.Core.World.World t_tG>
          -> <Engine.Core.World.GameObject t_tG>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tG>)>
          :: (forall t_tG.
              Engine.Core.World.World t_tG
              -> Engine.Core.World.GameObject t_tG
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_tG #))
               ~#
             (forall t_tG.
              Engine.Core.World.World t_tG
              -> Engine.Core.World.GameObject t_tG
              -> GHC.Types.IO (Engine.Core.World.GameObject t_tG)))

Engine.Object.Player.$wa1
  :: forall t_tA.
     Engine.Core.World.GameObject t_tA
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tA #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0] 122 30}]
Engine.Object.Player.$wa1 =
  \ (@ t_tA)
    (w_szlE :: Engine.Core.World.GameObject t_tA)
    (w1_szlF :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    (# w1_szlF,
       case w_szlE of _ {
         __DEFAULT -> case Engine.Core.World.playerSpeed1 of wild1_00 { };
         Engine.Core.World.Player ds1_dl1H
                                  ds2_dl1I
                                  ds3_dl1J
                                  ds4_dl1K
                                  ds5_dl1L ->
           case ds3_dl1J
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of wild1_szxT { GHC.Types.F# x_szxS ->
           case ds1_dl1H
           of _ { Engine.Core.Vec.Vec3 ww7_szxY ww8_szy0 ww9_szxZ ->
           case ww7_szxY
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x1_szy4 ->
           case ww8_szy0
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x2_szy8 ->
           case ww9_szxZ
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x3_szyc ->
           Engine.Core.World.Player
             @ t_tA
             (Engine.Core.Vec.Vec3
                @ Foreign.C.Types.CFloat
                ((GHC.Types.F# x1_szy4)
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F#
                    (GHC.Prim.plusFloat# x2_szy8 (GHC.Prim.negateFloat# x_szxS)))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# x3_szyc)
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
             ds2_dl1I
             (wild1_szxT
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ds4_dl1K
             ds5_dl1L
           }
           }
           }
           }
           }
       } #)

Engine.Object.Player.baseInput12 [InlPrag=INLINE[0]]
  :: forall t_tA.
     Engine.Core.World.World t_tA
     -> Engine.Core.World.GameObject t_tA
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tA #)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=Worker=Engine.Object.Player.$wa1, TopLvl=True, Arity=3,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ t_tA)
                 _
                 (w1_szlE [Occ=Once] :: Engine.Core.World.GameObject t_tA)
                 (w2_szlF [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Engine.Object.Player.$wa1 @ t_tA w1_szlE w2_szlF}]
Engine.Object.Player.baseInput12 =
  \ (@ t_tA)
    _
    (w1_szlE :: Engine.Core.World.GameObject t_tA)
    (w2_szlF :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    Engine.Object.Player.$wa1 @ t_tA w1_szlE w2_szlF

Engine.Object.Player.shiftIn
  :: forall t_ayqC.
     Engine.Core.World.World t_ayqC
     -> Engine.Core.World.GameObject t_ayqC
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqC)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Object.Player.baseInput12
               `cast` (forall t_tA.
                       <Engine.Core.World.World t_tA>
                       -> <Engine.Core.World.GameObject t_tA>
                       -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tA>)>
                       :: (forall t_tA.
                           Engine.Core.World.World t_tA
                           -> Engine.Core.World.GameObject t_tA
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Engine.Core.World.GameObject t_tA #))
                            ~#
                          (forall t_tA.
                           Engine.Core.World.World t_tA
                           -> Engine.Core.World.GameObject t_tA
                           -> GHC.Types.IO (Engine.Core.World.GameObject t_tA)))}]
Engine.Object.Player.shiftIn =
  Engine.Object.Player.baseInput12
  `cast` (forall t_tA.
          <Engine.Core.World.World t_tA>
          -> <Engine.Core.World.GameObject t_tA>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tA>)>
          :: (forall t_tA.
              Engine.Core.World.World t_tA
              -> Engine.Core.World.GameObject t_tA
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_tA #))
               ~#
             (forall t_tA.
              Engine.Core.World.World t_tA
              -> Engine.Core.World.GameObject t_tA
              -> GHC.Types.IO (Engine.Core.World.GameObject t_tA)))

Engine.Object.Player.$wa
  :: forall t_tu.
     Engine.Core.World.GameObject t_tu
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tu #)
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 0] 121 30}]
Engine.Object.Player.$wa =
  \ (@ t_tu)
    (w_szlL :: Engine.Core.World.GameObject t_tu)
    (w1_szlM :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    (# w1_szlM,
       case w_szlL of _ {
         __DEFAULT -> case Engine.Core.World.playerSpeed1 of wild1_00 { };
         Engine.Core.World.Player ds1_dl1H
                                  ds2_dl1I
                                  ds3_dl1J
                                  ds4_dl1K
                                  ds5_dl1L ->
           case ds3_dl1J
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of ww5_szyh { GHC.Types.F# ww6_szyg ->
           case ds1_dl1H
           of _ { Engine.Core.Vec.Vec3 ww7_szym ww8_szyo ww9_szyn ->
           case ww7_szym
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x_szys ->
           case ww8_szyo
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x1_szyw ->
           case ww9_szyn
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x2_szyA ->
           Engine.Core.World.Player
             @ t_tu
             (Engine.Core.Vec.Vec3
                @ Foreign.C.Types.CFloat
                ((GHC.Types.F# x_szys)
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# (GHC.Prim.plusFloat# x1_szyw ww6_szyg))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# x2_szyA)
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
             ds2_dl1I
             (ww5_szyh
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ds4_dl1K
             ds5_dl1L
           }
           }
           }
           }
           }
       } #)

Engine.Object.Player.baseInput10 [InlPrag=INLINE[0]]
  :: forall t_tu.
     Engine.Core.World.World t_tu
     -> Engine.Core.World.GameObject t_tu
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tu #)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=Worker=Engine.Object.Player.$wa, TopLvl=True, Arity=3,
         Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ t_tu)
                 _
                 (w1_szlL [Occ=Once] :: Engine.Core.World.GameObject t_tu)
                 (w2_szlM [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Engine.Object.Player.$wa @ t_tu w1_szlL w2_szlM}]
Engine.Object.Player.baseInput10 =
  \ (@ t_tu)
    _
    (w1_szlL :: Engine.Core.World.GameObject t_tu)
    (w2_szlM :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    Engine.Object.Player.$wa @ t_tu w1_szlL w2_szlM

Engine.Object.Player.spaceIn
  :: forall t_ayqB.
     Engine.Core.World.World t_ayqB
     -> Engine.Core.World.GameObject t_ayqB
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqB)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Object.Player.baseInput10
               `cast` (forall t_tu.
                       <Engine.Core.World.World t_tu>
                       -> <Engine.Core.World.GameObject t_tu>
                       -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tu>)>
                       :: (forall t_tu.
                           Engine.Core.World.World t_tu
                           -> Engine.Core.World.GameObject t_tu
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Engine.Core.World.GameObject t_tu #))
                            ~#
                          (forall t_tu.
                           Engine.Core.World.World t_tu
                           -> Engine.Core.World.GameObject t_tu
                           -> GHC.Types.IO (Engine.Core.World.GameObject t_tu)))}]
Engine.Object.Player.spaceIn =
  Engine.Object.Player.baseInput10
  `cast` (forall t_tu.
          <Engine.Core.World.World t_tu>
          -> <Engine.Core.World.GameObject t_tu>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tu>)>
          :: (forall t_tu.
              Engine.Core.World.World t_tu
              -> Engine.Core.World.GameObject t_tu
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_tu #))
               ~#
             (forall t_tu.
              Engine.Core.World.World t_tu
              -> Engine.Core.World.GameObject t_tu
              -> GHC.Types.IO (Engine.Core.World.GameObject t_tu)))

Engine.Object.Player.baseInput20 :: GHC.Types.Float
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.baseInput20 = Engine.Object.Player.aIn3

Engine.Object.Player.baseInput19 :: GHC.Types.Float
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Object.Player.baseInput19 = Engine.Object.Player.aIn3

Engine.Object.Player.baseInput18
  :: forall t_tM.
     Engine.Core.World.World t_tM
     -> Engine.Core.World.GameObject t_tM
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject t_tM #)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_tM)
                 _
                 (p_ayqT [Occ=Once!] :: Engine.Core.World.GameObject t_tM)
                 (s_a3Uq [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s_a3Uq,
                    case p_ayqT of wild_XG {
                      __DEFAULT -> case Engine.Core.World.playerSpeed1 of _ { };
                      Engine.Core.World.Player _ _ ds3_dl1J [Occ=Once] _ _ ->
                        case ds3_dl1J
                             `cast` (<Foreign.C.Types.NTCo:CFloat>
                                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                        of _ { GHC.Types.F# x_XlPP [Occ=Once] ->
                        Engine.Object.Player.moveFromLook
                          @ t_tM
                          wild_XG
                          (Engine.Core.Vec.Vec3
                             @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                             (Engine.Object.Player.baseInput20
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                             (Engine.Object.Player.baseInput19
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                             ((GHC.Types.F# (GHC.Prim.negateFloat# x_XlPP))
                              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
                        }
                    } #)}]
Engine.Object.Player.baseInput18 =
  \ (@ t_tM)
    _
    (p_ayqT :: Engine.Core.World.GameObject t_tM)
    (s_a3Uq :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    (# s_a3Uq,
       case p_ayqT of _ {
         __DEFAULT -> case Engine.Core.World.playerSpeed1 of wild1_00 { };
         Engine.Core.World.Player ds1_dl1H
                                  ds2_dl1I
                                  ds3_dl1J
                                  ds4_dl1K
                                  ds5_dl1L ->
           case ds3_dl1J
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of wild1_szyF { GHC.Types.F# x_szyE ->
           case ds2_dl1I
           of wild2_szyN { Engine.Core.Vec.Vec3 ds6_szyM rry_szyK ds7_szyL ->
           case rry_szyK
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x1_szyQ ->
           case ds1_dl1H
           of _ { Engine.Core.Vec.Vec3 ww7_szyW ww8_szyY ww9_szyX ->
           case ww7_szyW
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x2_szz2 ->
           case ww8_szyY
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x3_szz6 ->
           case ww9_szyX
                `cast` (<Foreign.C.Types.NTCo:CFloat>
                        :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
           of _ { GHC.Types.F# x4_szza ->
           let {
             ww_szlf :: GHC.Prim.Float#
             [LclId]
             ww_szlf = GHC.Prim.negateFloat# x_szyE } in
           Engine.Core.World.Player
             @ t_tM
             (Engine.Core.Vec.Vec3
                @ Foreign.C.Types.CFloat
                ((GHC.Types.F#
                    (GHC.Prim.plusFloat#
                       x2_szz2
                       (GHC.Prim.plusFloat#
                          (GHC.Prim.timesFloat#
                             (__float 0.0)
                             (GHC.Prim.sinFloat#
                                (GHC.Prim.timesFloat#
                                   (GHC.Prim.minusFloat# x1_szyQ (__float 90.0))
                                   (__float 1.7453292e-2))))
                          (GHC.Prim.timesFloat#
                             ww_szlf
                             (GHC.Prim.sinFloat#
                                (GHC.Prim.timesFloat# x1_szyQ (__float 1.7453292e-2)))))))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F# x3_szz6)
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                ((GHC.Types.F#
                    (GHC.Prim.plusFloat#
                       x4_szza
                       (GHC.Prim.plusFloat#
                          (GHC.Prim.timesFloat#
                             (__float 0.0)
                             (GHC.Prim.cosFloat#
                                (GHC.Prim.timesFloat#
                                   (GHC.Prim.minusFloat# x1_szyQ (__float 90.0))
                                   (__float 1.7453292e-2))))
                          (GHC.Prim.timesFloat#
                             ww_szlf
                             (GHC.Prim.cosFloat#
                                (GHC.Prim.timesFloat# x1_szyQ (__float 1.7453292e-2)))))))
                 `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                         :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
             wild2_szyN
             (wild1_szyF
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ds4_dl1K
             ds5_dl1L
           }
           }
           }
           }
           }
           }
           }
       } #)

Engine.Object.Player.wIn
  :: forall t_ayqE.
     Engine.Core.World.World t_ayqE
     -> Engine.Core.World.GameObject t_ayqE
     -> GHC.Types.IO (Engine.Core.World.GameObject t_ayqE)
[GblId,
 Arity=3,
 Str=DmdType ALL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Object.Player.baseInput18
               `cast` (forall t_tM.
                       <Engine.Core.World.World t_tM>
                       -> <Engine.Core.World.GameObject t_tM>
                       -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tM>)>
                       :: (forall t_tM.
                           Engine.Core.World.World t_tM
                           -> Engine.Core.World.GameObject t_tM
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                 Engine.Core.World.GameObject t_tM #))
                            ~#
                          (forall t_tM.
                           Engine.Core.World.World t_tM
                           -> Engine.Core.World.GameObject t_tM
                           -> GHC.Types.IO (Engine.Core.World.GameObject t_tM)))}]
Engine.Object.Player.wIn =
  Engine.Object.Player.baseInput18
  `cast` (forall t_tM.
          <Engine.Core.World.World t_tM>
          -> <Engine.Core.World.GameObject t_tM>
          -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_tM>)>
          :: (forall t_tM.
              Engine.Core.World.World t_tM
              -> Engine.Core.World.GameObject t_tM
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject t_tM #))
               ~#
             (forall t_tM.
              Engine.Core.World.World t_tM
              -> Engine.Core.World.GameObject t_tM
              -> GHC.Types.IO (Engine.Core.World.GameObject t_tM)))

Engine.Object.Player.baseInput24
  :: forall t_t11.
     (Graphics.UI.GLFW.Types.Key,
      GHC.Types.Bool,
      Engine.Core.World.World t_t11
      -> Engine.Core.World.GameObject t_t11
      -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.baseInput24 =
  \ (@ t_t11) ->
    (Graphics.UI.GLFW.Types.Key'A,
     GHC.Types.False,
     (Engine.Object.Player.aIn1 @ t_t11)
     `cast` (<Engine.Core.World.World t_t11>
             -> <Engine.Core.World.GameObject t_t11>
             -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t11>)>
             :: (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                       Engine.Core.World.GameObject t_t11 #))
                  ~#
                (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))))

Engine.Object.Player.baseInput21
  :: forall t_t11.
     (Graphics.UI.GLFW.Types.Key,
      GHC.Types.Bool,
      Engine.Core.World.World t_t11
      -> Engine.Core.World.GameObject t_t11
      -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.baseInput21 =
  \ (@ t_t11) ->
    (Graphics.UI.GLFW.Types.Key'D,
     GHC.Types.False,
     (Engine.Object.Player.baseInput22 @ t_t11)
     `cast` (<Engine.Core.World.World t_t11>
             -> <Engine.Core.World.GameObject t_t11>
             -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t11>)>
             :: (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                       Engine.Core.World.GameObject t_t11 #))
                  ~#
                (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))))

Engine.Object.Player.baseInput17
  :: forall t_t11.
     (Graphics.UI.GLFW.Types.Key,
      GHC.Types.Bool,
      Engine.Core.World.World t_t11
      -> Engine.Core.World.GameObject t_t11
      -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.baseInput17 =
  \ (@ t_t11) ->
    (Graphics.UI.GLFW.Types.Key'W,
     GHC.Types.False,
     (Engine.Object.Player.baseInput18 @ t_t11)
     `cast` (<Engine.Core.World.World t_t11>
             -> <Engine.Core.World.GameObject t_t11>
             -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t11>)>
             :: (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                       Engine.Core.World.GameObject t_t11 #))
                  ~#
                (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))))

Engine.Object.Player.baseInput13
  :: forall t_t11.
     (Graphics.UI.GLFW.Types.Key,
      GHC.Types.Bool,
      Engine.Core.World.World t_t11
      -> Engine.Core.World.GameObject t_t11
      -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.baseInput13 =
  \ (@ t_t11) ->
    (Graphics.UI.GLFW.Types.Key'S,
     GHC.Types.False,
     (Engine.Object.Player.baseInput14 @ t_t11)
     `cast` (<Engine.Core.World.World t_t11>
             -> <Engine.Core.World.GameObject t_t11>
             -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t11>)>
             :: (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                       Engine.Core.World.GameObject t_t11 #))
                  ~#
                (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))))

Engine.Object.Player.baseInput11
  :: forall t_t11.
     (Graphics.UI.GLFW.Types.Key,
      GHC.Types.Bool,
      Engine.Core.World.World t_t11
      -> Engine.Core.World.GameObject t_t11
      -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.baseInput11 =
  \ (@ t_t11) ->
    (Graphics.UI.GLFW.Types.Key'LeftShift,
     GHC.Types.False,
     (Engine.Object.Player.baseInput12 @ t_t11)
     `cast` (<Engine.Core.World.World t_t11>
             -> <Engine.Core.World.GameObject t_t11>
             -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t11>)>
             :: (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                       Engine.Core.World.GameObject t_t11 #))
                  ~#
                (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))))

Engine.Object.Player.baseInput9
  :: forall t_t11.
     (Graphics.UI.GLFW.Types.Key,
      GHC.Types.Bool,
      Engine.Core.World.World t_t11
      -> Engine.Core.World.GameObject t_t11
      -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.baseInput9 =
  \ (@ t_t11) ->
    (Graphics.UI.GLFW.Types.Key'Space,
     GHC.Types.False,
     (Engine.Object.Player.baseInput10 @ t_t11)
     `cast` (<Engine.Core.World.World t_t11>
             -> <Engine.Core.World.GameObject t_t11>
             -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t11>)>
             :: (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                       Engine.Core.World.GameObject t_t11 #))
                  ~#
                (Engine.Core.World.World t_t11
                 -> Engine.Core.World.GameObject t_t11
                 -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))))

Engine.Object.Player.baseInput8
  :: forall t_t11.
     [(Graphics.UI.GLFW.Types.Key,
       GHC.Types.Bool,
       Engine.Core.World.World t_t11
       -> Engine.Core.World.GameObject t_t11
       -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.Player.baseInput8 =
  \ (@ t_t11) ->
    GHC.Types.:
      @ (Graphics.UI.GLFW.Types.Key,
         GHC.Types.Bool,
         Engine.Core.World.World t_t11
         -> Engine.Core.World.GameObject t_t11
         -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
      (Engine.Object.Player.baseInput9 @ t_t11)
      (GHC.Types.[]
         @ (Graphics.UI.GLFW.Types.Key,
            GHC.Types.Bool,
            Engine.Core.World.World t_t11
            -> Engine.Core.World.GameObject t_t11
            -> GHC.Types.IO (Engine.Core.World.GameObject t_t11)))

Engine.Object.Player.baseInput7
  :: forall t_t11.
     [(Graphics.UI.GLFW.Types.Key,
       GHC.Types.Bool,
       Engine.Core.World.World t_t11
       -> Engine.Core.World.GameObject t_t11
       -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.Player.baseInput7 =
  \ (@ t_t11) ->
    GHC.Types.:
      @ (Graphics.UI.GLFW.Types.Key,
         GHC.Types.Bool,
         Engine.Core.World.World t_t11
         -> Engine.Core.World.GameObject t_t11
         -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
      (Engine.Object.Player.baseInput11 @ t_t11)
      (Engine.Object.Player.baseInput8 @ t_t11)

Engine.Object.Player.baseInput6
  :: forall t_t11.
     [(Graphics.UI.GLFW.Types.Key,
       GHC.Types.Bool,
       Engine.Core.World.World t_t11
       -> Engine.Core.World.GameObject t_t11
       -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.Player.baseInput6 =
  \ (@ t_t11) ->
    GHC.Types.:
      @ (Graphics.UI.GLFW.Types.Key,
         GHC.Types.Bool,
         Engine.Core.World.World t_t11
         -> Engine.Core.World.GameObject t_t11
         -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
      (Engine.Object.Player.baseInput13 @ t_t11)
      (Engine.Object.Player.baseInput7 @ t_t11)

Engine.Object.Player.baseInput5
  :: forall t_t11.
     [(Graphics.UI.GLFW.Types.Key,
       GHC.Types.Bool,
       Engine.Core.World.World t_t11
       -> Engine.Core.World.GameObject t_t11
       -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.Player.baseInput5 =
  \ (@ t_t11) ->
    GHC.Types.:
      @ (Graphics.UI.GLFW.Types.Key,
         GHC.Types.Bool,
         Engine.Core.World.World t_t11
         -> Engine.Core.World.GameObject t_t11
         -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
      (Engine.Object.Player.baseInput17 @ t_t11)
      (Engine.Object.Player.baseInput6 @ t_t11)

Engine.Object.Player.baseInput4
  :: forall t_t11.
     [(Graphics.UI.GLFW.Types.Key,
       GHC.Types.Bool,
       Engine.Core.World.World t_t11
       -> Engine.Core.World.GameObject t_t11
       -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.Player.baseInput4 =
  \ (@ t_t11) ->
    GHC.Types.:
      @ (Graphics.UI.GLFW.Types.Key,
         GHC.Types.Bool,
         Engine.Core.World.World t_t11
         -> Engine.Core.World.GameObject t_t11
         -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
      (Engine.Object.Player.baseInput21 @ t_t11)
      (Engine.Object.Player.baseInput5 @ t_t11)

Engine.Object.Player.baseInput3
  :: forall t_t11.
     [(Graphics.UI.GLFW.Types.Key,
       GHC.Types.Bool,
       Engine.Core.World.World t_t11
       -> Engine.Core.World.GameObject t_t11
       -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.Player.baseInput3 =
  \ (@ t_t11) ->
    GHC.Types.:
      @ (Graphics.UI.GLFW.Types.Key,
         GHC.Types.Bool,
         Engine.Core.World.World t_t11
         -> Engine.Core.World.GameObject t_t11
         -> GHC.Types.IO (Engine.Core.World.GameObject t_t11))
      (Engine.Object.Player.baseInput24 @ t_t11)
      (Engine.Object.Player.baseInput4 @ t_t11)

Engine.Object.Player.baseInput2
  :: Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.Player.baseInput2 =
  Engine.Core.Vec.Vec2
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Engine.Object.Player.baseInput1
  :: Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Engine.Object.Player.baseInput1 =
  Engine.Core.Vec.Vec2
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Engine.Object.Player.baseInput
  :: forall t_ayqH. Engine.Core.World.Input t_ayqH
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.baseInput =
  \ (@ t_t11) ->
    Engine.Core.World.Input
      @ t_t11
      (Engine.Object.Player.baseInput3 @ t_t11)
      Engine.Object.Player.baseInput2
      Engine.Object.Player.baseInput1

Engine.Object.Player.mkPlayer8 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Object.Player.mkPlayer8 = GHC.Types.F# (__float 20.0)

Engine.Object.Player.mkPlayer7
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.mkPlayer7 =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Object.Player.mkPlayer8
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Engine.Object.Player.mkPlayer6
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
Engine.Object.Player.mkPlayer6 =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Engine.Object.Player.aIn3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Engine.Object.Player.mkPlayer5 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Engine.Object.Player.mkPlayer5 = GHC.Types.F# (__float 5.0)

Engine.Object.Player.mkPlayer
  :: forall t_ayqJ. Engine.Core.World.GameObject t_ayqJ
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 60}]
Engine.Object.Player.mkPlayer =
  \ (@ t_t19) ->
    Engine.Core.World.Player
      @ t_t19
      Engine.Object.Player.mkPlayer7
      Engine.Object.Player.mkPlayer6
      (Engine.Object.Player.mkPlayer5
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      ((Engine.Object.Player.mkPlayer1 @ t_t19)
       `cast` (<Engine.Core.World.World t_t19>
               -> Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_t19>)>
               :: (Engine.Core.World.World t_t19
                   -> GHC.Prim.State# GHC.Prim.RealWorld
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                         Engine.Core.World.GameObject t_t19 #))
                    ~#
                  (Engine.Core.World.World t_t19
                   -> GHC.Types.IO (Engine.Core.World.GameObject t_t19))))
      (Engine.Object.Player.baseInput @ t_t19)



[15 of 17] Compiling TestVals         ( TestVals.hs, TestVals.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 530, types: 597, coercions: 166}

TestVals.mkObj11 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 70 0}]
TestVals.mkObj11 = GHC.CString.unpackCString# "shaders/max.vert"

TestVals.mkObj10 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 70 0}]
TestVals.mkObj10 = GHC.CString.unpackCString# "shaders/max.frag"

TestVals.mkObj9 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
TestVals.mkObj9 = GHC.Types.F# (__float 50.0)

TestVals.mkObj8 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
TestVals.mkObj8 = GHC.Types.I# 1

TestVals.mkObj7 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
TestVals.mkObj7 = GHC.Types.F# (__float 20.0)

TestVals.mkObj4 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
TestVals.mkObj4 = GHC.Types.F# (__float 10.0)

TestVals.mkSplitModel1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Model.Model.Model] #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 0}]
TestVals.mkSplitModel1 =
  \ (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    Engine.Terrain.Generator.genSimplexModelSplit1
      TestVals.mkObj11
      TestVals.mkObj10
      (TestVals.mkObj9
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      TestVals.mkObj8
      (TestVals.mkObj7
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      (TestVals.mkObj4
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      eta_B1

TestVals.mkSplitModel :: GHC.Types.IO [Engine.Model.Model.Model]
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkSplitModel =
  TestVals.mkSplitModel1
  `cast` (Sym <(GHC.Types.NTCo:IO <[Engine.Model.Model.Model]>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Model.Model.Model] #))
               ~#
             GHC.Types.IO [Engine.Model.Model.Model])

TestVals.mkModel11 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
TestVals.mkModel11 = GHC.Types.F# (__float 0.0)

lvl_rBdv
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId, Caf=NoCafRefs, Str=DmdType m]
lvl_rBdv =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Rec {
TestVals.mkSplitObjs1 [Occ=LoopBreaker]
  :: [Engine.Model.Model.Model]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Engine.Core.World.GameObject ()] #)
[GblId, Arity=2, Caf=NoCafRefs, Str=DmdType SL]
TestVals.mkSplitObjs1 =
  \ (ds_dAOk :: [Engine.Model.Model.Model])
    (eta_XI :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ds_dAOk of _ {
      [] ->
        (# eta_XI, GHC.Types.[] @ (Engine.Core.World.GameObject ()) #);
      : x_aALv xs_aALw ->
        case TestVals.mkSplitObjs1 xs_aALw eta_XI
        of _ { (# ipv_X3X8, ipv1_X3Xa #) ->
        (# ipv_X3X8,
           GHC.Types.:
             @ (Engine.Core.World.GameObject ())
             (case x_aALv
              of tpl_Xb
              { Engine.Model.Model.Model ipv2_sAUs
                                         ipv3_sAUt
                                         ipv4_sAUu
                                         ipv5_sAUv
                                         ipv6_sAUw
                                         ipv7_sAUx ->
              Engine.Core.World.PureEntity
                @ ()
                lvl_rBdv
                (GHC.Base.id @ (Engine.Core.World.GameObject ()))
                tpl_Xb
                GHC.Tuple.()
              })
             ipv1_X3Xa #)
        }
    }
end Rec }

TestVals.mkSplitObjs
  :: [Engine.Model.Model.Model]
     -> GHC.Types.IO [Engine.Core.World.GameObject ()]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=DmdType SL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkSplitObjs =
  TestVals.mkSplitObjs1
  `cast` (<[Engine.Model.Model.Model]>
          -> Sym <(GHC.Types.NTCo:IO <[Engine.Core.World.GameObject ()]>)>
          :: ([Engine.Model.Model.Model]
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    [Engine.Core.World.GameObject ()] #))
               ~#
             ([Engine.Model.Model.Model]
              -> GHC.Types.IO [Engine.Core.World.GameObject ()]))

TestVals.mkModel12 :: GHC.Word.Word32
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
TestVals.mkModel12 = GHC.Word.W32# (__word 0)

TestVals.mkWorldState1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.WorldState #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 30}]
TestVals.mkWorldState1 =
  \ (eta_XL :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Data.Time.Clock.POSIX.getPOSIXTime1 eta_XL
    of _ { (# ipv_alKF, ipv1_alKG #) ->
    (# ipv_alKF,
       case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime ipv1_alKG
       of _ { (# ww1_aB6r, ww2_aB6s #) ->
       Engine.Core.World.WorldState
         (TestVals.mkModel12
          `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                  :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
         (Data.Time.Clock.UTC.UTCTime ww1_aB6r ww2_aB6s)
         (TestVals.mkModel11
          `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                  :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
       } #)
    }

TestVals.mkWorldState :: GHC.Types.IO Engine.Core.World.WorldState
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkWorldState =
  TestVals.mkWorldState1
  `cast` (Sym <(GHC.Types.NTCo:IO <Engine.Core.World.WorldState>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.WorldState #))
               ~#
             GHC.Types.IO Engine.Core.World.WorldState)

TestVals.mkWorldStateRef1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.IORef.IORef Engine.Core.World.WorldState #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 103 30}]
TestVals.mkWorldStateRef1 =
  \ (eta_XO :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Data.Time.Clock.POSIX.getPOSIXTime1 eta_XO
    of _ { (# ipv_alKF, ipv1_alKG #) ->
    case GHC.Prim.newMutVar#
           @ Engine.Core.World.WorldState
           @ GHC.Prim.RealWorld
           (case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime ipv1_alKG
            of _ { (# ww1_aB6r, ww2_aB6s #) ->
            Engine.Core.World.WorldState
              (TestVals.mkModel12
               `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                       :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
              (Data.Time.Clock.UTC.UTCTime ww1_aB6r ww2_aB6s)
              (TestVals.mkModel11
               `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                       :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
            })
           ipv_alKF
    of _ { (# ipv2_aB12, ipv3_aB13 #) ->
    (# ipv2_aB12,
       (GHC.STRef.STRef
          @ GHC.Prim.RealWorld @ Engine.Core.World.WorldState ipv3_aB13)
       `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.WorldState>
               :: GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState
                    ~#
                  GHC.IORef.IORef Engine.Core.World.WorldState) #)
    }
    }

TestVals.mkWorldStateRef
  :: GHC.Types.IO (GHC.IORef.IORef Engine.Core.World.WorldState)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkWorldStateRef =
  TestVals.mkWorldStateRef1
  `cast` (Sym
            <(GHC.Types.NTCo:IO
                <GHC.IORef.IORef Engine.Core.World.WorldState>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    GHC.IORef.IORef Engine.Core.World.WorldState #))
               ~#
             GHC.Types.IO (GHC.IORef.IORef Engine.Core.World.WorldState))

TestVals.mkModel10 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 40 0}]
TestVals.mkModel10 = GHC.CString.unpackCString# "res"

TestVals.mkModel17 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 100 0}]
TestVals.mkModel17 =
  GHC.CString.unpackCString# "objects/ibanez/ibanez.obj"

TestVals.mkModel16 :: GHC.IO.FilePath
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkModel16 =
  System.FilePath.Posix.combine TestVals.mkModel10 TestVals.mkModel17

TestVals.mkModel5 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
TestVals.mkModel5 = GHC.CString.unpackCString# "shaders"

TestVals.mkModel7 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
TestVals.mkModel7 = GHC.CString.unpackCString# "min.vert"

TestVals.mkModel15 :: GHC.IO.FilePath
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkModel15 =
  System.FilePath.Posix.combine TestVals.mkModel5 TestVals.mkModel7

TestVals.mkModel4 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
TestVals.mkModel4 = GHC.CString.unpackCString# "min.frag"

TestVals.mkModel14 :: GHC.IO.FilePath
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkModel14 =
  System.FilePath.Posix.combine TestVals.mkModel5 TestVals.mkModel4

TestVals.mkModel13
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Model.Model.Model #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 163 0}]
TestVals.mkModel13 =
  \ (eta_XS :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Data.Time.Clock.POSIX.getPOSIXTime1 eta_XS
    of _ { (# ipv_alKF, ipv1_alKG #) ->
    case GHC.Prim.newMutVar#
           @ Engine.Core.World.WorldState
           @ GHC.Prim.RealWorld
           (case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime ipv1_alKG
            of _ { (# ww1_aB6r, ww2_aB6s #) ->
            Engine.Core.World.WorldState
              (TestVals.mkModel12
               `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                       :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
              (Data.Time.Clock.UTC.UTCTime ww1_aB6r ww2_aB6s)
              (TestVals.mkModel11
               `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                       :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
            })
           ipv_alKF
    of _ { (# ipv2_aB12, ipv3_aB13 #) ->
    Engine.Model.ModelLoader.loadObjModel1
      ((GHC.STRef.STRef
          @ GHC.Prim.RealWorld @ Engine.Core.World.WorldState ipv3_aB13)
       `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.WorldState>
               :: GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState
                    ~#
                  GHC.IORef.IORef Engine.Core.World.WorldState))
      TestVals.mkModel16
      TestVals.mkModel15
      TestVals.mkModel14
      ipv2_aB12
    }
    }

TestVals.mkModel3 :: GHC.Types.IO Engine.Model.Model.Model
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkModel3 =
  TestVals.mkModel13
  `cast` (Sym <(GHC.Types.NTCo:IO <Engine.Model.Model.Model>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Model.Model.Model #))
               ~#
             GHC.Types.IO Engine.Model.Model.Model)

TestVals.mkModel9 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 80 0}]
TestVals.mkModel9 =
  GHC.CString.unpackCString# "objects/wow/wow.obj"

TestVals.mkModel8 :: GHC.IO.FilePath
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkModel8 =
  System.FilePath.Posix.combine TestVals.mkModel10 TestVals.mkModel9

TestVals.mkModel6 :: GHC.IO.FilePath
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkModel6 =
  System.FilePath.Posix.combine TestVals.mkModel5 TestVals.mkModel7

TestVals.mkModel2 :: GHC.IO.FilePath
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkModel2 =
  System.FilePath.Posix.combine TestVals.mkModel5 TestVals.mkModel4

TestVals.mkModel1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Model.Model.Model #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 163 0}]
TestVals.mkModel1 =
  \ (eta_XW :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Data.Time.Clock.POSIX.getPOSIXTime1 eta_XW
    of _ { (# ipv_alKF, ipv1_alKG #) ->
    case GHC.Prim.newMutVar#
           @ Engine.Core.World.WorldState
           @ GHC.Prim.RealWorld
           (case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime ipv1_alKG
            of _ { (# ww1_aB6r, ww2_aB6s #) ->
            Engine.Core.World.WorldState
              (TestVals.mkModel12
               `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                       :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
              (Data.Time.Clock.UTC.UTCTime ww1_aB6r ww2_aB6s)
              (TestVals.mkModel11
               `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                       :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
            })
           ipv_alKF
    of _ { (# ipv2_aB12, ipv3_aB13 #) ->
    Engine.Model.ModelLoader.loadObjModel1
      ((GHC.STRef.STRef
          @ GHC.Prim.RealWorld @ Engine.Core.World.WorldState ipv3_aB13)
       `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.WorldState>
               :: GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState
                    ~#
                  GHC.IORef.IORef Engine.Core.World.WorldState))
      TestVals.mkModel8
      TestVals.mkModel6
      TestVals.mkModel2
      ipv2_aB12
    }
    }

TestVals.mkModel :: GHC.Types.IO Engine.Model.Model.Model
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkModel =
  TestVals.mkModel1
  `cast` (Sym <(GHC.Types.NTCo:IO <Engine.Model.Model.Model>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Model.Model.Model #))
               ~#
             GHC.Types.IO Engine.Model.Model.Model)

TestVals.mkObj3
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
TestVals.mkObj3 =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (TestVals.mkObj4
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkObj4
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkObj4
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

TestVals.mkObj1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject () #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 50 30}]
TestVals.mkObj1 =
  \ (eta_X13 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case TestVals.mkModel1 eta_X13 of _ { (# ipv_acwW, ipv1_acwX #) ->
    (# ipv_acwW,
       case ipv1_acwX
       of tpl_Xb
       { Engine.Model.Model.Model ipv2_sB28
                                  ipv3_sB29
                                  ipv4_sB2a
                                  ipv5_sB2b
                                  ipv6_sB2c
                                  ipv7_sB2d ->
       Engine.Core.World.PureEntity
         @ ()
         TestVals.mkObj3
         (GHC.Base.id @ (Engine.Core.World.GameObject ()))
         tpl_Xb
         GHC.Tuple.()
       } #)
    }

TestVals.mkObj :: GHC.Types.IO (Engine.Core.World.GameObject ())
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkObj =
  TestVals.mkObj1
  `cast` (Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject ()>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject () #))
               ~#
             GHC.Types.IO (Engine.Core.World.GameObject ()))

TestVals.mkWorld9 :: GHC.Integer.Type.Integer
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
TestVals.mkWorld9 = __integer 1

TestVals.pureMove2 :: GHC.Integer.Type.Integer
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
TestVals.pureMove2 = __integer 200

TestVals.pureMove1
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 40}]
TestVals.pureMove1 =
  case GHC.Float.$w$cfromRational1
         TestVals.mkWorld9 TestVals.pureMove2
  of nt_sB2h { GHC.Types.F# ipv_sB2i ->
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (nt_sB2h
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
  }

TestVals.pureMove
  :: forall t_aALr.
     Engine.Core.World.GameObject t_aALr
     -> Engine.Core.World.GameObject t_aALr
[GblId,
 Arity=1,
 Str=DmdType S,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30] 153 50}]
TestVals.pureMove =
  \ (@ t_h) (pe_XAM7 :: Engine.Core.World.GameObject t_h) ->
    case pe_XAM7 of wild_Xy {
      __DEFAULT -> wild_Xy;
      Engine.Core.World.PureEntity ds_dAOd ds1_dAOe ds2_dAOf ds3_dAOg ->
        case ds_dAOd
        of _ { Engine.Core.Vec.Vec3 ww7_sBab ww8_sBaa ww9_sBa9 ->
        case ww7_sBab
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x_sBaf ->
        case ww8_sBaa
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x1_sBan ->
        case ww9_sBa9
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# x2_sBav ->
        case TestVals.pureMove1
        of _ { Engine.Core.Vec.Vec3 ww10_s9N6 ww11_s9N7 ww12_s9N8 ->
        case ww10_s9N6
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y_sBaj ->
        case ww11_s9N7
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y1_sBar ->
        case ww12_s9N8
             `cast` (<Foreign.C.Types.NTCo:CFloat>
                     :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
        of _ { GHC.Types.F# y2_sBaz ->
        Engine.Core.World.PureEntity
          @ t_h
          (Engine.Core.Vec.Vec3
             @ Foreign.C.Types.CFloat
             ((GHC.Types.F# (GHC.Prim.plusFloat# x_sBaf y_sBaj))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x1_sBan y1_sBar))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
             ((GHC.Types.F# (GHC.Prim.plusFloat# x2_sBav y2_sBaz))
              `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                      :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
          ds1_dAOe
          ds2_dAOf
          ds3_dAOg
        }
        }
        }
        }
        }
        }
        }
        }
    }

TestVals.mkTerrain1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Model.Model.Model #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 80 0}]
TestVals.mkTerrain1 =
  \ (eta_X1d :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    Engine.Terrain.Generator.genSimplexModel1
      TestVals.mkObj11
      TestVals.mkObj10
      (TestVals.mkObj9
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      TestVals.mkObj8
      (TestVals.mkObj7
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      (TestVals.mkObj4
       `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
               :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
      eta_X1d

TestVals.mkTerrain :: GHC.Types.IO Engine.Model.Model.Model
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkTerrain =
  TestVals.mkTerrain1
  `cast` (Sym <(GHC.Types.NTCo:IO <Engine.Model.Model.Model>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Model.Model.Model #))
               ~#
             GHC.Types.IO Engine.Model.Model.Model)

TestVals.mkObj6
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
TestVals.mkObj6 =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

TestVals.mkObj5
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.GameObject () #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 110 30}]
TestVals.mkObj5 =
  \ (eta_X1k :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Terrain.Generator.genSimplexModel1
           TestVals.mkObj11
           TestVals.mkObj10
           (TestVals.mkObj9
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
           TestVals.mkObj8
           (TestVals.mkObj7
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
           (TestVals.mkObj4
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
           eta_X1k
    of _ { (# ipv_acwW, ipv1_acwX #) ->
    (# ipv_acwW,
       case ipv1_acwX
       of tpl_Xb
       { Engine.Model.Model.Model ipv2_sB2E
                                  ipv3_sB2F
                                  ipv4_sB2G
                                  ipv5_sB2H
                                  ipv6_sB2I
                                  ipv7_sB2J ->
       Engine.Core.World.PureEntity
         @ ()
         TestVals.mkObj6
         (GHC.Base.id @ (Engine.Core.World.GameObject ()))
         tpl_Xb
         GHC.Tuple.()
       } #)
    }

TestVals.mkObj2 :: GHC.Types.IO (Engine.Core.World.GameObject ())
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkObj2 =
  TestVals.mkObj5
  `cast` (Sym <(GHC.Types.NTCo:IO <Engine.Core.World.GameObject ()>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.GameObject () #))
               ~#
             GHC.Types.IO (Engine.Core.World.GameObject ()))

TestVals.mkWorld14 :: [GHC.Types.Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 50 0}]
TestVals.mkWorld14 = GHC.CString.unpackCString# "lightPos"

TestVals.mkWorld12 :: GHC.Integer.Type.Integer
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
TestVals.mkWorld12 = __integer 2

TestVals.mkWorld13 :: GHC.Types.Float
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkWorld13 =
  GHC.Float.$w$cfromRational1 TestVals.mkWorld12 TestVals.mkWorld9

TestVals.mkWorld11 :: GHC.Types.Float
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkWorld11 =
  GHC.Float.$w$cfromRational1 TestVals.mkWorld12 TestVals.mkWorld9

TestVals.mkWorld10 :: GHC.Integer.Type.Integer
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [] 100 0}]
TestVals.mkWorld10 = __integer 0

TestVals.mkWorld8 :: GHC.Types.Float
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=False,
         ConLike=False, WorkFree=False, Expandable=False,
         Guidance=IF_ARGS [] 30 0}]
TestVals.mkWorld8 =
  GHC.Float.$w$cfromRational1 TestVals.mkWorld10 TestVals.mkWorld9

TestVals.mkWorld7 :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
TestVals.mkWorld7 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (TestVals.mkWorld8
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (GHC.Types.[] @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat)

TestVals.mkWorld6 :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
TestVals.mkWorld6 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (TestVals.mkWorld11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    TestVals.mkWorld7

TestVals.mkWorld5 :: [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
TestVals.mkWorld5 =
  GHC.Types.:
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (TestVals.mkWorld13
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    TestVals.mkWorld6

TestVals.mkWorld4
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #)
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkWorld4 =
  \ (s_X3XC :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    (# s_X3XC, TestVals.mkWorld5 #)

TestVals.mkWorld3
  :: ([GHC.Types.Char],
      GHC.Types.IO [Graphics.Rendering.OpenGL.Raw.Types.GLfloat])
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
TestVals.mkWorld3 =
  (TestVals.mkWorld14,
   TestVals.mkWorld4
   `cast` (Sym
             <(GHC.Types.NTCo:IO
                 <[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>)>
           :: (GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                     [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #))
                ~#
              GHC.Types.IO [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]))

TestVals.mkWorld2 :: [Engine.Graphics.Shaders.ShaderUniform]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
TestVals.mkWorld2 =
  GHC.Types.:
    @ Engine.Graphics.Shaders.ShaderUniform
    TestVals.mkWorld3
    (GHC.Types.[] @ Engine.Graphics.Shaders.ShaderUniform)

TestVals.mkWorld15
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
TestVals.mkWorld15 =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkModel11
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

TestVals.mkWorld16
  :: Engine.Core.Vec.Vec3 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 40}]
TestVals.mkWorld16 =
  Engine.Core.Vec.Vec3
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (TestVals.mkObj4
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkObj4
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (TestVals.mkObj4
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

TestVals.mkWorld1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Engine.Core.World.World () #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 362 30}]
TestVals.mkWorld1 =
  \ (eta_X1t :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case TestVals.mkModel1 eta_X1t of _ { (# ipv_acwW, ipv1_acwX #) ->
    case GHC.Prim.newMutVar#
           @ (Engine.Core.World.GameObject ())
           @ GHC.Prim.RealWorld
           (case ipv1_acwX
            of tpl_Xb
            { Engine.Model.Model.Model ipv2_sB28
                                       ipv3_sB29
                                       ipv4_sB2a
                                       ipv5_sB2b
                                       ipv6_sB2c
                                       ipv7_sB2d ->
            Engine.Core.World.PureEntity
              @ ()
              TestVals.mkWorld16
              (GHC.Base.id @ (Engine.Core.World.GameObject ()))
              tpl_Xb
              GHC.Tuple.()
            })
           ipv_acwW
    of _ { (# ipv2_aB12, ipv3_aB13 #) ->
    case Engine.Terrain.Generator.genSimplexModel1
           TestVals.mkObj11
           TestVals.mkObj10
           (TestVals.mkObj9
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
           TestVals.mkObj8
           (TestVals.mkObj7
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
           (TestVals.mkObj4
            `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                    :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
           ipv2_aB12
    of _ { (# ipv4_Xcy8, ipv5_Xcya #) ->
    case GHC.Prim.newMutVar#
           @ (Engine.Core.World.GameObject ())
           @ GHC.Prim.RealWorld
           (case ipv5_Xcya
            of tpl_Xb
            { Engine.Model.Model.Model ipv6_sB2E
                                       ipv7_sB2F
                                       ipv8_sB2G
                                       ipv9_sB2H
                                       ipv10_sB2I
                                       ipv11_sB2J ->
            Engine.Core.World.PureEntity
              @ ()
              TestVals.mkWorld15
              (GHC.Base.id @ (Engine.Core.World.GameObject ()))
              tpl_Xb
              GHC.Tuple.()
            })
           ipv4_Xcy8
    of _ { (# ipv6_XB4x, ipv7_XB4z #) ->
    case GHC.Prim.newMutVar#
           @ (Engine.Core.World.GameObject ())
           @ GHC.Prim.RealWorld
           (Engine.Object.Player.mkPlayer @ ())
           ipv6_XB4x
    of _ { (# ipv8_XB4E, ipv9_XB4G #) ->
    case Data.Time.Clock.POSIX.getPOSIXTime1 ipv8_XB4E
    of _ { (# ipv10_alKF, ipv11_alKG #) ->
    case GHC.Prim.newMutVar#
           @ Engine.Core.World.WorldState
           @ GHC.Prim.RealWorld
           (case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime ipv11_alKG
            of _ { (# ww1_aB6r, ww2_aB6s #) ->
            Engine.Core.World.WorldState
              (TestVals.mkModel12
               `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                       :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
              (Data.Time.Clock.UTC.UTCTime ww1_aB6r ww2_aB6s)
              (TestVals.mkModel11
               `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                       :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
            })
           ipv10_alKF
    of _ { (# ipv12_XB4Y, ipv13_XB50 #) ->
    (# ipv12_XB4Y,
       Engine.Core.World.World
         @ ()
         ((GHC.STRef.STRef
             @ GHC.Prim.RealWorld @ (Engine.Core.World.GameObject ()) ipv9_XB4G)
          `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.GameObject
                                                  ()>
                  :: GHC.STRef.STRef
                       GHC.Prim.RealWorld (Engine.Core.World.GameObject ())
                       ~#
                     GHC.IORef.IORef (Engine.Core.World.GameObject ())))
         (GHC.Types.:
            @ (GHC.IORef.IORef (Engine.Core.World.GameObject ()))
            ((GHC.STRef.STRef
                @ GHC.Prim.RealWorld @ (Engine.Core.World.GameObject ()) ipv3_aB13)
             `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.GameObject
                                                     ()>
                     :: GHC.STRef.STRef
                          GHC.Prim.RealWorld (Engine.Core.World.GameObject ())
                          ~#
                        GHC.IORef.IORef (Engine.Core.World.GameObject ())))
            (GHC.Types.:
               @ (GHC.IORef.IORef (Engine.Core.World.GameObject ()))
               ((GHC.STRef.STRef
                   @ GHC.Prim.RealWorld @ (Engine.Core.World.GameObject ()) ipv7_XB4z)
                `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.GameObject
                                                        ()>
                        :: GHC.STRef.STRef
                             GHC.Prim.RealWorld (Engine.Core.World.GameObject ())
                             ~#
                           GHC.IORef.IORef (Engine.Core.World.GameObject ())))
               (GHC.Types.[]
                  @ (GHC.IORef.IORef (Engine.Core.World.GameObject ())))))
         TestVals.mkWorld2
         ((GHC.STRef.STRef
             @ GHC.Prim.RealWorld @ Engine.Core.World.WorldState ipv13_XB50)
          `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.WorldState>
                  :: GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState
                       ~#
                     GHC.IORef.IORef Engine.Core.World.WorldState)) #)
    }
    }
    }
    }
    }
    }
    }

TestVals.mkWorld :: GHC.Types.IO (Engine.Core.World.World ())
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
TestVals.mkWorld =
  TestVals.mkWorld1
  `cast` (Sym <(GHC.Types.NTCo:IO <Engine.Core.World.World ()>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                    Engine.Core.World.World () #))
               ~#
             GHC.Types.IO (Engine.Core.World.World ()))



[16 of 17] Compiling Engine.Graphics.Graphics ( Engine/Graphics/Graphics.hs, Engine/Graphics/Graphics.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 591, types: 771, coercions: 217}

ww_rCnu :: GHC.Integer.Type.Integer
[GblId, Str=DmdType]
ww_rCnu = __integer 1

ww1_rCnv :: GHC.Integer.Type.Integer
[GblId, Str=DmdType]
ww1_rCnv = __integer 10

a_rCnw :: GHC.Types.Double
[GblId, Str=DmdType]
a_rCnw = GHC.Float.$w$cfromRational ww_rCnu ww1_rCnv

Rec {
Engine.Graphics.Graphics.$wa1 [Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=DmdType LLL]
Engine.Graphics.Graphics.$wa1 =
  \ (ww2_sCey :: GHC.Prim.Int#)
    (ww3_sCeC :: GHC.Prim.Int#)
    (w_sCeE :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ww3_sCeC of ds_XBQu {
      __DEFAULT ->
        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glViewport
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLint
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLint
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLsizei
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLsizei
                   -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CInt>
                        -> <Foreign.C.Types.NTCo:CInt>
                        -> <Foreign.C.Types.NTCo:CInt>
                        -> <Foreign.C.Types.NTCo:CInt>
                        -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CInt
                           -> Foreign.C.Types.CInt
                           -> Foreign.C.Types.CInt
                           -> Foreign.C.Types.CInt
                           -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Int.Int32
                           -> GHC.Int.Int32
                           -> GHC.Int.Int32
                           -> GHC.Int.Int32
                           -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds6_aBVG ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Int#
                -> GHC.Prim.Int#
                -> GHC.Prim.Int#
                -> GHC.Prim.Int#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBVX
               ds6_aBVG
               0
               0
               (GHC.Prim.narrow32Int# ww2_sCey)
               (GHC.Prim.narrow32Int# ds_XBQu)
               w_sCeE
        of _ { (# ds16_aBW2 #) ->
        case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glMatrixMode
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds3_aBU1 ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBU6
               ds3_aBU1 (__word 5889) ds16_aBW2
        of _ { (# ds7_aBUb #) ->
        case Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glLoadIdentity
               @ (GHC.Types.IO ())
        of _ { GHC.Ptr.FunPtr ds4_aBUm ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBUl
               ds4_aBUm ds7_aBUb
        of _ { (# ds8_aBUq #) ->
        case (Graphics.Rendering.GLU.Raw.Functions.ptr_gluPerspective
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLdouble
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLdouble
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLdouble
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLdouble
                   -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CDouble>
                        -> <Foreign.C.Types.NTCo:CDouble>
                        -> <Foreign.C.Types.NTCo:CDouble>
                        -> <Foreign.C.Types.NTCo:CDouble>
                        -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CDouble
                           -> Foreign.C.Types.CDouble
                           -> Foreign.C.Types.CDouble
                           -> Foreign.C.Types.CDouble
                           -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Types.Double
                           -> GHC.Types.Double
                           -> GHC.Types.Double
                           -> GHC.Types.Double
                           -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds10_aBUR ->
        case a_rCnw of _ { GHC.Types.D# ds12_aBV3 ->
        case GHC.Prim./##
               (GHC.Prim.int2Double# ww2_sCey) (GHC.Prim.int2Double# ds_XBQu)
        of wild3_a3KK { __DEFAULT ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Double#
                -> GHC.Prim.Double#
                -> GHC.Prim.Double#
                -> GHC.Prim.Double#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBV8
               ds10_aBUR 45.0 wild3_a3KK ds12_aBV3 100.0 ds8_aBUq
        of _ { (# ds13_aBVd #) ->
        case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glMatrixMode
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds15_XBV1 ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBU6
               ds15_XBV1 (__word 5888) ds13_aBVd
        of _ { (# ds17_XBVe #) ->
        Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.glLoadIdentity1
          ds17_XBVe
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        }
        };
      0 -> Engine.Graphics.Graphics.$wa1 ww2_sCey 1 w_sCeE
    }
end Rec }

Engine.Graphics.Graphics.resizeScene1 [InlPrag=INLINE[0]]
  :: Graphics.UI.GLFW.Types.Window
     -> GHC.Types.Int
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=DmdType AU(L)U(L)L,
 Unf=Unf{Src=Worker=Engine.Graphics.Graphics.$wa1, TopLvl=True,
         Arity=4, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ _
                 (w1_sCew [Occ=Once!] :: GHC.Types.Int)
                 (w2_sCeA [Occ=Once!] :: GHC.Types.Int)
                 (w3_sCeE [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1_sCew of _ { GHC.Types.I# ww2_sCey [Occ=Once] ->
                 case w2_sCeA of _ { GHC.Types.I# ww3_sCeC [Occ=Once] ->
                 Engine.Graphics.Graphics.$wa1 ww2_sCey ww3_sCeC w3_sCeE
                 }
                 }}]
Engine.Graphics.Graphics.resizeScene1 =
  \ _
    (w1_sCew :: GHC.Types.Int)
    (w2_sCeA :: GHC.Types.Int)
    (w3_sCeE :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w1_sCew of _ { GHC.Types.I# ww2_sCey ->
    case w2_sCeA of _ { GHC.Types.I# ww3_sCeC ->
    Engine.Graphics.Graphics.$wa1 ww2_sCey ww3_sCeC w3_sCeE
    }
    }

Engine.Graphics.Graphics.resizeScene
  :: Graphics.UI.GLFW.WindowSizeCallback
[GblId,
 Arity=4,
 Str=DmdType AU(L)U(L)L,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Graphics.Graphics.resizeScene1
               `cast` (<Graphics.UI.GLFW.Types.Window>
                       -> <GHC.Types.Int>
                       -> <GHC.Types.Int>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (Graphics.UI.GLFW.Types.Window
                           -> GHC.Types.Int
                           -> GHC.Types.Int
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (Graphics.UI.GLFW.Types.Window
                           -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()))}]
Engine.Graphics.Graphics.resizeScene =
  Engine.Graphics.Graphics.resizeScene1
  `cast` (<Graphics.UI.GLFW.Types.Window>
          -> <GHC.Types.Int>
          -> <GHC.Types.Int>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (Graphics.UI.GLFW.Types.Window
              -> GHC.Types.Int
              -> GHC.Types.Int
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (Graphics.UI.GLFW.Types.Window
              -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()))

Engine.Graphics.Graphics.initGL1
  :: Graphics.UI.GLFW.Types.Window
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Str=DmdType LL]
Engine.Graphics.Graphics.initGL1 =
  \ (win_aBLl :: Graphics.UI.GLFW.Types.Window)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glShadeModel
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds3_aBWb ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBWg
           ds3_aBWb (__word 7425) eta_B1
    of _ { (# ds7_aBWl #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glClearColor
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLclampf
               -> Graphics.Rendering.OpenGL.Raw.Types.GLclampf
               -> Graphics.Rendering.OpenGL.Raw.Types.GLclampf
               -> Graphics.Rendering.OpenGL.Raw.Types.GLclampf
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CFloat>
                    -> <Foreign.C.Types.NTCo:CFloat>
                    -> <Foreign.C.Types.NTCo:CFloat>
                    -> <Foreign.C.Types.NTCo:CFloat>
                    -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CFloat
                       -> Foreign.C.Types.CFloat
                       -> Foreign.C.Types.CFloat
                       -> Foreign.C.Types.CFloat
                       -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Types.Float
                       -> GHC.Types.Float
                       -> GHC.Types.Float
                       -> GHC.Types.Float
                       -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds6_aBWE ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBWV
           ds6_aBWE
           (__float 0.0)
           (__float 0.0)
           (__float 0.0)
           (__float 0.0)
           ds7_aBWl
    of _ { (# ds16_aBX0 #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glClearDepth
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLclampd
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CDouble> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CDouble -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Types.Double -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds4_aBXa ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Double#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBXf
           ds4_aBXa 1.0 ds16_aBX0
    of _ { (# ds8_aBXk #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glEnable
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds10_aBXs ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBXx
           ds10_aBXs (__word 2929) ds8_aBXk
    of _ { (# ds11_aBXC #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glDepthFunc
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds13_aBXK ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBXP
           ds13_aBXK (__word 515) ds11_aBXC
    of _ { (# ds14_aBXU #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glHint
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CUInt -> Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Word.Word32 -> GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds17_aBY3 ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBYc
           ds17_aBY3 (__word 3152) (__word 4354) ds14_aBXU
    of _ { (# ds18_aBYh #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glEnable
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds20_XBYo ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBXx
           ds20_XBYo (__word 2884) ds18_aBYh
    of _ { (# ds21_XBYB #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glCullFace
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds23_aBYr ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBYw
           ds23_aBYr (__word 1029) ds21_XBYB
    of _ { (# ds24_aBYB #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glEnable
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds26_XBYA ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBXx
           ds26_XBYA (__word 5890) ds24_aBYB
    of _ { (# ds27_XBYN #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glTexParameteri
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLint
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CInt>
                    -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CInt
                       -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Word.Word32
                       -> GHC.Word.Word32 -> GHC.Int.Int32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds29_aBYN ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBZ0
           ds29_aBYN (__word 3553) (__word 10240) 9729 ds27_XBYN
    of _ { (# ds30_aBZ5 #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glTexParameteri
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLint
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CInt>
                    -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CInt
                       -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Word.Word32
                       -> GHC.Word.Word32 -> GHC.Int.Int32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds32_XC07 ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBZ0
           ds32_XC07 (__word 3553) (__word 10241) 9729 ds30_aBZ5
    of _ { (# ds33_XC0s #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glTexParameteri
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLint
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CInt>
                    -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CInt
                       -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Word.Word32
                       -> GHC.Word.Word32 -> GHC.Int.Int32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds35_XC0d ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBZ0
           ds35_XC0d (__word 3553) (__word 10242) 33071 ds33_XC0s
    of _ { (# ds36_XC0y #) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glTexParameteri
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLenum
               -> Graphics.Rendering.OpenGL.Raw.Types.GLint
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CUInt>
                    -> <Foreign.C.Types.NTCo:CInt>
                    -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr
                      (Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CUInt
                       -> Foreign.C.Types.CInt
                       -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr
                      (GHC.Word.Word32
                       -> GHC.Word.Word32 -> GHC.Int.Int32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds38_XC0j ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBZ0
           ds38_XC0j (__word 3553) (__word 10243) 33071 ds36_XC0y
    of _ { (# ds39_XC0E #) ->
    case GHC.Prim.newAlignedPinnedByteArray#
           @ GHC.Prim.RealWorld 8 4 ds39_XC0E
    of _ { (# ipv_aBZj, ipv1_aBZk #) ->
    case GHC.Prim.unsafeFreezeByteArray#
           @ GHC.Prim.RealWorld ipv1_aBZk ipv_aBZj
    of _ { (# ipv2_aBZo, ipv3_aBZp #) ->
    case win_aBLl
         `cast` (<Graphics.UI.GLFW.Types.NTCo:Window>
                 :: Graphics.UI.GLFW.Types.Window
                      ~#
                    GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow)
    of _ { GHC.Ptr.Ptr ds43_aBZu ->
    let {
      a1_aBZt [Dmd=Just L] :: GHC.Prim.Addr#
      [LclId, Str=DmdType]
      a1_aBZt = GHC.Prim.byteArrayContents# ipv3_aBZp } in
    let {
      a2_aBZw [Dmd=Just L] :: GHC.Prim.Addr#
      [LclId, Str=DmdType]
      a2_aBZw = GHC.Prim.plusAddr# a1_aBZt 4 } in
    case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwGetFramebufferSize GHC.Prim.Addr#
                                                             -> GHC.Prim.Addr#
                                                             -> GHC.Prim.Addr#
                                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld #)}_aBZx
           ds43_aBZu a1_aBZt a2_aBZw ipv2_aBZo
    of _ { (# ds44_aBZA #) ->
    case GHC.Prim.readInt32OffAddr#
           @ GHC.Prim.RealWorld a1_aBZt 0 ds44_aBZA
    of _ { (# ipv4_aBZE, ipv5_aBZF #) ->
    case GHC.Prim.readInt32OffAddr#
           @ GHC.Prim.RealWorld a2_aBZw 0 ipv4_aBZE
    of _ { (# ipv6_aBZJ, ipv7_aBZK #) ->
    case GHC.Prim.touch# @ GHC.Prim.ByteArray# ipv3_aBZp ipv6_aBZJ
    of s4_aBZM { __DEFAULT ->
    Engine.Graphics.Graphics.$wa1 ipv5_aBZF ipv7_aBZK s4_aBZM
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }

Engine.Graphics.Graphics.initGL
  :: Graphics.UI.GLFW.Types.Window -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=DmdType LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Engine.Graphics.Graphics.initGL =
  Engine.Graphics.Graphics.initGL1
  `cast` (<Graphics.UI.GLFW.Types.Window>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (Graphics.UI.GLFW.Types.Window
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (Graphics.UI.GLFW.Types.Window -> GHC.Types.IO ()))

lvl_rCnx :: [GHC.Types.Char]
[GblId, Str=DmdType]
lvl_rCnx = GHC.CString.unpackCString# "time"

Rec {
Engine.Graphics.Graphics.$wa [Occ=LoopBreaker]
  :: forall t_e.
     GHC.IORef.IORef (Engine.Core.World.GameObject t_e)
     -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_e)]
     -> [Engine.Graphics.Shaders.ShaderUniform]
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld Engine.Core.World.WorldState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=5, Str=DmdType U(L*)SU(L*)LL]
Engine.Graphics.Graphics.$wa =
  \ (@ t_e)
    (ww2_sCf0 :: GHC.IORef.IORef (Engine.Core.World.GameObject t_e))
    (ww3_sCf1 :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_e)])
    (ww4_sCf2 :: [Engine.Graphics.Shaders.ShaderUniform])
    (ww5_sCf5
       :: GHC.Prim.MutVar#
            GHC.Prim.RealWorld Engine.Core.World.WorldState)
    (w_sCf8 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case ww3_sCf1 of _ {
      [] -> (# w_sCf8, GHC.Tuple.() #);
      : ds1_a3Km ds2_a3Kn ->
        case ds1_a3Km
             `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_e>
                     :: GHC.IORef.IORef (Engine.Core.World.GameObject t_e)
                          ~#
                        GHC.STRef.STRef
                          GHC.Prim.RealWorld (Engine.Core.World.GameObject t_e))
        of _ { GHC.STRef.STRef var#_aorT ->
        case GHC.Prim.readMutVar#
               @ GHC.Prim.RealWorld
               @ (Engine.Core.World.GameObject t_e)
               var#_aorT
               w_sCf8
        of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
        case Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glPushMatrix
               @ (GHC.Types.IO ())
        of _ { GHC.Ptr.FunPtr ds4_aC3n ->
        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aC3m
               ds4_aC3n ipv_a3Ui
        of _ { (# ds5_aC3r #) ->
        case (Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glTranslatef
                @ (Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                   -> GHC.Types.IO ()))
             `cast` (GHC.Ptr.FunPtr
                       (<Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <Foreign.C.Types.NTCo:CFloat>
                        -> <GHC.Types.IO ()>)
                     :: GHC.Ptr.FunPtr
                          (Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> Foreign.C.Types.CFloat
                           -> GHC.Types.IO ())
                          ~#
                        GHC.Ptr.FunPtr
                          (GHC.Types.Float
                           -> GHC.Types.Float -> GHC.Types.Float -> GHC.Types.IO ()))
        of _ { GHC.Ptr.FunPtr ds7_az0L ->
        let {
          $w$j_sCfc
            :: GHC.Prim.Float#
               -> GHC.Prim.Float#
               -> GHC.Prim.Float#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId, Arity=3, Str=DmdType LLL]
          $w$j_sCfc =
            \ (ww6_sCeL :: GHC.Prim.Float#)
              (ww7_sCeP :: GHC.Prim.Float#)
              (ww8_sCeT :: GHC.Prim.Float#) ->
              case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.Float#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_az0Y
                     ds7_az0L ww6_sCeL ww7_sCeP ww8_sCeT ds5_aC3r
              of _ { (# ds13_az13 #) ->
              case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glUseProgram
                      @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
                   `cast` (GHC.Ptr.FunPtr
                             (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                           :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                                ~#
                              GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
              of _ { GHC.Ptr.FunPtr ds9_aC12 ->
              case ipv1_a3Uj of _ {
                __DEFAULT -> case Engine.Core.World.pentityModel1 of wild5_00 { };
                Engine.Core.World.PureEntity ds10_dl2o
                                             ds11_dl2p
                                             ds12_dl2q
                                             ds14_dl2r ->
                  case ds12_dl2q
                  of _
                  { Engine.Model.Model.Model ds15_sCiM
                                             ds16_sCiR
                                             ds17_sCiQ
                                             ds18_sCiP
                                             ds19_sCiO
                                             ds20_sCiN ->
                  case ds15_sCiM
                       `cast` (<Foreign.C.Types.NTCo:CUInt>
                               :: Foreign.C.Types.CUInt ~# GHC.Word.Word32)
                  of ds21_sCiW { GHC.Word.W32# ds22_sCiV ->
                  case ds18_sCiP
                       `cast` (<Foreign.C.Types.NTCo:CInt>
                               :: Foreign.C.Types.CInt ~# GHC.Int.Int32)
                  of _ { GHC.Int.I32# ds24_sCj6 ->
                  case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aC17
                         ds9_aC12 ds22_sCiV ds13_az13
                  of _ { (# ds25_aC1c #) ->
                  case Engine.Graphics.Shaders.bindShaderAttribs1 ds16_sCiR ds25_aC1c
                  of _ { (# ipv2_X3Xz, _ #) ->
                  case Engine.Graphics.Shaders.bindUniforms1
                         (ds21_sCiW
                          `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                                  :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
                         ww4_sCf2
                         ipv2_X3Xz
                  of _ { (# ipv4_X3Xy, _ #) ->
                  case Engine.Graphics.Shaders.bindTextures3
                         (ds21_sCiW
                          `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                                  :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
                         ds17_sCiQ
                         (Engine.Graphics.Shaders.bindTextures2
                          `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                                  :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
                         ipv4_X3Xy
                  of _ { (# ipv6_X3Z7, _ #) ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld
                         @ Engine.Core.World.WorldState
                         ww5_sCf5
                         ipv6_X3Z7
                  of _ { (# ipv8_X3Zf, ipv9_X3Zi #) ->
                  case Engine.Graphics.Shaders.bindUniforms1
                         (ds21_sCiW
                          `cast` (Sym <(Foreign.C.Types.NTCo:CUInt)>
                                  :: GHC.Word.Word32 ~# Foreign.C.Types.CUInt))
                         (GHC.Types.:
                            @ Engine.Graphics.Shaders.ShaderUniform
                            (lvl_rCnx,
                             (\ (s_a3Uq :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                (# s_a3Uq,
                                   GHC.Types.:
                                     @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                                     (case ipv9_X3Zi
                                      of _
                                      { Engine.Core.World.WorldState ds30_dl3u
                                                                     ds31_dl3v
                                                                     ds32_dl3w ->
                                      case ds31_dl3v
                                      of _ { Data.Time.Clock.UTC.UTCTime ds33_sCj1 ds34_sCj0 ->
                                      case GHC.Real.$w$c/
                                             (ds34_sCj0
                                              `cast` (<Data.Time.Clock.Scale.NTCo:DiffTime> ; <Data.Fixed.NTCo:Fixed
                                                                                                 <Data.Fixed.E12>>
                                                      :: Data.Time.Clock.Scale.DiffTime
                                                           ~#
                                                         GHC.Integer.Type.Integer))
                                             GHC.Real.$fNumRatio3
                                             Data.Fixed.$fHasResolutionE7
                                             GHC.Real.$fNumRatio3
                                      of _ { (# ww10_aC1n, ww11_aC1o #) ->
                                      (GHC.Float.$w$cfromRational1 ww10_aC1n ww11_aC1o)
                                      `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                              :: GHC.Types.Float ~# Foreign.C.Types.CFloat)
                                      }
                                      }
                                      })
                                     (GHC.Types.[]
                                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat) #))
                             `cast` (Sym
                                       <(GHC.Types.NTCo:IO
                                           <[Graphics.Rendering.OpenGL.Raw.Types.GLfloat]>)>
                                     :: (GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               [Graphics.Rendering.OpenGL.Raw.Types.GLfloat] #))
                                          ~#
                                        GHC.Types.IO [Graphics.Rendering.OpenGL.Raw.Types.GLfloat]))
                            (GHC.Types.[] @ Engine.Graphics.Shaders.ShaderUniform))
                         ipv8_X3Zf
                  of _ { (# ipv10_X3XE, _ #) ->
                  case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glDrawArrays
                          @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
                             -> Graphics.Rendering.OpenGL.Raw.Types.GLint
                             -> Graphics.Rendering.OpenGL.Raw.Types.GLsizei
                             -> GHC.Types.IO ()))
                       `cast` (GHC.Ptr.FunPtr
                                 (<Foreign.C.Types.NTCo:CUInt>
                                  -> <Foreign.C.Types.NTCo:CInt>
                                  -> <Foreign.C.Types.NTCo:CInt>
                                  -> <GHC.Types.IO ()>)
                               :: GHC.Ptr.FunPtr
                                    (Foreign.C.Types.CUInt
                                     -> Foreign.C.Types.CInt
                                     -> Foreign.C.Types.CInt
                                     -> GHC.Types.IO ())
                                    ~#
                                  GHC.Ptr.FunPtr
                                    (GHC.Word.Word32
                                     -> GHC.Int.Int32 -> GHC.Int.Int32 -> GHC.Types.IO ()))
                  of _ { GHC.Ptr.FunPtr ds32_aC2k ->
                  case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Int#
                -> GHC.Prim.Int#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aC2x
                         ds32_aC2k (__word 4) 0 ds24_sCj6 ipv10_X3XE
                  of _ { (# ds33_aC2C #) ->
                  case GHC.List.$wlen @ Engine.Graphics.Textures.Texture ds17_sCiQ 0
                  of ww9_adam { __DEFAULT ->
                  let {
                    $j_sCcK
                      :: GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                    [LclId, Arity=1, Str=DmdType L]
                    $j_sCcK =
                      \ (ipv12_X3Xm :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                        case Engine.Graphics.Shaders.disableShaderAttribs1
                               ds16_sCiR ipv12_X3Xm
                        of _ { (# ipv13_X3Xk, _ #) ->
                        case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glUseProgram
                                @ (Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
                             `cast` (GHC.Ptr.FunPtr
                                       (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                                     :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                                          ~#
                                        GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
                        of _ { GHC.Ptr.FunPtr ds36_XC3x ->
                        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aC17
                               ds36_XC3x (__word 0) ipv13_X3Xk
                        of _ { (# ds37_XC3K #) ->
                        case Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glPopMatrix
                               @ (GHC.Types.IO ())
                        of _ { GHC.Ptr.FunPtr ds39_aC1I ->
                        case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aC1H
                               ds39_aC1I ds37_XC3K
                        of _ { (# ds40_aC1M #) ->
                        Engine.Graphics.Graphics.$wa
                          @ t_e ww2_sCf0 ds2_a3Kn ww4_sCf2 ww5_sCf5 ds40_aC1M
                        }
                        }
                        }
                        }
                        } } in
                  case GHC.Prim.ltWord#
                         (__word 0) (GHC.Prim.narrow32Word# (GHC.Prim.int2Word# ww9_adam))
                  of _ {
                    GHC.Types.False -> $j_sCcK ds33_aC2C;
                    GHC.Types.True ->
                      case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glActiveTexture
                              @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum -> GHC.Types.IO ()))
                           `cast` (GHC.Ptr.FunPtr
                                     (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                                   :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                                        ~#
                                      GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
                      of _ { GHC.Ptr.FunPtr ds35_ackF ->
                      case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_ackK
                             ds35_ackF (__word 33984) ds33_aC2C
                      of _ { (# ds36_ackP #) ->
                      case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glBindTexture
                              @ (Graphics.Rendering.OpenGL.Raw.Types.GLenum
                                 -> Graphics.Rendering.OpenGL.Raw.Types.GLuint -> GHC.Types.IO ()))
                           `cast` (GHC.Ptr.FunPtr
                                     (<Foreign.C.Types.NTCo:CUInt>
                                      -> <Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                                   :: GHC.Ptr.FunPtr
                                        (Foreign.C.Types.CUInt
                                         -> Foreign.C.Types.CUInt -> GHC.Types.IO ())
                                        ~#
                                      GHC.Ptr.FunPtr
                                        (GHC.Word.Word32 -> GHC.Word.Word32 -> GHC.Types.IO ()))
                      of _ { GHC.Ptr.FunPtr ds38_acla ->
                      case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aclj
                             ds38_acla (__word 3553) (__word 0) ds36_ackP
                      of _ { (# ds39_aclo #) ->
                      $j_sCcK ds39_aclo
                      }
                      }
                      }
                      }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
              }
              }
              } } in
        case ipv1_a3Uj of _ {
          Engine.Core.World.Player ds8_dwef
                                   ds9_dweg
                                   ds10_dweh
                                   ds11_dwei
                                   ds12_dwej ->
            case ds8_dwef
            of _ { Engine.Core.Vec.Vec3 objx_sCjc objy_sCje objz_sCjd ->
            case objx_sCjc
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww6_sCji ->
            case objy_sCje
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww7_sCjm ->
            case objz_sCjd
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww8_sCk9 ->
            $w$j_sCfc ww6_sCji ww7_sCjm ww8_sCk9
            }
            }
            }
            };
          Engine.Core.World.PureEntity ds8_dweb
                                       ds9_dwec
                                       ds10_dwed
                                       ds11_dwee ->
            case ds8_dweb
            of _ { Engine.Core.Vec.Vec3 objx_sCju objy_sCjw objz_sCjv ->
            case objx_sCju
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww6_sCjA ->
            case objy_sCjw
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww7_sCjE ->
            case objz_sCjv
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww8_sCk7 ->
            $w$j_sCfc ww6_sCjA ww7_sCjE ww8_sCk7
            }
            }
            }
            };
          Engine.Core.World.EffectfulEntity ds8_dwek
                                            ds9_dwel
                                            ds10_dwem
                                            ds11_dwen ->
            case ds8_dwek
            of _ { Engine.Core.Vec.Vec3 objx_sCjM objy_sCjO objz_sCjN ->
            case objx_sCjM
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww6_sCjS ->
            case objy_sCjO
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww7_sCjW ->
            case objz_sCjN
                 `cast` (<Foreign.C.Types.NTCo:CFloat>
                         :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
            of _ { GHC.Types.F# ww8_sCk5 ->
            $w$j_sCfc ww6_sCjS ww7_sCjW ww8_sCk5
            }
            }
            }
            }
        }
        }
        }
        }
        }
        }
    }
end Rec }

Engine.Graphics.Graphics.renderWorld1 [InlPrag=INLINE[0]]
  :: forall t_e.
     Engine.Core.World.World t_e
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=DmdType U(U(L*)SU(L*)U(L))L,
 Unf=Unf{Src=Worker=Engine.Graphics.Graphics.$wa, TopLvl=True,
         Arity=2, Value=True, ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_e)
                 (w_sCeY [Occ=Once!] :: Engine.Core.World.World t_e)
                 (w1_sCf8 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sCeY
                 of _
                 { Engine.Core.World.World ww2_sCf0 [Occ=Once]
                                           ww3_sCf1 [Occ=Once]
                                           ww4_sCf2 [Occ=Once]
                                           ww5_sCf3 [Occ=Once] ->
                 case ww5_sCf3
                      `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                              :: GHC.IORef.IORef Engine.Core.World.WorldState
                                   ~#
                                 GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
                 of _ { GHC.STRef.STRef ww7_sCf5 [Occ=Once] ->
                 Engine.Graphics.Graphics.$wa
                   @ t_e ww2_sCf0 ww3_sCf1 ww4_sCf2 ww7_sCf5 w1_sCf8
                 }
                 }}]
Engine.Graphics.Graphics.renderWorld1 =
  \ (@ t_e)
    (w_sCeY :: Engine.Core.World.World t_e)
    (w1_sCf8 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_sCeY
    of _
    { Engine.Core.World.World ww2_sCf0 ww3_sCf1 ww4_sCf2 ww5_sCf3 ->
    case ww5_sCf3
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                 :: GHC.IORef.IORef Engine.Core.World.WorldState
                      ~#
                    GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
    of _ { GHC.STRef.STRef ww7_sCk2 ->
    Engine.Graphics.Graphics.$wa
      @ t_e ww2_sCf0 ww3_sCf1 ww4_sCf2 ww7_sCk2 w1_sCf8
    }
    }

Engine.Graphics.Graphics.renderWorld
  :: forall t_aBL9. Engine.Core.World.World t_aBL9 -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=DmdType U(U(L*)SU(L*)U(L))L,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Engine.Graphics.Graphics.renderWorld1
               `cast` (forall t_e.
                       <Engine.Core.World.World t_e> -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (forall t_e.
                           Engine.Core.World.World t_e
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (forall t_e. Engine.Core.World.World t_e -> GHC.Types.IO ()))}]
Engine.Graphics.Graphics.renderWorld =
  Engine.Graphics.Graphics.renderWorld1
  `cast` (forall t_e.
          <Engine.Core.World.World t_e> -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_e.
              Engine.Core.World.World t_e
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_e. Engine.Core.World.World t_e -> GHC.Types.IO ()))



[17 of 17] Compiling Main             ( Main.hs, Main.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 685, types: 1,15, coercions: 156}

Main.updateStep4 :: forall t_k. Engine.Core.World.GameObject t_k
[GblId, Str=DmdType b]
Main.updateStep4 =
  \ (@ t_k) ->
    Control.Exception.Base.patError
      @ (Engine.Core.World.GameObject t_k)
      "Main.hs:93:21-48|record update"

Main.updateStep3 :: GHC.Types.Float
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Main.updateStep3 = GHC.Types.F# (__float 0.0)

Main.updateStep2
  :: Engine.Core.Vec.Vec2 Graphics.Rendering.OpenGL.Raw.Types.GLfloat
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 30}]
Main.updateStep2 =
  Engine.Core.Vec.Vec2
    @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
    (Main.updateStep3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
    (Main.updateStep3
     `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
             :: GHC.Types.Float ~# Foreign.C.Types.CFloat))

Main.$wa3
  :: forall t_k.
     GHC.IORef.IORef (Engine.Core.World.GameObject t_k)
     -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_k)]
     -> [Engine.Graphics.Shaders.ShaderUniform]
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld Engine.Core.World.WorldState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=DmdType U(L*)U(L*)U(L*)LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0] 706 0}]
Main.$wa3 =
  \ (@ t_k)
    (ww_sDp3 :: GHC.IORef.IORef (Engine.Core.World.GameObject t_k))
    (ww1_sDp4 :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_k)])
    (ww2_sDp5 :: [Engine.Graphics.Shaders.ShaderUniform])
    (ww3_sDp8
       :: GHC.Prim.MutVar#
            GHC.Prim.RealWorld Engine.Core.World.WorldState)
    (w_sDpb :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.readMutVar#
           @ GHC.Prim.RealWorld @ Engine.Core.World.WorldState ww3_sDp8 w_sDpb
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Data.Time.Clock.POSIX.getPOSIXTime1 ipv_a3Ui
    of _ { (# ipv2_alKF, ipv3_alKG #) ->
    case GHC.Prim.writeMutVar#
           @ GHC.Prim.RealWorld
           @ Engine.Core.World.WorldState
           ww3_sDp8
           (case ipv1_a3Uj
            of _ { Engine.Core.World.WorldState ds_dCWH ds3_dCWI ds4_dCWJ ->
            case ds3_dCWI
            of _ { Data.Time.Clock.UTC.UTCTime ww4_sDuN ww5_sDuM ->
            case Data.Time.Clock.POSIX.$wposixSecondsToUTCTime ipv3_alKG
            of _ { (# ww7_aB6r, ww8_aB6s #) ->
            case GHC.Real.$w$c/
                   (Data.Time.Clock.UTCDiff.$wa ww7_aB6r ww8_aB6s ww4_sDuN ww5_sDuM)
                   GHC.Real.$fNumRatio3
                   Data.Fixed.$fHasResolutionE7
                   GHC.Real.$fNumRatio3
            of _ { (# ww10_aD0M, ww11_aD0N #) ->
            case GHC.Float.$w$cfromRational1 ww10_aD0M ww11_aD0N
            of nt_sD1v { GHC.Types.F# ipv4_sD1w ->
            Engine.Core.World.WorldState
              ds_dCWH
              (Data.Time.Clock.UTC.UTCTime ww7_aB6r ww8_aB6s)
              (nt_sD1v
               `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                       :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
            }
            }
            }
            }
            })
           ipv2_alKF
    of s2#_awlT { __DEFAULT ->
    case ww_sDp3
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_k>
                 :: GHC.IORef.IORef (Engine.Core.World.GameObject t_k)
                      ~#
                    GHC.STRef.STRef
                      GHC.Prim.RealWorld (Engine.Core.World.GameObject t_k))
    of wild_XosP { GHC.STRef.STRef var#_XosS ->
    case GHC.Prim.readMutVar#
           @ GHC.Prim.RealWorld
           @ (Engine.Core.World.GameObject t_k)
           var#_XosS
           s2#_awlT
    of _ { (# ipv4_X3Vk, ipv5_X3Vm #) ->
    let {
      a_sDqd
        :: GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState
      [LclId]
      a_sDqd =
        GHC.STRef.STRef
          @ GHC.Prim.RealWorld @ Engine.Core.World.WorldState ww3_sDp8 } in
    let {
      world_aCRU :: Engine.Core.World.World t_k
      [LclId]
      world_aCRU =
        Engine.Core.World.World
          @ t_k
          (wild_XosP
           `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.GameObject
                                                   t_k>
                   :: GHC.STRef.STRef
                        GHC.Prim.RealWorld (Engine.Core.World.GameObject t_k)
                        ~#
                      GHC.IORef.IORef (Engine.Core.World.GameObject t_k)))
          ww1_sDp4
          ww2_sDp5
          (a_sDqd
           `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.WorldState>
                   :: GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState
                        ~#
                      GHC.IORef.IORef Engine.Core.World.WorldState)) } in
    let {
      a1_sD18
        :: Engine.Core.World.GameObject t_k
           -> GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=2, Str=DmdType LL]
      a1_sD18 =
        \ (tmpPlayer_aCS1 :: Engine.Core.World.GameObject t_k)
          (s_a3Uf :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ (Engine.Core.World.GameObject t_k)
                 var#_XosS
                 (case tmpPlayer_aCS1 of _ {
                    __DEFAULT -> Main.updateStep4 @ t_k;
                    Engine.Core.World.Player ds_dCWN
                                             ds4_dCWO
                                             ds5_dCWP
                                             ds6_dCWQ
                                             ds7_dCWR ->
                      case ds7_dCWR
                      of _ { Engine.Core.World.Input ds8_sDuH ds9_sDuG ds10_sDuF ->
                      Engine.Core.World.Player
                        @ t_k
                        ds_dCWN
                        ds4_dCWO
                        ds5_dCWP
                        ds6_dCWQ
                        (Engine.Core.World.Input @ t_k ds8_sDuH Main.updateStep2 ds10_sDuF)
                      }
                  })
                 s_a3Uf
          of s2#1_XwmU { __DEFAULT ->
          Engine.Object.GameObject.effectfulUpdateAll1
            @ t_k ww1_sDp4 world_aCRU s2#1_XwmU
          } } in
    case ipv5_X3Vm of wild1_Xr {
      Engine.Core.World.Player ds_dwg1
                               ds4_dwg2
                               ds5_dwg3
                               ds6_dwg4
                               ds7_dwg5 ->
        case ((ds6_dwg4 world_aCRU)
              `cast` (<GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_k>>
                      :: GHC.Types.IO (Engine.Core.World.GameObject t_k)
                           ~#
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Engine.Core.World.GameObject t_k #))))
               ipv4_X3Vk
        of _ { (# ipv6_X3Wz, ipv7_X3Vj #) ->
        a1_sD18 ipv7_X3Vj ipv6_X3Wz
        };
      Engine.Core.World.PureEntity ds_dwfX ds4_dwfY ds5_dwfZ ds6_dwg0 ->
        case GHC.Prim.writeMutVar#
               @ GHC.Prim.RealWorld
               @ (Engine.Core.World.GameObject t_k)
               var#_XosS
               (case ds4_dwfY wild1_Xr of _ {
                  __DEFAULT -> Main.updateStep4 @ t_k;
                  Engine.Core.World.Player ds7_dCWN
                                           ds8_dCWO
                                           ds9_dCWP
                                           ds10_dCWQ
                                           ds11_dCWR ->
                    case ds11_dCWR
                    of _ { Engine.Core.World.Input ds12_sDuV ds13_sDuU ds14_sDuT ->
                    Engine.Core.World.Player
                      @ t_k
                      ds7_dCWN
                      ds8_dCWO
                      ds9_dCWP
                      ds10_dCWQ
                      (Engine.Core.World.Input
                         @ t_k ds12_sDuV Main.updateStep2 ds14_sDuT)
                    }
                })
               ipv4_X3Vk
        of s2#1_Xwn7 { __DEFAULT ->
        Engine.Object.GameObject.effectfulUpdateAll1
          @ t_k ww1_sDp4 world_aCRU s2#1_Xwn7
        };
      Engine.Core.World.EffectfulEntity ds_dwg6
                                        ds4_dwg7
                                        ds5_dwg8
                                        ds6_dwg9 ->
        case ((ds4_dwg7 world_aCRU wild1_Xr)
              `cast` (<GHC.Types.NTCo:IO <Engine.Core.World.GameObject t_k>>
                      :: GHC.Types.IO (Engine.Core.World.GameObject t_k)
                           ~#
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Engine.Core.World.GameObject t_k #))))
               ipv4_X3Vk
        of _ { (# ipv6_X3Wx, ipv7_X3Vj #) ->
        a1_sD18 ipv7_X3Vj ipv6_X3Wx
        }
    }
    }
    }
    }
    }
    }

Main.updateStep1 [InlPrag=INLINE[0]]
  :: forall t_k.
     Engine.Core.World.World t_k
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=DmdType U(U(L*)U(L*)U(L*)U(L))L,
 Unf=Unf{Src=Worker=Main.$wa3, TopLvl=True, Arity=2, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_k)
                 (w_sDp1 [Occ=Once!] :: Engine.Core.World.World t_k)
                 (w1_sDpb [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sDp1
                 of _
                 { Engine.Core.World.World ww_sDp3 [Occ=Once]
                                           ww1_sDp4 [Occ=Once]
                                           ww2_sDp5 [Occ=Once]
                                           ww3_sDp6 [Occ=Once] ->
                 case ww3_sDp6
                      `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                              :: GHC.IORef.IORef Engine.Core.World.WorldState
                                   ~#
                                 GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
                 of _ { GHC.STRef.STRef ww5_sDp8 [Occ=Once] ->
                 Main.$wa3 @ t_k ww_sDp3 ww1_sDp4 ww2_sDp5 ww5_sDp8 w1_sDpb
                 }
                 }}]
Main.updateStep1 =
  \ (@ t_k)
    (w_sDp1 :: Engine.Core.World.World t_k)
    (w1_sDpb :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_sDp1
    of _
    { Engine.Core.World.World ww_sDp3 ww1_sDp4 ww2_sDp5 ww3_sDp6 ->
    case ww3_sDp6
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                 :: GHC.IORef.IORef Engine.Core.World.WorldState
                      ~#
                    GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
    of _ { GHC.STRef.STRef ww5_sDuZ ->
    Main.$wa3 @ t_k ww_sDp3 ww1_sDp4 ww2_sDp5 ww5_sDuZ w1_sDpb
    }
    }

Main.updateStep
  :: forall t_aCRL. Engine.Core.World.World t_aCRL -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=DmdType U(U(L*)U(L*)U(L*)U(L))L,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Main.updateStep1
               `cast` (forall t_k.
                       <Engine.Core.World.World t_k> -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (forall t_k.
                           Engine.Core.World.World t_k
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (forall t_k. Engine.Core.World.World t_k -> GHC.Types.IO ()))}]
Main.updateStep =
  Main.updateStep1
  `cast` (forall t_k.
          <Engine.Core.World.World t_k> -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_k.
              Engine.Core.World.World t_k
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_k. Engine.Core.World.World t_k -> GHC.Types.IO ()))

Main.$wa2
  :: forall t_o.
     GHC.Prim.MutVar#
       GHC.Prim.RealWorld (Engine.Core.World.GameObject t_o)
     -> [GHC.IORef.IORef (Engine.Core.World.GameObject t_o)]
     -> [Engine.Graphics.Shaders.ShaderUniform]
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld Engine.Core.World.WorldState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=DmdType LU(L*)U(L*)LL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 0 0 0] 151 0}]
Main.$wa2 =
  \ (@ t_o)
    (ww_sDpk
       :: GHC.Prim.MutVar#
            GHC.Prim.RealWorld (Engine.Core.World.GameObject t_o))
    (ww1_sDpm :: [GHC.IORef.IORef (Engine.Core.World.GameObject t_o)])
    (ww2_sDpn :: [Engine.Graphics.Shaders.ShaderUniform])
    (ww3_sDpq
       :: GHC.Prim.MutVar#
            GHC.Prim.RealWorld Engine.Core.World.WorldState)
    (w_sDpu :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Graphics.Rendering.OpenGL.Raw.ARB.Compatibility.Functions.ptr_glLoadIdentity
           @ (GHC.Types.IO ())
    of _ { GHC.Ptr.FunPtr ds1_aBUm ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aBUl
           ds1_aBUm w_sDpu
    of _ { (# ds2_aBUq #) ->
    case GHC.Prim.readMutVar#
           @ GHC.Prim.RealWorld
           @ (Engine.Core.World.GameObject t_o)
           ww_sDpk
           ds2_aBUq
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Engine.Object.Player.applyTransformations1
           @ t_o ipv1_a3Uj ipv_a3Ui
    of _ { (# ipv2_X3Vo, _ #) ->
    Engine.Graphics.Graphics.$wa
      @ t_o
      ((GHC.STRef.STRef
          @ GHC.Prim.RealWorld @ (Engine.Core.World.GameObject t_o) ww_sDpk)
       `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.GameObject
                                               t_o>
               :: GHC.STRef.STRef
                    GHC.Prim.RealWorld (Engine.Core.World.GameObject t_o)
                    ~#
                  GHC.IORef.IORef (Engine.Core.World.GameObject t_o)))
      ww1_sDpm
      ww2_sDpn
      ww3_sDpq
      ipv2_X3Vo
    }
    }
    }
    }

Main.renderStep1 [InlPrag=INLINE[0]]
  :: forall t_o.
     Engine.Core.World.World t_o
     -> Graphics.UI.GLFW.Types.Window
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=DmdType U(U(L)U(L*)U(L*)U(L))AL,
 Unf=Unf{Src=Worker=Main.$wa2, TopLvl=True, Arity=3, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_o)
                 (w_sDpg [Occ=Once!] :: Engine.Core.World.World t_o)
                 _
                 (w2_sDpu [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sDpg
                 of _
                 { Engine.Core.World.World ww_sDpi [Occ=Once]
                                           ww1_sDpm [Occ=Once]
                                           ww2_sDpn [Occ=Once]
                                           ww3_sDpo [Occ=Once] ->
                 case ww_sDpi
                      `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_o>
                              :: GHC.IORef.IORef (Engine.Core.World.GameObject t_o)
                                   ~#
                                 GHC.STRef.STRef
                                   GHC.Prim.RealWorld (Engine.Core.World.GameObject t_o))
                 of _ { GHC.STRef.STRef ww5_sDpk [Occ=Once] ->
                 case ww3_sDpo
                      `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                              :: GHC.IORef.IORef Engine.Core.World.WorldState
                                   ~#
                                 GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
                 of _ { GHC.STRef.STRef ww7_sDpq [Occ=Once] ->
                 Main.$wa2 @ t_o ww5_sDpk ww1_sDpm ww2_sDpn ww7_sDpq w2_sDpu
                 }
                 }
                 }}]
Main.renderStep1 =
  \ (@ t_o)
    (w_sDpg :: Engine.Core.World.World t_o)
    _
    (w2_sDpu :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_sDpg
    of _
    { Engine.Core.World.World ww_sDpi ww1_sDpm ww2_sDpn ww3_sDpo ->
    case ww_sDpi
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_o>
                 :: GHC.IORef.IORef (Engine.Core.World.GameObject t_o)
                      ~#
                    GHC.STRef.STRef
                      GHC.Prim.RealWorld (Engine.Core.World.GameObject t_o))
    of _ { GHC.STRef.STRef ww5_sDv3 ->
    case ww3_sDpo
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                 :: GHC.IORef.IORef Engine.Core.World.WorldState
                      ~#
                    GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
    of _ { GHC.STRef.STRef ww7_sDv7 ->
    Main.$wa2 @ t_o ww5_sDv3 ww1_sDpm ww2_sDpn ww7_sDv7 w2_sDpu
    }
    }
    }

Main.renderStep
  :: forall t_aCRM.
     Engine.Core.World.World t_aCRM
     -> Graphics.UI.GLFW.Types.Window -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=DmdType U(U(L)U(L*)U(L*)U(L))AL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Main.renderStep1
               `cast` (forall t_o.
                       <Engine.Core.World.World t_o>
                       -> <Graphics.UI.GLFW.Types.Window>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (forall t_o.
                           Engine.Core.World.World t_o
                           -> Graphics.UI.GLFW.Types.Window
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (forall t_o.
                           Engine.Core.World.World t_o
                           -> Graphics.UI.GLFW.Types.Window -> GHC.Types.IO ()))}]
Main.renderStep =
  Main.renderStep1
  `cast` (forall t_o.
          <Engine.Core.World.World t_o>
          -> <Graphics.UI.GLFW.Types.Window>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_o.
              Engine.Core.World.World t_o
              -> Graphics.UI.GLFW.Types.Window
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_o.
              Engine.Core.World.World t_o
              -> Graphics.UI.GLFW.Types.Window -> GHC.Types.IO ()))

Main.keyPressed2 :: forall t_c. Engine.Core.World.GameObject t_c
[GblId, Str=DmdType b]
Main.keyPressed2 =
  \ (@ t_c) ->
    Control.Exception.Base.patError
      @ (Engine.Core.World.GameObject t_c)
      "Main.hs:129:21-47|record update"

Main.$wa1
  :: forall t_c.
     Engine.Core.World.World t_c
     -> Graphics.UI.GLFW.Types.Window
     -> Graphics.UI.GLFW.Types.Key
     -> Graphics.UI.GLFW.Types.KeyState
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=DmdType LLSLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [20 0 70 80 0] 609 90}]
Main.$wa1 =
  \ (@ t_c)
    (w_sDpI :: Engine.Core.World.World t_c)
    (w1_sDpJ :: Graphics.UI.GLFW.Types.Window)
    (w2_sDpK :: Graphics.UI.GLFW.Types.Key)
    (w3_sDpM :: Graphics.UI.GLFW.Types.KeyState)
    (w4_sDpO :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    let {
      $wa4_sDq7
        :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
      [LclId, Arity=1, Str=DmdType L]
      $wa4_sDq7 =
        \ (w5_sDpz :: GHC.Prim.State# GHC.Prim.RealWorld) ->
          case w_sDpI
          of _
          { Engine.Core.World.World ds1_dl11 ds2_dl12 ds3_dl13 ds4_dl14 ->
          case ds1_dl11
               `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_c>
                       :: GHC.IORef.IORef (Engine.Core.World.GameObject t_c)
                            ~#
                          GHC.STRef.STRef
                            GHC.Prim.RealWorld (Engine.Core.World.GameObject t_c))
          of _ { GHC.STRef.STRef var#_sDvb ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld
                 @ (Engine.Core.World.GameObject t_c)
                 var#_sDvb
                 w5_sDpz
          of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ (Engine.Core.World.GameObject t_c)
                 var#_sDvb
                 (case ipv1_a3Uj of _ {
                    __DEFAULT -> Main.keyPressed2 @ t_c;
                    Engine.Core.World.Player ds_dCVP
                                             ds6_dCVQ
                                             ds7_dCVR
                                             ds8_dCVS
                                             ds9_dCVT ->
                      case ds9_dCVT
                      of _ { Engine.Core.World.Input keyMap_sDvh mouse_sDvj lm_sDvi ->
                      case GHC.Base.map
                             @ (Graphics.UI.GLFW.Types.Key,
                                GHC.Types.Bool,
                                Engine.Core.World.World t_c
                                -> Engine.Core.World.GameObject t_c
                                -> GHC.Types.IO (Engine.Core.World.GameObject t_c))
                             @ (Graphics.UI.GLFW.Types.Key,
                                GHC.Types.Bool,
                                Engine.Core.World.World t_c
                                -> Engine.Core.World.GameObject t_c
                                -> GHC.Types.IO (Engine.Core.World.GameObject t_c))
                             (\ (w6_aCSp
                                   :: (Graphics.UI.GLFW.Types.Key,
                                       GHC.Types.Bool,
                                       Engine.Core.World.World t_c
                                       -> Engine.Core.World.GameObject t_c
                                       -> GHC.Types.IO (Engine.Core.World.GameObject t_c))) ->
                                case w6_aCSp of wild4_X14 { (ckey_aCSq, ds10_dCW5, func_aCSr) ->
                                case ckey_aCSq of x1_aCXD { __DEFAULT ->
                                case w2_sDpK of x2_aCXE { __DEFAULT ->
                                case GHC.Prim.==#
                                       (GHC.Prim.dataToTag# @ Graphics.UI.GLFW.Types.Key x1_aCXD)
                                       (GHC.Prim.dataToTag# @ Graphics.UI.GLFW.Types.Key x2_aCXE)
                                of _ {
                                  GHC.Types.False -> wild4_X14;
                                  GHC.Types.True ->
                                    (x2_aCXE,
                                     case w3_sDpM of _ {
                                       __DEFAULT -> GHC.Types.True;
                                       Graphics.UI.GLFW.Types.KeyState'Released -> GHC.Types.False
                                     },
                                     func_aCSr)
                                }
                                }
                                }
                                })
                             keyMap_sDvh
                      of tpl_X6 { __DEFAULT ->
                      Engine.Core.World.Player
                        @ t_c
                        ds_dCVP
                        ds6_dCVQ
                        ds7_dCVR
                        ds8_dCVS
                        (Engine.Core.World.Input @ t_c tpl_X6 mouse_sDvj lm_sDvi)
                      }
                      }
                  })
                 ipv_a3Ui
          of s2#_awlT { __DEFAULT ->
          (# s2#_awlT, GHC.Tuple.() #)
          }
          }
          }
          } } in
    case w2_sDpK of _ {
      __DEFAULT -> $wa4_sDq7 w4_sDpO;
      Graphics.UI.GLFW.Types.Key'Escape ->
        case w3_sDpM of _ {
          __DEFAULT -> $wa4_sDq7 w4_sDpO;
          Graphics.UI.GLFW.Types.KeyState'Pressed ->
            case w1_sDpJ
                 `cast` (<Graphics.UI.GLFW.Types.NTCo:Window>
                         :: Graphics.UI.GLFW.Types.Window
                              ~#
                            GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow)
            of _ { GHC.Ptr.Ptr ww_aDgv ->
            case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwGetInputMode GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                             GHC.Prim.Int# #)}_aDgB
                   ww_aDgv 208897 w4_sDpO
            of _ { (# ds7_aDgE, ds8_aDgF #) ->
            case GHC.Prim.narrow32Int# ds8_aDgF of wild3_aDgH {
              __DEFAULT ->
                case Graphics.UI.GLFW.C.$fCCIntCursorInputMode4 wild3_aDgH
                of wild4_00 {
                };
              212993 ->
                case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwSetInputMode GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aDhe
                       ww_aDgv 208897 212995 ds7_aDgE
                of _ { (# ds10_aDhi #) ->
                (# ds10_aDhi, GHC.Tuple.() #)
                };
              212994 ->
                case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwSetInputMode GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aDhe
                       ww_aDgv 208897 212995 ds7_aDgE
                of _ { (# ds10_aDhi #) ->
                (# ds10_aDhi, GHC.Tuple.() #)
                };
              212995 ->
                case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwSetInputMode GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aDh0
                       ww_aDgv 208897 212993 ds7_aDgE
                of _ { (# ds10_aDh4 #) ->
                (# ds10_aDh4, GHC.Tuple.() #)
                }
            }
            }
            }
        }
    }

Main.keyPressed1 [InlPrag=INLINE[0]]
  :: forall t_c.
     Engine.Core.World.World t_c
     -> Graphics.UI.GLFW.Types.Window
     -> Graphics.UI.GLFW.Types.Key
     -> GHC.Types.Int
     -> Graphics.UI.GLFW.Types.KeyState
     -> Graphics.UI.GLFW.Types.ModifierKeys
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=7,
 Str=DmdType LLSALAL,
 Unf=Unf{Src=Worker=Main.$wa1, TopLvl=True, Arity=7, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ t_c)
                 (w_sDpI [Occ=Once] :: Engine.Core.World.World t_c)
                 (w1_sDpJ [Occ=Once] :: Graphics.UI.GLFW.Types.Window)
                 (w2_sDpK [Occ=Once] :: Graphics.UI.GLFW.Types.Key)
                 _
                 (w4_sDpM [Occ=Once] :: Graphics.UI.GLFW.Types.KeyState)
                 _
                 (w6_sDpO [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$wa1 @ t_c w_sDpI w1_sDpJ w2_sDpK w4_sDpM w6_sDpO}]
Main.keyPressed1 =
  \ (@ t_c)
    (w_sDpI :: Engine.Core.World.World t_c)
    (w1_sDpJ :: Graphics.UI.GLFW.Types.Window)
    (w2_sDpK :: Graphics.UI.GLFW.Types.Key)
    _
    (w4_sDpM :: Graphics.UI.GLFW.Types.KeyState)
    _
    (w6_sDpO :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    Main.$wa1 @ t_c w_sDpI w1_sDpJ w2_sDpK w4_sDpM w6_sDpO

Main.keyPressed
  :: forall t_aCRJ.
     Engine.Core.World.World t_aCRJ -> Graphics.UI.GLFW.KeyCallback
[GblId,
 Arity=7,
 Str=DmdType LLSALAL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Main.keyPressed1
               `cast` (forall t_c.
                       <Engine.Core.World.World t_c>
                       -> <Graphics.UI.GLFW.Types.Window>
                       -> <Graphics.UI.GLFW.Types.Key>
                       -> <GHC.Types.Int>
                       -> <Graphics.UI.GLFW.Types.KeyState>
                       -> <Graphics.UI.GLFW.Types.ModifierKeys>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (forall t_c.
                           Engine.Core.World.World t_c
                           -> Graphics.UI.GLFW.Types.Window
                           -> Graphics.UI.GLFW.Types.Key
                           -> GHC.Types.Int
                           -> Graphics.UI.GLFW.Types.KeyState
                           -> Graphics.UI.GLFW.Types.ModifierKeys
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (forall t_c.
                           Engine.Core.World.World t_c
                           -> Graphics.UI.GLFW.Types.Window
                           -> Graphics.UI.GLFW.Types.Key
                           -> GHC.Types.Int
                           -> Graphics.UI.GLFW.Types.KeyState
                           -> Graphics.UI.GLFW.Types.ModifierKeys
                           -> GHC.Types.IO ()))}]
Main.keyPressed =
  Main.keyPressed1
  `cast` (forall t_c.
          <Engine.Core.World.World t_c>
          -> <Graphics.UI.GLFW.Types.Window>
          -> <Graphics.UI.GLFW.Types.Key>
          -> <GHC.Types.Int>
          -> <Graphics.UI.GLFW.Types.KeyState>
          -> <Graphics.UI.GLFW.Types.ModifierKeys>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_c.
              Engine.Core.World.World t_c
              -> Graphics.UI.GLFW.Types.Window
              -> Graphics.UI.GLFW.Types.Key
              -> GHC.Types.Int
              -> Graphics.UI.GLFW.Types.KeyState
              -> Graphics.UI.GLFW.Types.ModifierKeys
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_c.
              Engine.Core.World.World t_c
              -> Graphics.UI.GLFW.Types.Window
              -> Graphics.UI.GLFW.Types.Key
              -> GHC.Types.Int
              -> Graphics.UI.GLFW.Types.KeyState
              -> Graphics.UI.GLFW.Types.ModifierKeys
              -> GHC.Types.IO ()))

Main.cursorMove2 :: forall t_g. Engine.Core.World.GameObject t_g
[GblId, Str=DmdType b]
Main.cursorMove2 =
  \ (@ t_g) ->
    Control.Exception.Base.patError
      @ (Engine.Core.World.GameObject t_g)
      "Main.hs:111:26-55|record update"

Main.$wa
  :: forall t_g.
     GHC.Prim.MutVar#
       GHC.Prim.RealWorld (Engine.Core.World.GameObject t_g)
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=DmdType LLLL,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=4, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 20 20 0] 139 30}]
Main.$wa =
  \ (@ t_g)
    (ww_sDpX
       :: GHC.Prim.MutVar#
            GHC.Prim.RealWorld (Engine.Core.World.GameObject t_g))
    (w_sDq0 :: GHC.Types.Double)
    (w1_sDq1 :: GHC.Types.Double)
    (w2_sDq2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case GHC.Prim.readMutVar#
           @ GHC.Prim.RealWorld
           @ (Engine.Core.World.GameObject t_g)
           ww_sDpX
           w2_sDq2
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case GHC.Prim.writeMutVar#
           @ GHC.Prim.RealWorld
           @ (Engine.Core.World.GameObject t_g)
           ww_sDpX
           (case ipv1_a3Uj of _ {
              __DEFAULT -> Main.cursorMove2 @ t_g;
              Engine.Core.World.Player ds_dCWi
                                       ds2_dCWj
                                       ds3_dCWk
                                       ds4_dCWl
                                       ds5_dCWm ->
                case ds5_dCWm
                of _ { Engine.Core.World.Input ds6_sDvs ds7_sDvr ds8_sDvq ->
                case ds8_sDvq
                of wild2_sDvz { Engine.Core.Vec.Vec2 xi_sDvx yi_sDvy ->
                case xi_sDvx
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y_sDvC ->
                case yi_sDvy
                     `cast` (<Foreign.C.Types.NTCo:CFloat>
                             :: Foreign.C.Types.CFloat ~# GHC.Types.Float)
                of _ { GHC.Types.F# y1_sDvG ->
                case w_sDq0 of _ { GHC.Types.D# x_a3wP ->
                case w1_sDq1 of _ { GHC.Types.D# x1_X3yb ->
                Engine.Core.World.Player
                  @ t_g
                  ds_dCWi
                  ds2_dCWj
                  ds3_dCWk
                  ds4_dCWl
                  (Engine.Core.World.Input
                     @ t_g
                     ds6_sDvs
                     (Engine.Core.Vec.Vec2
                        @ Graphics.Rendering.OpenGL.Raw.Types.GLfloat
                        ((GHC.Types.F#
                            (GHC.Prim.minusFloat# (GHC.Prim.double2Float# x_a3wP) y_sDvC))
                         `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                 :: GHC.Types.Float ~# Foreign.C.Types.CFloat))
                        ((GHC.Types.F#
                            (GHC.Prim.minusFloat# (GHC.Prim.double2Float# x1_X3yb) y1_sDvG))
                         `cast` (Sym <(Foreign.C.Types.NTCo:CFloat)>
                                 :: GHC.Types.Float ~# Foreign.C.Types.CFloat)))
                     wild2_sDvz)
                }
                }
                }
                }
                }
                }
            })
           ipv_a3Ui
    of s2#_awlT { __DEFAULT ->
    (# s2#_awlT, GHC.Tuple.() #)
    }
    }

Main.cursorMove1 [InlPrag=INLINE[0]]
  :: forall t_g.
     GHC.IORef.IORef (Engine.Core.World.GameObject t_g)
     -> Graphics.UI.GLFW.Types.Window
     -> GHC.Types.Double
     -> GHC.Types.Double
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=DmdType U(L)ALLL,
 Unf=Unf{Src=Worker=Main.$wa, TopLvl=True, Arity=5, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ t_g)
                 (w_sDpV [Occ=Once]
                    :: GHC.IORef.IORef (Engine.Core.World.GameObject t_g))
                 _
                 (w2_sDq0 [Occ=Once] :: GHC.Types.Double)
                 (w3_sDq1 [Occ=Once] :: GHC.Types.Double)
                 (w4_sDq2 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sDpV
                      `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_g>
                              :: GHC.IORef.IORef (Engine.Core.World.GameObject t_g)
                                   ~#
                                 GHC.STRef.STRef
                                   GHC.Prim.RealWorld (Engine.Core.World.GameObject t_g))
                 of _ { GHC.STRef.STRef ww_sDpX [Occ=Once] ->
                 Main.$wa @ t_g ww_sDpX w2_sDq0 w3_sDq1 w4_sDq2
                 }}]
Main.cursorMove1 =
  \ (@ t_g)
    (w_sDpV :: GHC.IORef.IORef (Engine.Core.World.GameObject t_g))
    _
    (w2_sDq0 :: GHC.Types.Double)
    (w3_sDq1 :: GHC.Types.Double)
    (w4_sDq2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case w_sDpV
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_g>
                 :: GHC.IORef.IORef (Engine.Core.World.GameObject t_g)
                      ~#
                    GHC.STRef.STRef
                      GHC.Prim.RealWorld (Engine.Core.World.GameObject t_g))
    of _ { GHC.STRef.STRef ww_sDpX ->
    Main.$wa @ t_g ww_sDpX w2_sDq0 w3_sDq1 w4_sDq2
    }

Main.cursorMove
  :: forall t_aCRK.
     GHC.IORef.IORef (Engine.Core.World.GameObject t_aCRK)
     -> Graphics.UI.GLFW.CursorPosCallback
[GblId,
 Arity=5,
 Str=DmdType U(L)ALLL,
 Unf=Unf{Src=InlineStable, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)
         Tmpl= Main.cursorMove1
               `cast` (forall t_g.
                       <GHC.IORef.IORef (Engine.Core.World.GameObject t_g)>
                       -> <Graphics.UI.GLFW.Types.Window>
                       -> <GHC.Types.Double>
                       -> <GHC.Types.Double>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (forall t_g.
                           GHC.IORef.IORef (Engine.Core.World.GameObject t_g)
                           -> Graphics.UI.GLFW.Types.Window
                           -> GHC.Types.Double
                           -> GHC.Types.Double
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (forall t_g.
                           GHC.IORef.IORef (Engine.Core.World.GameObject t_g)
                           -> Graphics.UI.GLFW.Types.Window
                           -> GHC.Types.Double
                           -> GHC.Types.Double
                           -> GHC.Types.IO ()))}]
Main.cursorMove =
  Main.cursorMove1
  `cast` (forall t_g.
          <GHC.IORef.IORef (Engine.Core.World.GameObject t_g)>
          -> <Graphics.UI.GLFW.Types.Window>
          -> <GHC.Types.Double>
          -> <GHC.Types.Double>
          -> Sym <(GHC.Types.NTCo:IO <()>)>
          :: (forall t_g.
              GHC.IORef.IORef (Engine.Core.World.GameObject t_g)
              -> Graphics.UI.GLFW.Types.Window
              -> GHC.Types.Double
              -> GHC.Types.Double
              -> GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             (forall t_g.
              GHC.IORef.IORef (Engine.Core.World.GameObject t_g)
              -> Graphics.UI.GLFW.Types.Window
              -> GHC.Types.Double
              -> GHC.Types.Double
              -> GHC.Types.IO ()))

Rec {
Main.main2 [Occ=LoopBreaker]
  :: forall t_t2v.
     Graphics.UI.GLFW.Types.Window
     -> Engine.Core.World.World t_t2v
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=3, Str=DmdType LLL]
Main.main2 =
  \ (@ t_t2v)
    (win_aCRP :: Graphics.UI.GLFW.Types.Window)
    (world_aCRQ :: Engine.Core.World.World t_t2v)
    (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case (Graphics.Rendering.OpenGL.Raw.Core31.Functions.ptr_glClear
            @ (Graphics.Rendering.OpenGL.Raw.Types.GLbitfield
               -> GHC.Types.IO ()))
         `cast` (GHC.Ptr.FunPtr
                   (<Foreign.C.Types.NTCo:CUInt> -> <GHC.Types.IO ()>)
                 :: GHC.Ptr.FunPtr (Foreign.C.Types.CUInt -> GHC.Types.IO ())
                      ~#
                    GHC.Ptr.FunPtr (GHC.Word.Word32 -> GHC.Types.IO ()))
    of _ { GHC.Ptr.FunPtr ds3_aD2B ->
    case {__dyn_ccall "" GHC.Prim.Addr#
                -> GHC.Prim.Word#
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aD2G
           ds3_aD2B (__word 16640) eta_B1
    of _ { (# ds7_aD2L #) ->
    case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwPollEvents GHC.Prim.State#
                                                       GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aD3n
           ds7_aD2L
    of _ { (# ds1_aD3q #) ->
    case Graphics.UI.GLFW.pollEvents2 ds1_aD3q
    of _ { (# ipv_a3Ui, _ #) ->
    case world_aCRQ
    of w_XDp5
    { Engine.Core.World.World ww_sDp3 ww1_sDp4 ww2_sDp5 ww3_sDp6 ->
    case ww3_sDp6
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.WorldState>
                 :: GHC.IORef.IORef Engine.Core.World.WorldState
                      ~#
                    GHC.STRef.STRef GHC.Prim.RealWorld Engine.Core.World.WorldState)
    of _ { GHC.STRef.STRef ww5_sDvK ->
    case ww_sDp3
         `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject t_t2v>
                 :: GHC.IORef.IORef (Engine.Core.World.GameObject t_t2v)
                      ~#
                    GHC.STRef.STRef
                      GHC.Prim.RealWorld (Engine.Core.World.GameObject t_t2v))
    of ww6_sDvP { GHC.STRef.STRef ww7_sDvO ->
    case Main.$wa3
           @ t_t2v
           (ww6_sDvP
            `cast` (Sym <(GHC.IORef.NTCo:IORef)> <Engine.Core.World.GameObject
                                                    t_t2v>
                    :: GHC.STRef.STRef
                         GHC.Prim.RealWorld (Engine.Core.World.GameObject t_t2v)
                         ~#
                       GHC.IORef.IORef (Engine.Core.World.GameObject t_t2v)))
           ww1_sDp4
           ww2_sDp5
           ww5_sDvK
           ipv_a3Ui
    of _ { (# ipv2_X3Vu, _ #) ->
    case Main.$wa2
           @ t_t2v ww7_sDvO ww1_sDp4 ww2_sDp5 ww5_sDvK ipv2_X3Vu
    of _ { (# ipv4_X3Vd, _ #) ->
    case win_aCRP
         `cast` (<Graphics.UI.GLFW.Types.NTCo:Window>
                 :: Graphics.UI.GLFW.Types.Window
                      ~#
                    GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow)
    of ds8_aD31 { GHC.Ptr.Ptr ds9_aD34 ->
    case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwSwapBuffers GHC.Prim.Addr#
                                                      -> GHC.Prim.State# GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aD33
           ds9_aD34 ipv4_X3Vd
    of _ { (# ds10_aD38 #) ->
    Main.main2
      @ t_t2v
      (ds8_aD31
       `cast` (Sym <(Graphics.UI.GLFW.Types.NTCo:Window)>
               :: GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow
                    ~#
                  Graphics.UI.GLFW.Types.Window))
      w_XDp5
      ds10_aD38
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
    }
end Rec }

Main.main3
  :: Data.Maybe.Maybe Graphics.UI.GLFW.FramebufferSizeCallback
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Main.main3 =
  Data.Maybe.Just
    @ Graphics.UI.GLFW.FramebufferSizeCallback
    (Engine.Graphics.Graphics.resizeScene1
     `cast` (<Graphics.UI.GLFW.Types.Window>
             -> <GHC.Types.Int>
             -> <GHC.Types.Int>
             -> Sym <(GHC.Types.NTCo:IO <()>)>
             :: (Graphics.UI.GLFW.Types.Window
                 -> GHC.Types.Int
                 -> GHC.Types.Int
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                  ~#
                (Graphics.UI.GLFW.Types.Window
                 -> GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ())))

Main.main5 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Main.main5 = GHC.Types.I# 800

Main.main4 :: GHC.Types.Int
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=False, Expandable=True,
         Guidance=IF_ARGS [] 10 20}]
Main.main4 = GHC.Types.I# 600

Main.main1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 680 0}]
Main.main1 =
  \ (eta_XL :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    case Engine.Graphics.Window.createGLFWWindow1
           Main.main5 Main.main4 eta_XL
    of _ { (# ipv_a3Ui, ipv1_a3Uj #) ->
    case Engine.Graphics.Graphics.initGL1 ipv1_a3Uj ipv_a3Ui
    of _ { (# ipv2_X3Vo, _ #) ->
    case TestVals.mkWorld1 ipv2_X3Vo
    of _ { (# ipv4_X3Vn, ipv5_X3Vp #) ->
    case ipv1_a3Uj
         `cast` (<Graphics.UI.GLFW.Types.NTCo:Window>
                 :: Graphics.UI.GLFW.Types.Window
                      ~#
                    GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow)
    of w_XDhP { GHC.Ptr.Ptr ww_aDhN ->
    case Graphics.UI.GLFW.$wa27
           ww_aDhN
           (Data.Maybe.Just
              @ Graphics.UI.GLFW.KeyCallback
              ((\ (w1_sDpJ :: Graphics.UI.GLFW.Types.Window)
                  (w2_sDpK :: Graphics.UI.GLFW.Types.Key)
                  _
                  (w4_sDpM :: Graphics.UI.GLFW.Types.KeyState)
                  _
                  (w6_sDpO :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  Main.$wa1 @ () ipv5_X3Vp w1_sDpJ w2_sDpK w4_sDpM w6_sDpO)
               `cast` (<Graphics.UI.GLFW.Types.Window>
                       -> <Graphics.UI.GLFW.Types.Key>
                       -> <GHC.Types.Int>
                       -> <Graphics.UI.GLFW.Types.KeyState>
                       -> <Graphics.UI.GLFW.Types.ModifierKeys>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (Graphics.UI.GLFW.Types.Window
                           -> Graphics.UI.GLFW.Types.Key
                           -> GHC.Types.Int
                           -> Graphics.UI.GLFW.Types.KeyState
                           -> Graphics.UI.GLFW.Types.ModifierKeys
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (Graphics.UI.GLFW.Types.Window
                           -> Graphics.UI.GLFW.Types.Key
                           -> GHC.Types.Int
                           -> Graphics.UI.GLFW.Types.KeyState
                           -> Graphics.UI.GLFW.Types.ModifierKeys
                           -> GHC.Types.IO ()))))
           ipv4_X3Vn
    of _ { (# ipv6_X3VF, _ #) ->
    case Graphics.UI.GLFW.$wa26 ww_aDhN Main.main3 ipv6_X3VF
    of _ { (# ipv8_X3VE, _ #) ->
    case Graphics.UI.GLFW.$wa25
           ww_aDhN
           (Data.Maybe.Just
              @ Graphics.UI.GLFW.CursorPosCallback
              (let {
                 w1_sDpV :: GHC.IORef.IORef (Engine.Core.World.GameObject ())
                 [LclId]
                 w1_sDpV =
                   case ipv5_X3Vp
                   of _
                   { Engine.Core.World.World ds6_dl11 ds7_dl12 ds8_dl13 ds9_dl14 ->
                   ds6_dl11
                   } } in
               (\ _
                  (w3_sDq0 :: GHC.Types.Double)
                  (w4_sDq1 :: GHC.Types.Double)
                  (w5_sDq2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                  case w1_sDpV
                       `cast` (<GHC.IORef.NTCo:IORef> <Engine.Core.World.GameObject ()>
                               :: GHC.IORef.IORef (Engine.Core.World.GameObject ())
                                    ~#
                                  GHC.STRef.STRef
                                    GHC.Prim.RealWorld (Engine.Core.World.GameObject ()))
                  of _ { GHC.STRef.STRef ww1_sDpX ->
                  Main.$wa @ () ww1_sDpX w3_sDq0 w4_sDq1 w5_sDq2
                  })
               `cast` (<Graphics.UI.GLFW.Types.Window>
                       -> <GHC.Types.Double>
                       -> <GHC.Types.Double>
                       -> Sym <(GHC.Types.NTCo:IO <()>)>
                       :: (Graphics.UI.GLFW.Types.Window
                           -> GHC.Types.Double
                           -> GHC.Types.Double
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                            ~#
                          (Graphics.UI.GLFW.Types.Window
                           -> GHC.Types.Double -> GHC.Types.Double -> GHC.Types.IO ()))))
           ipv8_X3VE
    of _ { (# ipv10_X3WC, _ #) ->
    case {__pkg_ccall_GC bindings-GLFW-3.0.3.2 glfwSetInputMode GHC.Prim.Addr#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.Int#
                                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld #)}_aDhe
           ww_aDhN 208897 212995 ipv10_X3WC
    of _ { (# ds10_aDhi #) ->
    case Main.main2
           @ ()
           (w_XDhP
            `cast` (Sym <(Graphics.UI.GLFW.Types.NTCo:Window)>
                    :: GHC.Ptr.Ptr Bindings.GLFW.C'GLFWwindow
                         ~#
                       Graphics.UI.GLFW.Types.Window))
           ipv5_X3Vp
           ds10_aDhi
    of _ { (# ipv12_X3Vy, _ #) ->
    Engine.Graphics.Window.$wa ww_aDhN ipv12_X3Vy
    }
    }
    }
    }
    }
    }
    }
    }
    }

Main.main :: GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
Main.main =
  Main.main1
  `cast` (Sym <(GHC.Types.NTCo:IO <()>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             GHC.Types.IO ())

Main.main6
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=1, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0] 30 0}]
Main.main6 =
  \ (eta_XO :: GHC.Prim.State# GHC.Prim.RealWorld) ->
    GHC.TopHandler.runMainIO1
      @ ()
      (Main.main1
       `cast` (Sym <(GHC.Types.NTCo:IO <()>)>
               :: (GHC.Prim.State# GHC.Prim.RealWorld
                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
                    ~#
                  GHC.Types.IO ()))
      eta_XO

:Main.main :: GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=DmdType L,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Arity=0, Value=True,
         ConLike=True, WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(unsat_ok=True,boring_ok=True)}]
:Main.main =
  Main.main6
  `cast` (Sym <(GHC.Types.NTCo:IO <()>)>
          :: (GHC.Prim.State# GHC.Prim.RealWorld
              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #))
               ~#
             GHC.Types.IO ())



Linking Main ...
